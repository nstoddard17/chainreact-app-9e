import { ComponentType } from "react"
import {
  Zap,
  Filter,
  GitBranch,
  Code,
  Mail,
  MessageSquare,
  Send,
  Calendar,
  File,
  Users,
  FileSpreadsheet,
  FileText,
  Plus,
  ShoppingCart,
  Database,
  Upload,
  PenSquare,
  Briefcase,
  Video,
  MailOpen,
  BarChart,
  Repeat,
  AlertTriangle,
  Edit,
} from "lucide-react"

export interface ConfigField {
  name: string
  label: string
  type: "string" | "number" | "boolean" | "select" | "textarea" | "text" | "email" | "password"
  required?: boolean
  placeholder?: string
  options?: { value: string; label: string }[] | string[]
  dynamic?: "slack-channels" | "google-contacts" | "google-calendars" | "google-drive-folders" | "google-drive-files"
  [key: string]: any
}

export interface NodeComponent {
  type: string
  title: string
  description: string
  isTrigger?: boolean
  providerId?: string
  category: string
  configSchema?: ConfigField[]
  icon?: ComponentType<any>
  [key: string]: any
}

export const ALL_NODE_COMPONENTS: NodeComponent[] = [
  // Generic Triggers
  {
    type: "webhook",
    title: "Webhook",
    description: "Receive HTTP requests",
    category: "Triggers",
    isTrigger: true,
    configSchema: [
      { name: "path", label: "Path", type: "text", placeholder: "/webhook-path" },
      { name: "method", label: "HTTP Method", type: "select", options: ["POST", "GET", "PUT"] },
    ],
  },
  {
    type: "schedule",
    title: "Schedule",
    description: "Trigger workflow on a time-based schedule",
    category: "Triggers",
    isTrigger: true,
    configSchema: [
      { name: "cron", label: "Cron Expression", type: "text", placeholder: "0 * * * *" },
      { name: "timezone", label: "Timezone", type: "text", placeholder: "UTC" },
    ],
  },
  {
    type: "manual",
    title: "Manual",
    description: "Manually trigger a workflow",
    icon: Zap,
    category: "Triggers",
    isTrigger: true,
  },

  // Generic Actions
  {
    type: "filter",
    title: "Filter",
    description: "Filter data based on conditions",
    icon: Filter,
    category: "Logic",
    isTrigger: false,
    configSchema: [
      { name: "condition", label: "Condition", type: "textarea", placeholder: "e.g., {{data.value}} > 100" },
    ],
  },
  {
    type: "delay",
    title: "Delay",
    description: "Pause the workflow for a specified amount of time",
    category: "Logic",
    isTrigger: false,
    configSchema: [
      { name: "duration", label: "Duration (seconds)", type: "number", placeholder: "e.g., 60" },
    ],
  },
  {
    type: "conditional",
    title: "Conditional Logic",
    description: "Branch workflow based on conditions",
    icon: GitBranch,
    category: "Logic",
    isTrigger: false,
    configSchema: [
      { name: "condition", label: "Condition", type: "textarea", placeholder: "e.g., {{data.status}} === 'success'" },
    ],
  },
  {
    type: "custom_script",
    title: "Custom Script",
    description: "Run custom Javascript code",
    icon: Code,
    category: "Logic",
    isTrigger: false,
    configSchema: [
      { name: "script", label: "JavaScript Code", type: "textarea", placeholder: "return { value: 1 };" },
    ],
  },
  {
    type: "loop",
    title: "Loop",
    description: "Repeat a set of actions for each item in a list",
    category: "Logic",
    isTrigger: false,
    configSchema: [
      { name: "items", label: "Items to loop over", type: "text", placeholder: "{{data.array}}" },
    ],
  },

  // Gmail
  {
    type: "gmail_trigger_new_email",
    title: "New Email",
    description: "Triggers when a new email is received.",
    isTrigger: true,
    providerId: "gmail",
    category: "Email",
    triggerType: 'webhook',
    configSchema: [
      { name: "from", label: "From", type: "email", placeholder: "Optional: filter by sender" },
      { name: "subject", label: "Subject", type: "text", placeholder: "Optional: filter by subject" },
      { name: "hasAttachment", label: "Has Attachment", type: "select", options: ["any", "yes", "no"] },
    ],
    payloadSchema: {
      id: "The unique ID of the email.",
      threadId: "The ID of the email thread.",
      labelIds: "An array of label IDs applied to the email.",
      snippet: "A short snippet of the email's content.",
      from: "The sender's email address.",
      to: "The recipient's email address.",
      subject: "The subject of the email.",
      body: "The full body of the email (HTML or plain text).",
      attachments: "An array of attachment objects, if any.",
      receivedAt: "The timestamp when the email was received.",
    },
  },
  {
    type: "gmail_trigger_new_attachment",
    title: "New Attachment",
    description: "Triggers when a new email with an attachment is received.",
    isTrigger: true,
    providerId: "gmail",
    category: "Email",
    configSchema: [
      { name: "from", label: "From", type: "email", placeholder: "Optional: filter by sender" },
      { name: "attachmentName", label: "Attachment Name", type: "text", placeholder: "Optional: filter by attachment name" },
    ],
  },
  {
    type: "gmail_trigger_new_label",
    title: "New Label",
    description: "Triggers when a new label is created in Gmail",
    icon: Mail,
    providerId: "gmail",
    category: "Email",
    isTrigger: true,
  },
  {
    type: "gmail_action_send_email",
    title: "Send Email",
    description: "Sends an email from your Gmail account.",
    isTrigger: false,
    providerId: "gmail",
    requiredScopes: ["https://www.googleapis.com/auth/gmail.send"],
    category: "Email",
    configSchema: [
      {
        name: "to",
        label: "To",
        type: "select",
        required: true,
        dynamic: "google-contacts",
      },
      { name: "cc", label: "CC", type: "email", placeholder: "optional: cc@example.com" },
      { name: "bcc", label: "BCC", type: "email", placeholder: "optional: bcc@example.com" },
      { name: "subject", label: "Subject", type: "text", placeholder: "Your email subject", required: true },
      { name: "body", label: "Body", type: "textarea", placeholder: "Your email body", required: true },
      { name: "attachment", label: "Attachment URL", type: "text", placeholder: "Optional: URL to a file" },
    ],
    actionParamsSchema: {
      to: "The email address of the primary recipient.",
      cc: "Comma-separated list of CC recipients.",
      bcc: "Comma-separated list of BCC recipients.",
      subject: "The subject line of the email.",
      body: "The email content, which can be plain text or HTML.",
      attachment: "A URL to a file to be included as an attachment.",
    },
  },

  // Google Calendar
  {
    type: "google_calendar_trigger_new_event",
    title: "New Event (Google Calendar)",
    description: "Triggers when a new event is created",
    isTrigger: true,
    providerId: "google-calendar",
    category: "Productivity",
    configSchema: [
      {
        name: "calendarId",
        label: "Calendar",
        type: "select",
        dynamic: "google-calendars",
        required: true,
      },
    ],
  },
  {
    type: "google_calendar_trigger_event_updated",
    title: "Event Updated",
    description: "Triggers when an existing event is updated",
    isTrigger: true,
    providerId: "google-calendar",
    category: "Productivity",
    configSchema: [
      {
        name: "calendarId",
        label: "Calendar",
        type: "select",
        dynamic: "google-calendars",
        required: true,
      },
    ],
  },
  {
    type: "google_calendar_trigger_event_canceled",
    title: "Event Canceled",
    description: "Triggers when an event is canceled",
    isTrigger: true,
    providerId: "google-calendar",
    category: "Productivity",
    configSchema: [
      {
        name: "calendarId",
        label: "Calendar",
        type: "select",
        dynamic: "google-calendars",
        required: true,
      },
    ],
  },
  {
    type: "google_calendar_action_create_event",
    title: "Create Event (Google Calendar)",
    description: "Create a new calendar event",
    isTrigger: false,
    providerId: "google-calendar",
    requiredScopes: ["https://www.googleapis.com/auth/calendar"],
    category: "Productivity",
    configSchema: [
      {
        name: "calendarId",
        label: "Calendar",
        type: "select",
        dynamic: "google-calendars",
        required: true,
      },
      { name: "title", label: "Title", type: "text", placeholder: "My Event" },
      {
        name: "startTime",
        label: "Start Time (ISO)",
        type: "text",
        placeholder: "e.g., 2024-01-01T10:00:00Z",
      },
      {
        name: "endTime",
        label: "End Time (ISO)",
        type: "text",
        placeholder: "e.g., 2024-01-01T11:00:00Z",
      },
      { name: "description", label: "Description", type: "textarea" },
    ],
  },

  // Google Drive
  {
    type: "google-drive:new_file_in_folder",
    title: "New File in Folder (Google Drive)",
    description: "Triggers when a new file is added to a folder",
    isTrigger: true,
    providerId: "google-drive",
    category: "Google Drive",
    configSchema: [
      {
        name: "folderId",
        label: "Folder",
        type: "select",
        dynamic: "google-drive-folders",
        required: true,
      },
    ],
  },
  {
    type: "google-drive:new_folder_in_folder",
    title: "New Folder in Folder",
    description: "Triggers when a new folder is created inside a specific folder in Google Drive.",
    isTrigger: true,
    providerId: "google-drive",
    category: "Google Drive",
    configSchema: [
      {
        name: "folderId",
        label: "Parent Folder",
        type: "select",
        dynamic: "google-drive-folders",
        required: true,
      },
    ],
  },
  {
    type: "google-drive:file_updated",
    title: "File Updated",
    description: "Triggers when a file in a specific folder is updated",
    isTrigger: true,
    providerId: "google-drive",
    category: "Google Drive",
    configSchema: [
      {
        name: "fileId",
        label: "File",
        type: "select",
        dynamic: "google-drive-files",
        required: true,
      },
    ],
  },
  {
    type: "google-drive:create_file",
    title: "Create File",
    description: "Creates a new file in Google Drive.",
    isTrigger: false,
    providerId: "google-drive",
    category: "Google Drive",
    configSchema: [
      { name: "fileName", label: "File Name", type: "text" },
      { name: "fileContent", label: "File Content", type: "textarea" },
      {
        name: "folderId",
        label: "Folder",
        type: "select",
        dynamic: "google-drive-folders",
        required: false,
        placeholder: "Select a folder (optional)",
      },
    ],
  },

  // Google Sheets
  {
    type: "google_sheets_trigger_new_row",
    title: "New Row (Google Sheets)",
    description: "Triggers when a new row is added to a sheet",
    icon: FileSpreadsheet,
    providerId: "google-sheets",
    category: "Productivity",
    isTrigger: true,
    configSchema: [
      { name: "spreadsheetId", label: "Spreadsheet ID", type: "text" },
      { name: "sheetName", label: "Sheet Name", type: "text" },
    ],
  },
  {
    type: "google_sheets_trigger_new_worksheet",
    title: "New Worksheet",
    description: "Triggers when a new worksheet is created in a spreadsheet",
    icon: FileSpreadsheet,
    providerId: "google-sheets",
    category: "Productivity",
    isTrigger: true,
    configSchema: [
      { name: "spreadsheetId", label: "Spreadsheet ID", type: "text" },
    ],
  },
  {
    type: "google_sheets_trigger_updated_row",
    title: "Updated Row in Sheet",
    description: "Triggers when a row is updated in a Google Sheet.",
    isTrigger: true,
    providerId: "google-sheets",
    category: "Productivity",
    configSchema: [
      { name: "spreadsheetId", label: "Spreadsheet ID", type: "text" },
      { name: "sheetName", label: "Sheet Name", type: "text" },
    ],
  },
  {
    type: "google_sheets_action_append_row",
    title: "Add Row to Sheet",
    description: "Adds a new row to a Google Sheet.",
    isTrigger: false,
    providerId: "google-sheets",
    requiredScopes: ["https://www.googleapis.com/auth/spreadsheets"],
    category: "Productivity",
    configSchema: [
      { name: "spreadsheetId", label: "Spreadsheet ID", type: "text" },
      { name: "sheetName", label: "Sheet Name", type: "text" },
      { name: "rowData", label: "Row Data (JSON array)", type: "textarea", placeholder: 'e.g., ["value1", "value2"]' },
    ],
  },

  // Slack
  {
    type: "slack_trigger_new_message",
    title: "New Message (Slack)",
    description: "Triggers when a new message is posted in a channel",
    icon: MessageSquare,
    providerId: "slack",
    category: "Communication",
    isTrigger: true,
    configSchema: [
      {
        name: "channel",
        label: "Channel",
        type: "select",
        required: true,
        dynamic: "slack-channels",
      },
    ],
  },
  {
    type: "slack_trigger_new_reaction",
    title: "New Reaction",
    description: "Triggers when a reaction is added to a message",
    icon: MessageSquare,
    providerId: "slack",
    category: "Communication",
    isTrigger: true,
    configSchema: [
      {
        name: "channel",
        label: "Channel",
        type: "select",
        required: true,
        dynamic: "slack-channels",
      },
      { name: "emoji", label: "Emoji", type: "text", placeholder: "e.g., :thumbsup:" },
    ],
  },
  {
    type: "slack_action_send_message",
    title: "Send Message (Slack)",
    description: "Send a message to a channel",
    icon: MessageSquare,
    providerId: "slack",
    requiredScopes: ["chat:write"],
    category: "Communication",
    isTrigger: false,
    configSchema: [
      {
        name: "channel",
        label: "Channel",
        type: "select",
        required: true,
        dynamic: "slack-channels",
      },
      { name: "text", label: "Message Text", type: "textarea" },
    ],
  },

  // Notion
  {
    type: "notion_trigger_new_page",
    title: "New Page in Database (Notion)",
    description: "Triggers when a page is added to a database",
    icon: FileText,
    providerId: "notion",
    category: "Productivity",
    isTrigger: true,
  },
  {
    type: "notion_action_create_page",
    title: "Create Page (Notion)",
    description: "Create a new page in Notion",
    icon: Plus,
    providerId: "notion",
    requiredScopes: ["insert"],
    category: "Productivity",
    isTrigger: false,
  },
  {
    type: "notion_action_append_to_page",
    title: "Append to Page (Notion)",
    description: "Append content to an existing page",
    icon: Plus,
    providerId: "notion",
    category: "Productivity",
    isTrigger: false,
  },

  // GitHub
  {
    type: "github_trigger_new_commit",
    title: "New Commit",
    description: "Triggers when a new commit is pushed to a branch.",
    icon: GitBranch,
    providerId: "github",
    category: "Development",
    isTrigger: true,
  },
  {
    type: "github_action_create_issue",
    title: "Create Issue",
    description: "Creates a new issue in a GitHub repository.",
    icon: Plus,
    providerId: "github",
    requiredScopes: ["repo"],
    category: "Development",
    isTrigger: false,
  },

  // Stripe
  {
    type: "stripe_trigger_new_payment",
    title: "New Payment (Stripe)",
    description: "Triggers on a new successful payment",
    icon: ShoppingCart,
    providerId: "stripe",
    category: "Finance",
    isTrigger: true,
  },
  {
    type: "stripe_action_create_customer",
    title: "Create Customer (Stripe)",
    description: "Create a new customer",
    icon: Users,
    providerId: "stripe",
    requiredScopes: ["customer:write"],
    category: "Finance",
    isTrigger: false,
  },

  // HubSpot
  {
    type: "hubspot_trigger_new_contact",
    title: "New Contact (HubSpot)",
    description: "Triggers when a new contact is created",
    icon: Briefcase,
    providerId: "hubspot",
    category: "CRM",
    isTrigger: true,
  },
  {
    type: "hubspot_action_create_contact",
    title: "Create Contact (HubSpot)",
    description: "Create a new contact",
    icon: Plus,
    providerId: "hubspot",
    requiredScopes: ["crm.objects.contacts.write"],
    category: "CRM",
    isTrigger: false,
  },

  // Airtable
  {
    type: "airtable_trigger_new_record",
    title: "New Record (Airtable)",
    description: "Triggers when a new record is created in a base",
    icon: Database,
    providerId: "airtable",
    category: "Productivity",
    isTrigger: true,
  },
  {
    type: "airtable_action_create_record",
    title: "Create Record (Airtable)",
    description: "Create a new record in a table",
    icon: Plus,
    providerId: "airtable",
    requiredScopes: ["data.records:write"],
    category: "Productivity",
    isTrigger: false,
  },

  // Discord
  {
    type: "discord_trigger_new_message",
    title: "New Message in Channel",
    description: "Triggers when a new message is posted in a Discord channel.",
    icon: MessageSquare,
    providerId: "discord",
    category: "Communication",
    isTrigger: true,
  },
  {
    type: "discord_action_send_message",
    title: "Send Channel Message",
    description: "Sends a message to a Discord channel.",
    icon: MessageSquare,
    providerId: "discord",
    requiredScopes: ["bot"],
    category: "Communication",
    isTrigger: false,
  },

  // Microsoft Teams
  {
    type: "teams_trigger_new_message",
    title: "New Message in Channel (Teams)",
    description: "Triggers on a new message in a channel",
    icon: MessageSquare,
    providerId: "teams",
    category: "Communication",
    isTrigger: true,
  },
  {
    type: "teams_action_send_message",
    title: "Send Channel Message (Teams)",
    description: "Send a message to a channel",
    icon: MessageSquare,
    providerId: "teams",
    requiredScopes: ["Chat.ReadWrite"],
    category: "Communication",
    isTrigger: false,
  },
  {
    type: "teams_action_create_meeting",
    title: "Create Meeting (Teams)",
    description: "Create a new online meeting",
    icon: Calendar,
    providerId: "teams",
    requiredScopes: ["OnlineMeetings.ReadWrite"],
    category: "Communication",
    isTrigger: false,
  },
  {
    type: "onedrive_trigger_file_modified",
    title: "File Modified in Folder",
    description: "Triggers when a file is modified in a specific folder.",
    icon: Upload,
    providerId: "onedrive",
    category: "Storage",
    isTrigger: true,
  },
  {
    type: "onedrive_action_upload_file",
    title: "Upload File (OneDrive)",
    description: "Triggers when a new message is posted in a channel",
    icon: Users,
    providerId: "teams",
    category: "Communication",
    isTrigger: true,
  },
  {
    type: "teams_trigger_new_message_in_chat",
    title: "New Message in Chat",
    description: "Triggers when a new message is posted in a chat",
    icon: Users,
    providerId: "teams",
    category: "Communication",
    isTrigger: true,
  },
  {
    type: "teams_trigger_user_joins_team",
    title: "User Joins Team",
    description: "Triggers when a new user joins a team",
    icon: Users,
    providerId: "teams",
    category: "Communication",
    isTrigger: true,
  },
  {
    type: "teams_action_send_message",
    title: "Send Message to Channel (Teams)",
    description: "Send a message to a channel",
    icon: MessageSquare,
    providerId: "teams",
    requiredScopes: ["Chat.ReadWrite"],
    category: "Communication",
    isTrigger: false,
  },

  // Twitter (X)
  {
    type: "twitter_trigger_new_tweet",
    title: "New Tweet by User",
    description: "Triggers when a specific user posts a tweet",
    icon: MessageSquare,
    providerId: "twitter",
    category: "Social",
    isTrigger: true,
  },
  {
    type: "twitter_action_post_tweet",
    title: "Post a Tweet",
    description: "Post a new tweet to your account",
    icon: PenSquare,
    providerId: "twitter",
    requiredScopes: ["tweet.write"],
    category: "Social",
    isTrigger: false,
  },

  // Trello
  {
    type: "trello_trigger_new_card",
    title: "New Card",
    description: "Triggers when a new card is created on a board.",
    icon: Briefcase,
    providerId: "trello",
    category: "Productivity",
    isTrigger: true,
  },
  {
    type: "trello_action_create_card",
    title: "Create Card",
    description: "Creates a new card on a Trello board.",
    icon: Plus,
    providerId: "trello",
    requiredScopes: ["write"],
    category: "Productivity",
    isTrigger: false,
  },

  // Dropbox
  {
    type: "dropbox_trigger_new_file",
    title: "New File (Dropbox)",
    description: "Triggers when a new file is added to a folder",
    icon: Upload,
    providerId: "dropbox",
    category: "Storage",
    isTrigger: true,
  },
  {
    type: "dropbox_action_upload_file",
    title: "Upload File (Dropbox)",
    description: "Upload a file to Dropbox",
    icon: Upload,
    providerId: "dropbox",
    requiredScopes: ["files.content.write"],
    category: "Storage",
    isTrigger: false,
  },

  // YouTube
  {
    type: "youtube_trigger_new_video",
    title: "New Video by Channel",
    description: "Triggers when a new video is uploaded to a channel",
    icon: Video,
    providerId: "youtube",
    category: "Social",
    isTrigger: true,
  },
  {
    type: "youtube_trigger_new_comment",
    title: "New Comment on Video",
    description: "Triggers when a new comment is posted on a video",
    icon: Video,
    providerId: "youtube",
    category: "Social",
    isTrigger: true,
  },
  {
    type: "youtube_action_upload_video",
    title: "Upload Video (YouTube)",
    description: "Upload a new video to your channel",
    icon: Upload,
    providerId: "youtube",
    requiredScopes: ["https://www.googleapis.com/auth/youtube.upload"],
    category: "Social",
    isTrigger: false,
  },

  // Shopify
  {
    type: "shopify_trigger_new_order",
    title: "New Order (Shopify)",
    description: "Triggers when a new order is placed",
    icon: ShoppingCart,
    providerId: "shopify",
    category: "eCommerce",
    isTrigger: true,
  },
  {
    type: "shopify_action_create_product",
    title: "Create Product (Shopify)",
    description: "Create a new product",
    icon: Plus,
    providerId: "shopify",
    requiredScopes: ["write_products"],
    category: "eCommerce",
    isTrigger: false,
  },

  // --- New Triggers from User ---

  // Facebook
  {
    type: "facebook_trigger_new_post",
    title: "New post published",
    description: "Triggers when a new post is published to a Page",
    icon: PenSquare,
    providerId: "facebook",
    category: "Social",
    isTrigger: true,
    requiredScopes: ["pages_read_engagement"],
  },
  {
    type: "facebook_trigger_new_comment",
    title: "New comment on post",
    description: "Triggers when a new comment is made on a Page post",
    icon: MessageSquare,
    providerId: "facebook",
    category: "Social",
    isTrigger: true,
    requiredScopes: ["pages_read_engagement"],
  },

  // Instagram
  {
    type: "instagram_trigger_new_media",
    title: "New photo or video posted",
    description: "Triggers when a new photo or video is posted",
    icon: Video,
    providerId: "instagram",
    category: "Social",
    isTrigger: true,
    requiredScopes: ["user_media"],
  },
  {
    type: "instagram_trigger_new_comment",
    title: "New comment on a post",
    description: "Triggers when a new comment is made on your media",
    icon: MessageSquare,
    providerId: "instagram",
    category: "Social",
    isTrigger: true,
    requiredScopes: ["user_media"],
  },

  // LinkedIn
  {
    type: "linkedin_trigger_new_post",
    title: "New post published",
    description: "Triggers when a new post is published to a company page",
    icon: PenSquare,
    providerId: "linkedin",
    category: "Social",
    isTrigger: true,
    requiredScopes: ["w_member_social"],
  },
  {
    type: "linkedin_trigger_new_comment",
    title: "New comment or reaction",
    description: "Triggers on a new comment or reaction on a company page post",
    icon: MessageSquare,
    providerId: "linkedin",
    category: "Social",
    isTrigger: true,
    requiredScopes: ["w_member_social"],
  },

  // Mailchimp
  {
    type: "mailchimp_trigger_new_subscriber",
    title: "New subscriber added",
    description: "Triggers when a new subscriber is added to an audience",
    icon: Users,
    providerId: "mailchimp",
    category: "Email",
    isTrigger: true,
  },
  {
    type: "mailchimp_trigger_email_opened",
    title: "Email campaign opened",
    description: "Triggers when a subscriber opens an email campaign",
    icon: MailOpen,
    providerId: "mailchimp",
    category: "Email",
    isTrigger: true,
  },

  // Kit
  {
    type: "kit_trigger_new_subscriber",
    title: "New subscriber added",
    description: "Triggers when a new subscriber is added",
    icon: Users,
    providerId: "kit",
    category: "Email",
    isTrigger: true,
  },
  {
    type: "kit_trigger_tag_added",
    title: "Tag added to a subscriber",
    description: "Triggers when a tag is added to a subscriber",
    icon: BarChart,
    providerId: "kit",
    category: "Email",
    isTrigger: true,
  },

  // OneDrive
  {
    type: "onedrive_trigger_new_file",
    title: "New file or folder",
    description: "Triggers when a new file or folder is created",
    icon: Upload,
    providerId: "onedrive",
    category: "Storage",
    isTrigger: true,
    requiredScopes: ["Files.ReadWrite"],
  },
  {
    type: "onedrive_trigger_file_modified",
    title: "File modified",
    description: "Triggers when a file is modified",
    icon: FileText,
    providerId: "onedrive",
    category: "Storage",
    isTrigger: true,
    requiredScopes: ["Files.ReadWrite"],
  },

  // Box
  {
    type: "box_trigger_new_file",
    title: "New file uploaded",
    description: "Triggers when a new file is uploaded to a folder",
    icon: Upload,
    providerId: "box",
    category: "Storage",
    isTrigger: true,
    requiredScopes: ["root_readwrite"],
  },
  {
    type: "box_trigger_new_comment",
    title: "New comment on file",
    description: "Triggers when a new comment is added to a file",
    icon: MessageSquare,
    providerId: "box",
    category: "Storage",
    isTrigger: true,
    requiredScopes: ["root_readwrite"],
  },

  // PayPal
  {
    type: "paypal_trigger_new_payment",
    title: "New successful payment",
    description: "Triggers when a new successful payment is received",
    icon: ShoppingCart,
    providerId: "paypal",
    category: "Finance",
    isTrigger: true,
  },
  {
    type: "paypal_trigger_new_subscription",
    title: "New subscription created",
    description: "Triggers when a new subscription is created",
    icon: Repeat,
    providerId: "paypal",
    category: "Finance",
    isTrigger: true,
  },

  // GitLab
  {
    type: "gitlab_trigger_new_push",
    title: "New push to repository",
    description: "Triggers on a new push to a repository branch",
    icon: GitBranch,
    providerId: "gitlab",
    category: "Development",
    isTrigger: true,
    requiredScopes: ["read_repository"],
  },
  {
    type: "gitlab_trigger_new_issue",
    title: "Issue opened or closed",
    description: "Triggers when an issue is opened or closed",
    icon: AlertTriangle,
    providerId: "gitlab",
    category: "Development",
    isTrigger: true,
    requiredScopes: ["read_repository"],
  },

  // Microsoft Outlook
  {
    type: "microsoft-outlook_trigger_new_email",
    title: "New email received",
    description: "Triggers when a new email is received",
    icon: Mail,
    providerId: "microsoft-outlook",
    category: "Communication",
    isTrigger: true,
    requiredScopes: ["Mail.Read"],
  },
  {
    type: "microsoft-outlook_trigger_email_sent",
    title: "Email sent",
    description: "Triggers when an email is sent",
    icon: Send,
    providerId: "microsoft-outlook",
    category: "Communication",
    isTrigger: true,
    requiredScopes: ["Mail.Send"],
  },

  // Microsoft OneNote
  {
    type: "microsoft-onenote_trigger_new_note",
    title: "New note created",
    description: "Triggers when a new note is created",
    icon: FileText,
    providerId: "microsoft-onenote",
    category: "Productivity",
    isTrigger: true,
    requiredScopes: ["Notes.ReadWrite.All"],
  },
  {
    type: "microsoft-onenote_trigger_note_modified",
    title: "Note modified",
    description: "Triggers when a note is modified",
    icon: Edit,
    providerId: "microsoft-onenote",
    category: "Productivity",
    isTrigger: true,
    requiredScopes: ["Notes.ReadWrite.All"],
  },

  // --- Start of newly added nodes ---

  // Gmail / Outlook Actions
  {
    type: "gmail_action_add_label",
    title: "Add Label (Gmail)",
    description: "Add a label to an email",
    icon: Edit,
    providerId: "gmail",
    category: "Email",
    isTrigger: false,
    requiredScopes: ["https://www.googleapis.com/auth/gmail.modify"],
    configSchema: [
      { name: "messageId", label: "Message ID", type: "text" },
      { name: "labelName", label: "Label Name", type: "text" },
    ],
  },
  {
    type: "gmail_action_archive_email",
    title: "Archive Email (Gmail)",
    description: "Archive an email",
    icon: Edit,
    providerId: "gmail",
    category: "Email",
    isTrigger: false,
    requiredScopes: ["https://www.googleapis.com/auth/gmail.modify"],
    configSchema: [{ name: "messageId", label: "Message ID", type: "text" }],
  },
  {
    type: "gmail_action_search_email",
    title: "Search Email (Gmail)",
    description: "Search for a specific email",
    icon: Edit,
    providerId: "gmail",
    category: "Email",
    isTrigger: false,
    requiredScopes: ["https://www.googleapis.com/auth/gmail.readonly"],
    configSchema: [{ name: "query", label: "Search Query", type: "text" }],
  },
  {
    type: "microsoft-outlook_action_add_folder",
    title: "Add to Folder (Outlook)",
    description: "Move an email to a specific folder",
    icon: Edit,
    providerId: "microsoft-outlook",
    category: "Communication",
    isTrigger: false,
    requiredScopes: ["Mail.ReadWrite"],
    configSchema: [
      { name: "messageId", label: "Message ID", type: "text" },
      { name: "folderName", label: "Folder Name", type: "text" },
    ],
  },
  {
    type: "microsoft-outlook_action_archive_email",
    title: "Archive Email (Outlook)",
    description: "Archive an email",
    icon: Edit,
    providerId: "microsoft-outlook",
    category: "Communication",
    isTrigger: false,
    requiredScopes: ["Mail.ReadWrite"],
    configSchema: [{ name: "messageId", label: "Message ID", type: "text" }],
  },
  {
    type: "microsoft-outlook_action_search_email",
    title: "Search Email (Outlook)",
    description: "Search for a specific email",
    icon: Edit,
    providerId: "microsoft-outlook",
    category: "Communication",
    isTrigger: false,
    requiredScopes: ["Mail.Read"],
    configSchema: [{ name: "query", label: "Search Query", type: "text" }],
  },

  // Teams / Slack / Discord Triggers and Actions
  {
    type: "slack_trigger_slash_command",
    title: "Slash Command (Slack)",
    description: "Triggers when a slash command is used",
    icon: MessageSquare,
    providerId: "slack",
    category: "Communication",
    isTrigger: true,
    configSchema: [{ name: "command", label: "Command", type: "text" }],
  },
  {
    type: "slack_action_post_interactive",
    title: "Post Interactive Blocks (Slack)",
    description: "Post interactive blocks and buttons",
    icon: MessageSquare,
    providerId: "slack",
    category: "Communication",
    isTrigger: false,
    requiredScopes: ["chat:write"],
    configSchema: [
      { name: "channelId", label: "Channel ID", type: "text" },
      { name: "blocks", label: "Blocks (JSON)", type: "textarea" },
    ],
  },
  {
    type: "slack_action_add_reaction",
    title: "Add Reaction (Slack)",
    description: "Add a reaction to a message",
    icon: MessageSquare,
    providerId: "slack",
    category: "Communication",
    isTrigger: false,
    requiredScopes: ["reactions:write"],
    configSchema: [
      { name: "channelId", label: "Channel ID", type: "text" },
      { name: "timestamp", label: "Message Timestamp", type: "text" },
      { name: "reaction", label: "Reaction", type: "text" },
    ],
  },
  {
    type: "discord_trigger_slash_command",
    title: "Slash Command (Discord)",
    description: "Triggers when a slash command is used",
    icon: MessageSquare,
    providerId: "discord",
    category: "Communication",
    isTrigger: true,
    configSchema: [{ name: "command", label: "Command", type: "text" }],
  },
  {
    type: "discord_action_post_interactive",
    title: "Post Interactive Blocks (Discord)",
    description: "Post interactive blocks and buttons",
    icon: MessageSquare,
    providerId: "discord",
    category: "Communication",
    isTrigger: false,
    requiredScopes: ["bot"],
    configSchema: [
      { name: "channelId", label: "Channel ID", type: "text" },
      { name: "embeds", label: "Embeds (JSON)", type: "textarea" },
    ],
  },
  {
    type: "discord_action_add_reaction",
    title: "Add Reaction (Discord)",
    description: "Add a reaction to a message",
    icon: MessageSquare,
    providerId: "discord",
    category: "Communication",
    isTrigger: false,
    requiredScopes: ["bot"],
    configSchema: [
      { name: "channelId", label: "Channel ID", type: "text" },
      { name: "messageId", label: "Message ID", type: "text" },
      { name: "emoji", label: "Emoji", type: "text" },
    ],
  },

  // ManyChat Triggers and Actions
  {
    type: "manychat_trigger_new_subscriber",
    title: "New Subscriber (ManyChat)",
    description: "Triggers when a new subscriber is added",
    icon: Users,
    providerId: "manychat",
    category: "Communication",
    isTrigger: true,
  },
  {
    type: "manychat_action_send_message",
    title: "Send Message (ManyChat)",
    description: "Send a message to a subscriber",
    icon: Send,
    providerId: "manychat",
    category: "Communication",
    isTrigger: false,
  },
  {
    type: "manychat_action_tag_subscriber",
    title: "Tag Subscriber (ManyChat)",
    description: "Add a tag to a subscriber",
    icon: Edit,
    providerId: "manychat",
    category: "Communication",
    isTrigger: false,
  },

  // beehiiv Triggers and Actions
  {
    type: "beehiiv_trigger_new_subscriber",
    title: "New Subscriber (beehiiv)",
    description: "Triggers when a new subscriber is added",
    icon: Users,
    providerId: "beehiiv",
    category: "Communication",
    isTrigger: true,
  },
  {
    type: "beehiiv_action_add_subscriber",
    title: "Add Subscriber (beehiiv)",
    description: "Add a new subscriber",
    icon: Plus,
    providerId: "beehiiv",
    category: "Communication",
    isTrigger: false,
  },
  {
    type: "beehiiv_action_send_newsletter",
    title: "Send Newsletter (beehiiv)",
    description: "Send a newsletter to your subscribers",
    icon: Send,
    providerId: "beehiiv",
    category: "Communication",
    isTrigger: false,
  },

  // New Google Drive Actions
  {
    type: "google_drive_action_upload_file",
    title: "Upload File (Google Drive)",
    description: "Upload a file to Google Drive",
    icon: Upload,
    providerId: "google-drive",
    category: "Storage",
    isTrigger: false,
  },

  // New Google Docs Actions
  {
    type: "google_docs_action_create_document",
    title: "Create Document (Google Docs)",
    description: "Create a new Google Document",
    icon: PenSquare,
    providerId: "google-docs",
    category: "Productivity",
    isTrigger: false,
  },
] 