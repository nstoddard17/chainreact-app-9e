=== Log Session Started: 2025-10-26T04:14:10.823Z ===
Node Version: v23.7.0
Platform: darwin
Working Directory: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e
================================================================================

[2025-10-26T04:14:10.824Z] [INFO   ] File logging initialized
[2025-10-26T04:14:10.824Z] [INFO   ] Log file: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_23-14-10.log
[2025-10-26T04:14:10.832Z] [INFO   ] üìÅ File logging enabled
[2025-10-26T04:14:10.832Z] [INFO   ] üìù Logs will be written to: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_23-14-10.log
[2025-10-26T04:14:10.832Z] [INFO   ] üí° To view logs in real-time: tail -f /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_23-14-10.log
[2025-10-26T04:14:10.832Z] [INFO   ] üí° To view all logs: cat /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_23-14-10.log
[2025-10-26T04:14:10.832Z] [INFO   ] üí° To share logs: Copy the file at /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_23-14-10.log
[2025-10-26T04:14:10.832Z] [INFO   ] --------------------------------------------------------------------------------
[2025-10-26T04:14:10.832Z] [DEBUG  ] üìÅ File logging system initialized
[2025-10-26T04:14:10.841Z] [INFO   ]  [32m[1m‚úì[22m[39m Ready in 2.9s
[2025-10-26T04:14:11.859Z] [INFO   ] 2025-10-26T04:14:11.859Z [DEBUG] ü§ñ Discord bot configured, initializing gateway connection in background...
[2025-10-26T04:14:13.620Z] [INFO   ] 2025-10-26T04:14:13.619Z [DEBUG] Initializing Discord Gateway connection (singleton)...
[2025-10-26T04:14:13.620Z] [INFO   ] 2025-10-26T04:14:13.620Z [DEBUG] üîë Discord bot token loaded
[2025-10-26T04:14:13.843Z] [INFO   ] 2025-10-26T04:14:13.843Z [DEBUG] Discord Gateway initialization complete
[2025-10-26T04:14:13.844Z] [INFO   ] 2025-10-26T04:14:13.844Z [DEBUG] ‚úÖ Discord bot gateway connection initialized
[2025-10-26T04:14:14.057Z] [INFO   ] 2025-10-26T04:14:14.057Z [DEBUG] Discord Gateway WebSocket connection established
[2025-10-26T04:14:14.058Z] [INFO   ] 2025-10-26T04:14:14.058Z [DEBUG] üîë Sending identify with intents: {"GUILDS":true,"GUILD_MEMBERS":true,"GUILD_INVITES":true,"GUILD_MESSAGES":true,"MESSAGE_CONTENT":true,"intentsValue":33347}
[2025-10-26T04:14:14.191Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /middleware in 490ms (233 modules)
[2025-10-26T04:14:14.281Z] [INFO   ] 2025-10-26T04:14:14.281Z [DEBUG] üéâ Discord bot ready! {"sessionId":"d91db3e59fbab092cf298e7dd4de0b84","username":"ChainReact-Bot","userId":"1378595955212812308","guildCount":2}
[2025-10-26T04:14:14.281Z] [INFO   ] 2025-10-26T04:14:14.281Z [DEBUG] üìã Initializing invite cache...
[2025-10-26T04:14:14.282Z] [INFO   ] 2025-10-26T04:14:14.282Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-26T04:14:14.282Z] [INFO   ] 2025-10-26T04:14:14.282Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-26T04:14:14.503Z] [INFO   ] 2025-10-26T04:14:14.502Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12885367103}
[2025-10-26T04:14:14.778Z] [INFO   ] 2025-10-26T04:14:14.778Z [DEBUG] ‚úÖ Cached 3 invites for guild 1378950884045623406
[2025-10-26T04:14:15.034Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /workflows/ai-agent ...
[2025-10-26T04:14:18.092Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /workflows/ai-agent in 3.6s (3725 modules)
[2025-10-26T04:14:18.469Z] [INFO   ] 2025-10-26T04:14:18.469Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:14:18.469Z"}
[2025-10-26T04:14:18.472Z] [INFO   ] 2025-10-26T04:14:18.472Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:14:18.472Z"}
[2025-10-26T04:14:18.472Z] [INFO   ] 2025-10-26T04:14:18.472Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-26T04:14:18.472Z"}
[2025-10-26T04:14:19.045Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 941ms (597 modules)
[2025-10-26T04:14:19.090Z] [INFO   ] 2025-10-26T04:14:19.090Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:14:19.949Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-26T04:14:20.130Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 685ms (3732 modules)
[2025-10-26T04:14:45.124Z] [INFO   ] 2025-10-26T04:14:45.123Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12885397724}
[2025-10-26T04:14:45.438Z] [INFO   ] 2025-10-26T04:14:45.438Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:14:45.438Z"}
[2025-10-26T04:14:45.440Z] [INFO   ] 2025-10-26T04:14:45.440Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:14:45.440Z"}
[2025-10-26T04:14:45.441Z] [INFO   ] 2025-10-26T04:14:45.441Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-26T04:14:45.441Z"}
[2025-10-26T04:14:45.723Z] [INFO   ] 2025-10-26T04:14:45.722Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:14:49.387Z] [INFO   ] 2025-10-26T04:14:49.387Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/08c5b8e6-d989-4518-9725-496441c1cb6d","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12885401988}
[2025-10-26T04:14:49.992Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/integrations ...
[2025-10-26T04:14:52.683Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 3.2s (5925 modules)
[2025-10-26T04:14:52.830Z] [INFO   ] 2025-10-26T04:14:52.830Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-26T04:14:52.830Z","headers":{"referer":"check-console"}}
[2025-10-26T04:14:52.987Z] [INFO   ] 2025-10-26T04:14:52.987Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-26T04:14:53.086Z] [INFO   ] 2025-10-26T04:14:53.086Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-26T04:14:53.659Z] [INFO   ] 2025-10-26T04:14:53.659Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:14:54.733Z] [INFO   ] 2025-10-26T04:14:54.732Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/08c5b8e6-d989-4518-9725-496441c1cb6d","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12885407333}
[2025-10-26T04:14:54.929Z] [INFO   ] 2025-10-26T04:14:54.929Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:14:54.929Z"}
[2025-10-26T04:14:54.940Z] [INFO   ] 2025-10-26T04:14:54.940Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:14:54.940Z"}
[2025-10-26T04:14:54.940Z] [INFO   ] 2025-10-26T04:14:54.940Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-26T04:14:54.940Z"}
[2025-10-26T04:14:55.178Z] [INFO   ] 2025-10-26T04:14:55.178Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:14:55.782Z] [INFO   ] 2025-10-26T04:14:55.782Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-26T04:14:56.387Z] [INFO   ] 2025-10-26T04:14:56.387Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-26T04:14:56.387Z","headers":{"referer":"check-console"}}
[2025-10-26T04:14:56.462Z] [INFO   ] 2025-10-26T04:14:56.461Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-26T04:14:56.571Z] [INFO   ] 2025-10-26T04:14:56.571Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-26T04:14:56.969Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/join ...
[2025-10-26T04:14:57.287Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 823ms (5928 modules)
[2025-10-26T04:14:57.836Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/analyze-request in 367ms (5930 modules)
[2025-10-26T04:14:58.038Z] [INFO   ] 2025-10-26T04:14:58.038Z [INFO] [ANALYZE] Analyzing user request: {"prompt":"when I get an email send it to slack","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-26T04:15:00.767Z] [INFO   ] 2025-10-26T04:15:00.766Z [INFO] [ANALYZE] Analysis complete: {"needsClarification":true,"questions":[{"id":"slack_channel","question":"Which Slack channel would you like to send messages to?","fieldType":"dropdown","dataEndpoint":"/api/integrations/slack/channels","nodeType":"slack_action_send_message","configField":"channel","required":true},{"id":"email_sender_filter","question":"Would you like to filter emails by sender? (Optional)","fieldType":"dropdown","dataEndpoint":"/api/integrations/gmail/senders","nodeType":"gmail_trigger_new_email","configField":"from","required":false,"allowCustom":true,"isMultiSelect":true,"tooltip":"Select one or more recent senders, or type custom email addresses. The workflow will trigger for emails from any of the selected senders."},{"id":"email_keywords_filter","question":"Would you like to filter emails by keywords? (Optional)","fieldType":"text","nodeType":"gmail_trigger_new_email","configField":"keywords","required":false,"tooltip":"Enter keywords to search for in both the subject and body of emails. Examples: 'invoice', 'urgent report', 'meeting'. Separate multiple keywords with commas to match any of them. The workflow will trigger when an email contains any of these keywords in either the subject or body."}],"inferredData":{"email_source":"gmail","reasoning":"User has only Gmail connected","message_template":"New email from {{trigger.from}}\n\nSubject: {{trigger.subject}}\n\nBody:\n{{trigger.body}}"}}
[2025-10-26T04:15:01.476Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/integrations/gmail/senders ...
[2025-10-26T04:15:02.325Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations/gmail/senders in 1444ms (5935 modules)
[2025-10-26T04:15:02.842Z] [INFO   ] 2025-10-26T04:15:02.842Z [INFO] [SLACK CHANNELS] Fetched channels: {"count":3}
[2025-10-26T04:15:03.185Z] [INFO   ] 2025-10-26T04:15:03.185Z [INFO] [GMAIL SENDERS] Fetched senders: {"count":13}
[2025-10-26T04:15:03.245Z] [INFO   ] 2025-10-26T04:15:03.245Z [INFO] [SLACK CHANNELS] Fetched channels: {"count":3}
[2025-10-26T04:15:03.815Z] [INFO   ] 2025-10-26T04:15:03.814Z [INFO] [GMAIL SENDERS] Fetched senders: {"count":13}
[2025-10-26T04:15:05.111Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/ai/stream-workflow ...
[2025-10-26T04:15:05.666Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/stream-workflow in 1056ms (2465 modules)
[2025-10-26T04:15:07.531Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-26T04:15:07.533Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'dropbox',
  'google-drive',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-26T04:15:07.534Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'dropbox',
  'google-drive',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-26T04:15:07.534Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-26T04:15:07.534Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-26T04:15:12.404Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects the arrival of new emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is necessary to fulfill the user\'s request to send the email content to Slack.'
}
],
  connections: 'The workflow starts with the Gmail trigger for new emails, which then connects to the Slack action to send the email content to a designated Slack channel.'
}
[2025-10-26T04:15:12.405Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects the arrival of new emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is necessary to fulfill the user\'s request to send the email content to Slack.'
}
]
[2025-10-26T04:15:12.406Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 0,
  position: { x: 813.6666666666667, y: 80 }
}
[2025-10-26T04:15:12.507Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 1,
  position: { x: 1103.6666666666667, y: 80 }
}
[2025-10-26T04:15:13.463Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761452112406-0)
[2025-10-26T04:15:14.267Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761452112406-0)
[2025-10-26T04:15:14.769Z] [INFO   ] [STREAM] Calling generateNodeConfig for Trigger on New Email...
[2025-10-26T04:15:14.771Z] [INFO   ] [generateNodeConfig] Starting for node: Trigger on New Email
[2025-10-26T04:15:14.771Z] [INFO   ] [generateNodeConfig] nodeComponent: { type: 'gmail_trigger_new_email', providerId: 'gmail' }
[2025-10-26T04:15:14.771Z] [INFO   ] [generateNodeConfig] clarifications received: {}
[2025-10-26T04:15:14.771Z] [INFO   ] [generateNodeConfig] Extracted clarificationEntries: []
[2025-10-26T04:15:14.772Z] [INFO   ] [generateNodeConfig] messageTemplate: undefined
[2025-10-26T04:15:14.772Z] [INFO   ] [generateNodeConfig] Final clarificationContext: NONE
[2025-10-26T04:15:14.772Z] [INFO   ] [generateNodeConfig] Sending prompt to AI...
[2025-10-26T04:15:28.479Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/collaborators ...
[2025-10-26T04:15:28.486Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 508ms (5937 modules)
[2025-10-26T04:16:09.383Z] [INFO   ] 2025-10-26T04:16:09.382Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/08c5b8e6-d989-4518-9725-496441c1cb6d","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12885481983}
[2025-10-26T04:16:10.086Z] [INFO   ] 2025-10-26T04:16:10.086Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:16:10.086Z"}
[2025-10-26T04:16:10.102Z] [INFO   ] 2025-10-26T04:16:10.102Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:16:10.102Z"}
[2025-10-26T04:16:10.102Z] [INFO   ] 2025-10-26T04:16:10.102Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-26T04:16:10.102Z"}
[2025-10-26T04:16:10.196Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-26T04:16:10.197Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-26T04:16:10.198Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-26T04:16:10.370Z] [INFO   ] 2025-10-26T04:16:10.369Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:16:10.994Z] [INFO   ] 2025-10-26T04:16:10.994Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-26T04:16:11.446Z] [INFO   ] 2025-10-26T04:16:11.446Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-26T04:16:11.446Z","headers":{"referer":"check-console"}}
[2025-10-26T04:16:11.608Z] [INFO   ] 2025-10-26T04:16:11.607Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-26T04:16:11.687Z] [INFO   ] 2025-10-26T04:16:11.686Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-26T04:16:12.542Z] [INFO   ] 2025-10-26T04:16:12.542Z [INFO] [ANALYZE] Analyzing user request: {"prompt":"when I get an email send it to slack","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-26T04:16:14.842Z] [INFO   ] 2025-10-26T04:16:14.842Z [INFO] [ANALYZE] Analysis complete: {"needsClarification":true,"questions":[{"id":"slack_channel","question":"Which Slack channel would you like to send messages to?","fieldType":"dropdown","dataEndpoint":"/api/integrations/slack/channels","nodeType":"slack_action_send_message","configField":"channel","required":true},{"id":"email_sender_filter","question":"Would you like to filter emails by sender? (Optional)","fieldType":"dropdown","dataEndpoint":"/api/integrations/gmail/senders","nodeType":"gmail_trigger_new_email","configField":"from","required":false,"allowCustom":true,"isMultiSelect":true,"tooltip":"Select one or more recent senders, or type custom email addresses. The workflow will trigger for emails from any of the selected senders."},{"id":"email_keywords_filter","question":"Would you like to filter emails by keywords? (Optional)","fieldType":"text","nodeType":"gmail_trigger_new_email","configField":"keywords","required":false,"tooltip":"Enter keywords to search for in both the subject and body of emails. Examples: 'invoice', 'urgent report', 'meeting'. Separate multiple keywords with commas to match any of them. The workflow will trigger when an email contains any of these keywords in either the subject or body."}],"inferredData":{"email_source":"gmail","reasoning":"User has only Gmail connected","message_template":"New email from {{trigger.from}}\n\nSubject: {{trigger.subject}}\n\nBody:\n{{trigger.body}}"}}
[2025-10-26T04:16:15.399Z] [INFO   ] 2025-10-26T04:16:15.399Z [INFO] [SLACK CHANNELS] Fetched channels: {"count":3}
[2025-10-26T04:16:15.773Z] [INFO   ] 2025-10-26T04:16:15.773Z [INFO] [SLACK CHANNELS] Fetched channels: {"count":3}
[2025-10-26T04:16:15.916Z] [INFO   ] 2025-10-26T04:16:15.916Z [INFO] [GMAIL SENDERS] Fetched senders: {"count":13}
[2025-10-26T04:16:16.568Z] [INFO   ] 2025-10-26T04:16:16.568Z [INFO] [GMAIL SENDERS] Fetched senders: {"count":13}
[2025-10-26T04:16:19.673Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-26T04:16:19.676Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'dropbox',
  'google-drive',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-26T04:16:19.676Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'dropbox',
  'google-drive',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-26T04:16:19.676Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-26T04:16:19.677Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-26T04:16:25.431Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects the arrival of new emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This action is needed to fulfill the user\'s request to send the email content to Slack.'
}
],
  connections: 'The workflow starts with the Gmail trigger for new emails, which connects directly to the Slack action to send the email content.'
}
[2025-10-26T04:16:25.432Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects the arrival of new emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This action is needed to fulfill the user\'s request to send the email content to Slack.'
}
]
[2025-10-26T04:16:25.432Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 920, height: 852, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2560,
  builderViewportWidth: 1226.6666666666667,
  visibleHeight: 1136,
  availableWidth: 1146.6666666666667,
  nodesPerRow: 2,
  row: 0,
  col: 0,
  position: { x: 388.33333333333337, y: 80 }
}
[2025-10-26T04:16:25.534Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 920, height: 852, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2560,
  builderViewportWidth: 1226.6666666666667,
  visibleHeight: 1136,
  availableWidth: 1146.6666666666667,
  nodesPerRow: 2,
  row: 0,
  col: 1,
  position: { x: 678.3333333333334, y: 80 }
}
[2025-10-26T04:16:26.492Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761452185432-0)
[2025-10-26T04:16:27.293Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761452185432-0)
[2025-10-26T04:16:27.796Z] [INFO   ] [STREAM] Calling generateNodeConfig for Trigger on New Email...
[2025-10-26T04:16:27.798Z] [INFO   ] [generateNodeConfig] Starting for node: Trigger on New Email
[2025-10-26T04:16:27.798Z] [INFO   ] [generateNodeConfig] nodeComponent: { type: 'gmail_trigger_new_email', providerId: 'gmail' }
[2025-10-26T04:16:27.798Z] [INFO   ] [generateNodeConfig] clarifications received: {}
[2025-10-26T04:16:27.799Z] [INFO   ] [generateNodeConfig] Extracted clarificationEntries: []
[2025-10-26T04:16:27.799Z] [INFO   ] [generateNodeConfig] messageTemplate: undefined
[2025-10-26T04:16:27.799Z] [INFO   ] [generateNodeConfig] Final clarificationContext: NONE
[2025-10-26T04:16:27.799Z] [INFO   ] [generateNodeConfig] Sending prompt to AI...
[2025-10-26T04:16:32.279Z] [INFO   ] [generateNodeConfig] AI returned result: {
  "success": true,
  "config": {
    "node_type": "gmail_trigger_new_email",
    "trigger": {
      "email": "{{trigger.email}}",
      "label_ids": [
        "INBOX"
      ],
      "include_spam_trash": false,
      "new_email_filter": {
        "from": "{{previous_node.sender}}",
        "subject": "{{previous_node.subject}}"
      }
    },
    "options": {
      "polling_interval": 5,
      "max_emails": 10
    }
  },
  "reasoning": "The configuration for the 'gmail_trigger_new_email' node is designed to trigger the workflow whenever a new email is received in the user's Gmail account. The 'email' field uses a variable from the previous node to ensure that the trigger is specific to the relevant email context. The 'label_ids' is set to 'INBOX' to focus on new incoming emails, while 'include_spam_trash' is set to false to avoid triggering on unwanted emails. The 'new_email_filter' uses variables for 'from' and 'subject' from a previous node to filter emails based on specific criteria, ensuring that the workflow continues building only when relevant emails are received. The optional fields for 'polling_interval' and 'max_emails' are set to sensible defaults to balance performance and responsiveness."
}
[2025-10-26T04:16:32.279Z] [INFO   ] [generateNodeConfig] Config from AI: {
  "node_type": "gmail_trigger_new_email",
  "trigger": {
    "email": "{{trigger.email}}",
    "label_ids": [
      "INBOX"
    ],
    "include_spam_trash": false,
    "new_email_filter": {
      "from": "{{previous_node.sender}}",
      "subject": "{{previous_node.subject}}"
    }
  },
  "options": {
    "polling_interval": 5,
    "max_emails": 10
  }
}
[2025-10-26T04:16:32.280Z] [INFO   ] [generateNodeConfig] Final config after force-apply: {
  "labelIds": [
    "INBOX"
  ]
}
[2025-10-26T04:16:32.281Z] [INFO   ] [STREAM] generateNodeConfig completed in 4485ms for Trigger on New Email
[2025-10-26T04:16:32.282Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'labelIds' ],
  finalConfigKeys: [ 'labelIds' ],
  fallbackFields: []
}
[2025-10-26T04:16:32.282Z] [INFO   ] [STREAM] Configuring 1 fields for Trigger on New Email: labelIds
[2025-10-26T04:16:32.282Z] [INFO   ] [STREAM] Setting field labelIds = INBOX for Trigger on New Email
[2025-10-26T04:16:33.087Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-26T04:16:34.591Z] [INFO   ] [STREAM] Trigger complete, continuing to next node (loop iteration 0 of 1)
[2025-10-26T04:16:34.894Z] [INFO   ] [STREAM] Completed node 1 of 2, moving to next iteration
[2025-10-26T04:16:34.898Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761452185534-1)
[2025-10-26T04:16:35.701Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761452185534-1)
[2025-10-26T04:16:36.204Z] [INFO   ] [STREAM] Calling generateNodeConfig for Send Message to Slack...
[2025-10-26T04:16:36.205Z] [INFO   ] [generateNodeConfig] Starting for node: Send Message to Slack
[2025-10-26T04:16:36.205Z] [INFO   ] [generateNodeConfig] nodeComponent: { type: 'slack_action_send_message', providerId: 'slack' }
[2025-10-26T04:16:36.205Z] [INFO   ] [generateNodeConfig] clarifications received: {}
[2025-10-26T04:16:36.206Z] [INFO   ] [generateNodeConfig] Extracted clarificationEntries: []
[2025-10-26T04:16:36.206Z] [INFO   ] [generateNodeConfig] messageTemplate: undefined
[2025-10-26T04:16:36.206Z] [INFO   ] [generateNodeConfig] Final clarificationContext: NONE
[2025-10-26T04:16:36.207Z] [INFO   ] [generateNodeConfig] Sending prompt to AI...
[2025-10-26T04:17:06.222Z] [ERROR  ] 2025-10-26T04:17:06.221Z [ERROR] AI call failed: {}
[2025-10-26T04:17:06.224Z] [INFO   ] [generateNodeConfig] AI returned result: {
  "success": false,
  "error": "AI API request timed out after 30 seconds"
}
[2025-10-26T04:17:06.225Z] [INFO   ] [generateNodeConfig] Config from AI: undefined
[2025-10-26T04:17:06.225Z] [INFO   ] [generateNodeConfig] No config from AI, initializing empty config
[2025-10-26T04:17:06.225Z] [INFO   ] [generateNodeConfig] Final config after force-apply: {
  "message": "üìß New email from {{trigger.data.from}}\nSubject: {{trigger.data.subject}}\n\n{{trigger.data.body}}"
}
[2025-10-26T04:17:06.226Z] [INFO   ] [STREAM] generateNodeConfig completed in 30021ms for Send Message to Slack
[2025-10-26T04:17:06.229Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: true,
  configKeys: [ 'message' ],
  finalConfigKeys: [ 'message' ],
  fallbackFields: [ 'message' ]
}
[2025-10-26T04:17:06.229Z] [INFO   ] [STREAM] Configuring 1 fields for Send Message to Slack: message
[2025-10-26T04:17:06.229Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-26T04:17:15.578Z] [INFO   ] [STREAM] Completed node 2 of 2, moving to next iteration
[2025-10-26T04:17:15.579Z] [INFO   ] [STREAM] All nodes configured and tested, sending workflow_complete event
