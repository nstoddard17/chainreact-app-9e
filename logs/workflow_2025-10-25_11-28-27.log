=== Log Session Started: 2025-10-25T16:28:27.485Z ===
Node Version: v23.7.0
Platform: darwin
Working Directory: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e
================================================================================

[2025-10-25T16:28:27.486Z] [INFO   ] File logging initialized
[2025-10-25T16:28:27.486Z] [INFO   ] Log file: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_11-28-27.log
[2025-10-25T16:28:27.491Z] [INFO   ] Deleted old log file: workflow_2025-10-18_10-54-31.log
[2025-10-25T16:28:27.492Z] [INFO   ] Deleted old log file: workflow_2025-10-18_10-53-25.log
[2025-10-25T16:28:27.493Z] [INFO   ] Deleted old log file: workflow_2025-10-18_10-50-42.log
[2025-10-25T16:28:27.494Z] [INFO   ] Deleted old log file: workflow_2025-10-18_10-48-44.log
[2025-10-25T16:28:27.495Z] [INFO   ] Deleted old log file: workflow_2025-10-18_10-04-10.log
[2025-10-25T16:28:27.495Z] [INFO   ] Deleted old log file: workflow_2025-10-18_10-03-39.log
[2025-10-25T16:28:27.497Z] [INFO   ] Deleted old log file: workflow_2025-10-18_09-04-40.log
[2025-10-25T16:28:27.497Z] [INFO   ] üìÅ File logging enabled
[2025-10-25T16:28:27.497Z] [INFO   ] üìù Logs will be written to: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_11-28-27.log
[2025-10-25T16:28:27.497Z] [INFO   ] üí° To view logs in real-time: tail -f /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_11-28-27.log
[2025-10-25T16:28:27.497Z] [INFO   ] üí° To view all logs: cat /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_11-28-27.log
[2025-10-25T16:28:27.497Z] [INFO   ] üí° To share logs: Copy the file at /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_11-28-27.log
[2025-10-25T16:28:27.497Z] [INFO   ] --------------------------------------------------------------------------------
[2025-10-25T16:28:27.497Z] [DEBUG  ] üìÅ File logging system initialized
[2025-10-25T16:28:27.514Z] [INFO   ]  [32m[1m‚úì[22m[39m Ready in 2.8s
[2025-10-25T16:28:28.026Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/integrations ...
[2025-10-25T16:28:28.130Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 603ms (2707 modules)
[2025-10-25T16:28:28.244Z] [INFO   ] 2025-10-25T16:28:28.244Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:28:28.244Z","headers":{"referer":"check-console"}}
[2025-10-25T16:28:28.390Z] [INFO   ] 2025-10-25T16:28:28.390Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:28:28.515Z] [INFO   ] 2025-10-25T16:28:28.515Z [DEBUG] ü§ñ Discord bot configured, initializing gateway connection in background...
[2025-10-25T16:28:30.395Z] [INFO   ] 2025-10-25T16:28:30.395Z [DEBUG] Initializing Discord Gateway connection (singleton)...
[2025-10-25T16:28:30.395Z] [INFO   ] 2025-10-25T16:28:30.395Z [DEBUG] üîë Discord bot token loaded
[2025-10-25T16:28:30.763Z] [INFO   ] 2025-10-25T16:28:30.763Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:28:31.074Z] [INFO   ] 2025-10-25T16:28:31.074Z [DEBUG] Discord Gateway initialization complete
[2025-10-25T16:28:31.074Z] [INFO   ] 2025-10-25T16:28:31.074Z [DEBUG] ‚úÖ Discord bot gateway connection initialized
[2025-10-25T16:28:31.267Z] [INFO   ] 2025-10-25T16:28:31.267Z [DEBUG] Discord Gateway WebSocket connection established
[2025-10-25T16:28:31.267Z] [INFO   ] 2025-10-25T16:28:31.267Z [DEBUG] üîë Sending identify with intents: {"GUILDS":true,"GUILD_MEMBERS":true,"GUILD_INVITES":true,"GUILD_MESSAGES":true,"MESSAGE_CONTENT":true,"intentsValue":33347}
[2025-10-25T16:28:31.457Z] [INFO   ] 2025-10-25T16:28:31.457Z [DEBUG] üéâ Discord bot ready! {"sessionId":"ea15b2c8014a06755d06f4d2dc126329","username":"ChainReact-Bot","userId":"1378595955212812308","guildCount":2}
[2025-10-25T16:28:31.457Z] [INFO   ] 2025-10-25T16:28:31.457Z [DEBUG] üìã Initializing invite cache...
[2025-10-25T16:28:31.459Z] [INFO   ] 2025-10-25T16:28:31.459Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T16:28:31.485Z] [INFO   ] 2025-10-25T16:28:31.485Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T16:28:31.616Z] [INFO   ] 2025-10-25T16:28:31.616Z [DEBUG] ‚úÖ Cached 3 invites for guild 1378950884045623406
[2025-10-25T16:28:34.398Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /middleware in 263ms (233 modules)
[2025-10-25T16:28:34.710Z] [INFO   ] 2025-10-25T16:28:34.709Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843027310}
[2025-10-25T16:28:35.237Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /workflows/ai-agent ...
[2025-10-25T16:28:37.843Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /workflows/ai-agent in 3.1s (3742 modules)
[2025-10-25T16:28:38.231Z] [INFO   ] 2025-10-25T16:28:38.231Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:28:38.231Z"}
[2025-10-25T16:28:38.233Z] [INFO   ] 2025-10-25T16:28:38.233Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:28:38.233Z"}
[2025-10-25T16:28:38.233Z] [INFO   ] 2025-10-25T16:28:38.233Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T16:28:38.233Z"}
[2025-10-25T16:28:38.613Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 754ms (597 modules)
[2025-10-25T16:28:38.628Z] [INFO   ] 2025-10-25T16:28:38.627Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:28:39.769Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T16:28:40.593Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 1345ms (3734 modules)
[2025-10-25T16:28:43.980Z] [INFO   ] 2025-10-25T16:28:43.980Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:28:43.980Z","headers":{"referer":"check-console"}}
[2025-10-25T16:28:44.118Z] [INFO   ] 2025-10-25T16:28:44.118Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:28:44.224Z] [INFO   ] 2025-10-25T16:28:44.223Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:29:22.337Z] [INFO   ] 2025-10-25T16:29:22.336Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/dc9f1dcb-2c64-43fc-8a8a-b9259222fd84","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843074937}
[2025-10-25T16:29:22.913Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /workflows/builder/[id] ...
[2025-10-25T16:29:24.631Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /workflows/builder/[id] in 2.2s (5925 modules)
[2025-10-25T16:29:25.765Z] [INFO   ] 2025-10-25T16:29:25.764Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:29:27.154Z] [INFO   ] 2025-10-25T16:29:27.154Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/dc9f1dcb-2c64-43fc-8a8a-b9259222fd84","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843079754}
[2025-10-25T16:29:27.341Z] [INFO   ] 2025-10-25T16:29:27.341Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:29:27.341Z"}
[2025-10-25T16:29:27.352Z] [INFO   ] 2025-10-25T16:29:27.352Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:29:27.352Z"}
[2025-10-25T16:29:27.352Z] [INFO   ] 2025-10-25T16:29:27.352Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T16:29:27.352Z"}
[2025-10-25T16:29:27.592Z] [INFO   ] 2025-10-25T16:29:27.592Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:29:28.072Z] [INFO   ] 2025-10-25T16:29:28.072Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get a email send it to slack"}
[2025-10-25T16:29:28.662Z] [INFO   ] 2025-10-25T16:29:28.662Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:29:28.662Z","headers":{"referer":"check-console"}}
[2025-10-25T16:29:28.751Z] [INFO   ] 2025-10-25T16:29:28.751Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:29:29.092Z] [INFO   ] 2025-10-25T16:29:29.092Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:29:29.233Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/join ...
[2025-10-25T16:29:29.801Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 1068ms (5928 modules)
[2025-10-25T16:29:30.286Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/stream-workflow in 468ms (2465 modules)
[2025-10-25T16:29:33.220Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T16:29:33.221Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'google-drive',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:29:33.221Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'google-drive',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:29:33.221Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T16:29:33.221Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T16:29:43.424Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow when a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects when the user receives an email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This action is necessary to forward the content of the new email to the user\'s Slack channel.'
}
],
  connections: 'The workflow starts with the Gmail trigger node, which detects a new email. Once triggered, it connects to the Slack action node to send the email content to the specified Slack channel.'
}
[2025-10-25T16:29:43.425Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow when a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects when the user receives an email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This action is necessary to forward the content of the new email to the user\'s Slack channel.'
}
]
[2025-10-25T16:29:43.425Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 0,
  position: { x: 813.6666666666667, y: 80 }
}
[2025-10-25T16:29:43.528Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 1,
  position: { x: 1103.6666666666667, y: 80 }
}
[2025-10-25T16:29:44.482Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761409783425-0)
[2025-10-25T16:29:45.284Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761409783425-0)
[2025-10-25T16:29:51.768Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T16:29:51.768Z] [INFO   ] [STREAM] Configuring 4 fields for Trigger on New Email: node_type, trigger, options, from
[2025-10-25T16:29:51.769Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T16:29:52.070Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T16:29:52.374Z] [INFO   ] [STREAM] Setting field options = [object Object] for Trigger on New Email
[2025-10-25T16:29:52.676Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T16:29:53.480Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T16:29:55.284Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761409783527-1)
[2025-10-25T16:29:56.087Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761409783527-1)
[2025-10-25T16:30:01.087Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/collaborators ...
[2025-10-25T16:30:01.094Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 520ms (5930 modules)
[2025-10-25T16:33:45.874Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.3s (5935 modules)
[2025-10-25T16:33:46.235Z] [INFO   ] 2025-10-25T16:33:46.234Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/dc9f1dcb-2c64-43fc-8a8a-b9259222fd84","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843338835}
[2025-10-25T16:33:46.714Z] [INFO   ] 2025-10-25T16:33:46.713Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:33:47.634Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T16:33:47.824Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 826ms (5923 modules)
[2025-10-25T16:33:48.090Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T16:33:48.443Z] [INFO   ] 2025-10-25T16:33:48.443Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/dc9f1dcb-2c64-43fc-8a8a-b9259222fd84","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843341044}
[2025-10-25T16:33:48.471Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 334ms (4272 modules)
[2025-10-25T16:33:48.577Z] [INFO   ] 2025-10-25T16:33:48.577Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:33:48.577Z","headers":{"referer":"check-console"}}
[2025-10-25T16:33:48.850Z] [INFO   ] 2025-10-25T16:33:48.849Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:33:48.849Z"}
[2025-10-25T16:33:48.862Z] [INFO   ] 2025-10-25T16:33:48.861Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:33:48.861Z"}
[2025-10-25T16:33:48.862Z] [INFO   ] 2025-10-25T16:33:48.862Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T16:33:48.862Z"}
[2025-10-25T16:33:48.936Z] [INFO   ] 2025-10-25T16:33:48.936Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:33:48.956Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T16:33:48.957Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T16:33:48.959Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T16:33:49.038Z] [INFO   ] 2025-10-25T16:33:49.037Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:33:49.111Z] [INFO   ] 2025-10-25T16:33:49.111Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:33:49.723Z] [INFO   ] 2025-10-25T16:33:49.723Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get a email send it to slack"}
[2025-10-25T16:33:50.541Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 441ms (4274 modules)
[2025-10-25T16:33:51.164Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4279 modules)
[2025-10-25T16:33:51.311Z] [INFO   ] 2025-10-25T16:33:51.311Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:33:51.311Z","headers":{"referer":"check-console"}}
[2025-10-25T16:33:51.440Z] [INFO   ] 2025-10-25T16:33:51.439Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:33:51.534Z] [INFO   ] 2025-10-25T16:33:51.534Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:33:54.850Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T16:33:54.852Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'google-drive',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:33:54.852Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'google-drive',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:33:54.852Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T16:33:54.852Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T16:34:12.026Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1609ms (5946 modules)
[2025-10-25T16:34:12.505Z] [INFO   ] 2025-10-25T16:34:12.504Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/dc9f1dcb-2c64-43fc-8a8a-b9259222fd84","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843365105}
[2025-10-25T16:34:12.908Z] [INFO   ] 2025-10-25T16:34:12.908Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:34:26.740Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 816ms (5946 modules)
[2025-10-25T16:34:27.046Z] [INFO   ] 2025-10-25T16:34:27.046Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/dc9f1dcb-2c64-43fc-8a8a-b9259222fd84","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843379647}
[2025-10-25T16:34:27.517Z] [INFO   ] 2025-10-25T16:34:27.517Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:34:27.517Z"}
[2025-10-25T16:34:27.532Z] [INFO   ] 2025-10-25T16:34:27.532Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:34:27.532Z"}
[2025-10-25T16:34:27.532Z] [INFO   ] 2025-10-25T16:34:27.532Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T16:34:27.532Z"}
[2025-10-25T16:34:27.701Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T16:34:27.827Z] [INFO   ] 2025-10-25T16:34:27.827Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:34:28.230Z] [INFO   ] 2025-10-25T16:34:28.230Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get a email send it to slack"}
[2025-10-25T16:34:28.716Z] [INFO   ] 2025-10-25T16:34:28.716Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:34:28.716Z","headers":{"referer":"check-console"}}
[2025-10-25T16:34:28.817Z] [INFO   ] 2025-10-25T16:34:28.817Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:34:28.908Z] [INFO   ] 2025-10-25T16:34:28.907Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:34:31.631Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T16:34:31.632Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'google-drive',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:34:31.632Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'google-drive',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:34:31.633Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T16:34:31.633Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T16:34:37.990Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [
  'channel',
  ' // Default channel, can be changed to a specific channel if needed',
  ' // Message content using variables from the previous node',
  ' // Default to false for attachments',
  ' // Default to false for markdown formatting',
  ' // Default to false for unfurling links',
  ' // Default to false for notifications'
],
  finalConfigKeys: [
  'channel',
  ' // Default channel, can be changed to a specific channel if needed',
  ' // Message content using variables from the previous node',
  ' // Default to false for attachments',
  ' // Default to false for markdown formatting',
  ' // Default to false for unfurling links',
  ' // Default to false for notifications',
  'message'
],
  fallbackFields: [ 'message' ]
}
[2025-10-25T16:34:37.991Z] [INFO   ] [STREAM] Configuring 8 fields for Send Message to Slack: channel,  // Default channel, can be changed to a specific channel if needed,  // Message content using variables from the previous node,  // Default to false for attachments,  // Default to false for markdown formatting,  // Default to false for unfurling links,  // Default to false for notifications, message
[2025-10-25T16:34:37.991Z] [INFO   ] [STREAM] Setting field channel = #general for Send Message to Slack
[2025-10-25T16:34:37.992Z] [ERROR  ] 2025-10-25T16:34:37.992Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T16:35:19.559Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send received emails to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to start the workflow when the user receives an email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to send the content of the received email to the user\'s Slack channel.'
}
],
  connections: 'The workflow starts with the Gmail trigger for a new email, which then connects to the Slack action to send the email content to a channel.'
}
[2025-10-25T16:35:19.560Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to start the workflow when the user receives an email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to send the content of the received email to the user\'s Slack channel.'
}
]
[2025-10-25T16:35:19.562Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 0,
  position: { x: 813.6666666666667, y: 80 }
}
[2025-10-25T16:35:19.664Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 1,
  position: { x: 1103.6666666666667, y: 80 }
}
[2025-10-25T16:35:20.619Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761410119561-0)
[2025-10-25T16:35:21.420Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761410119561-0)
[2025-10-25T16:35:28.008Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'required_fields', 'optional_fields' ],
  finalConfigKeys: [ 'node_type', 'required_fields', 'optional_fields', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T16:35:28.009Z] [INFO   ] [STREAM] Configuring 4 fields for Trigger on New Email: node_type, required_fields, optional_fields, from
[2025-10-25T16:35:28.009Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T16:35:28.311Z] [INFO   ] [STREAM] Setting field required_fields = [object Object] for Trigger on New Email
[2025-10-25T16:35:28.614Z] [INFO   ] [STREAM] Setting field optional_fields = [object Object] for Trigger on New Email
[2025-10-25T16:35:28.917Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T16:35:29.720Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T16:35:31.525Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761410119664-1)
[2025-10-25T16:35:32.327Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761410119664-1)
[2025-10-25T16:35:36.197Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'channel', 'text', 'username', 'icon_emoji', 'link_names' ],
  finalConfigKeys: [
  'channel',
  'text',
  'username',
  'icon_emoji',
  'link_names',
  'message'
],
  fallbackFields: [ 'message' ]
}
[2025-10-25T16:35:36.197Z] [INFO   ] [STREAM] Configuring 6 fields for Send Message to Slack: channel, text, username, icon_emoji, link_names, message
[2025-10-25T16:35:36.197Z] [INFO   ] [STREAM] Setting field channel = #general for Send Message to Slack
[2025-10-25T16:35:36.499Z] [INFO   ] [STREAM] Setting field text = New email received from {{trigger.data.sender}} with subject: {{trigger.data.subject}} for Send Message to Slack
[2025-10-25T16:35:36.801Z] [INFO   ] [STREAM] Setting field username = Email Bot for Send Message to Slack
[2025-10-25T16:35:37.104Z] [INFO   ] [STREAM] Setting field icon_emoji = :email: for Send Message to Slack
[2025-10-25T16:35:37.407Z] [INFO   ] [STREAM] Setting field link_names = true for Send Message to Slack
[2025-10-25T16:35:37.710Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T16:36:19.528Z] [INFO   ] 2025-10-25T16:36:19.528Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843492128}
[2025-10-25T16:36:20.069Z] [INFO   ] 2025-10-25T16:36:20.068Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:36:24.434Z] [INFO   ] 2025-10-25T16:36:24.434Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:36:24.434Z","headers":{"referer":"check-console"}}
[2025-10-25T16:36:24.528Z] [INFO   ] 2025-10-25T16:36:24.528Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:36:24.630Z] [INFO   ] 2025-10-25T16:36:24.630Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:36:33.730Z] [INFO   ] 2025-10-25T16:36:33.729Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/1f72883a-e453-4e4d-b393-6312e34f2a1d","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843506330}
[2025-10-25T16:36:34.061Z] [INFO   ] 2025-10-25T16:36:34.060Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:36:37.829Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T16:36:37.830Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'google-drive',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:36:37.830Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'google-drive',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:36:37.830Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T16:36:37.830Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T16:36:46.050Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This node is essential to initiate the workflow based on the user\'s requirement of receiving new emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is needed to fulfill the user\'s request to send the email content to Slack.'
}
],
  connections: 'The workflow starts with the \'New Email Trigger\' node, which activates when a new email is received. This triggers the \'Send Message to Slack\' node, which sends the email content to the designated Slack channel.'
}
[2025-10-25T16:36:46.050Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This node is essential to initiate the workflow based on the user\'s requirement of receiving new emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is needed to fulfill the user\'s request to send the email content to Slack.'
}
]
[2025-10-25T16:36:46.050Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 0,
  position: { x: 813.6666666666667, y: 80 }
}
[2025-10-25T16:36:46.152Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 1,
  position: { x: 1103.6666666666667, y: 80 }
}
[2025-10-25T16:36:47.108Z] [INFO   ] [STREAM] Preparing New Email Trigger (node-1761410206050-0)
[2025-10-25T16:36:47.910Z] [INFO   ] [STREAM] Starting configuration for New Email Trigger (node-1761410206050-0)
[2025-10-25T16:36:54.770Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'type', 'config' ],
  finalConfigKeys: [ 'type', 'config', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T16:36:54.770Z] [INFO   ] [STREAM] Configuring 3 fields for New Email Trigger: type, config, from
[2025-10-25T16:36:54.770Z] [INFO   ] [STREAM] Setting field type = gmail_trigger_new_email for New Email Trigger
[2025-10-25T16:36:55.072Z] [INFO   ] [STREAM] Setting field config = [object Object] for New Email Trigger
[2025-10-25T16:36:55.377Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for New Email Trigger
[2025-10-25T16:36:56.183Z] [INFO   ] [STREAM] Skipping test for trigger New Email Trigger
[2025-10-25T16:36:57.988Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761410206151-1)
[2025-10-25T16:36:58.789Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761410206151-1)
[2025-10-25T16:39:40.825Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.4s (5935 modules)
[2025-10-25T16:39:41.236Z] [INFO   ] 2025-10-25T16:39:41.236Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/1f72883a-e453-4e4d-b393-6312e34f2a1d","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843693837}
[2025-10-25T16:39:41.612Z] [INFO   ] 2025-10-25T16:39:41.611Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:39:42.335Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 426ms (4270 modules)
[2025-10-25T16:39:43.305Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 269ms (4272 modules)
[2025-10-25T16:39:43.369Z] [INFO   ] 2025-10-25T16:39:43.369Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:39:43.369Z","headers":{"referer":"check-console"}}
[2025-10-25T16:39:43.515Z] [INFO   ] 2025-10-25T16:39:43.515Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:39:43.614Z] [INFO   ] 2025-10-25T16:39:43.614Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:40:04.185Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1239ms (5939 modules)
[2025-10-25T16:40:04.483Z] [INFO   ] 2025-10-25T16:40:04.483Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/1f72883a-e453-4e4d-b393-6312e34f2a1d","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843717084}
[2025-10-25T16:40:04.964Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T16:40:05.277Z] [INFO   ] 2025-10-25T16:40:05.277Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:40:05.277Z"}
[2025-10-25T16:40:05.291Z] [INFO   ] 2025-10-25T16:40:05.291Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:40:05.291Z"}
[2025-10-25T16:40:05.291Z] [INFO   ] 2025-10-25T16:40:05.291Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T16:40:05.291Z"}
[2025-10-25T16:40:05.393Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T16:40:05.418Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T16:40:05.431Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T16:40:05.432Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T16:40:05.678Z] [INFO   ] 2025-10-25T16:40:05.677Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:40:06.312Z] [INFO   ] 2025-10-25T16:40:06.312Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when i get an email send it to slack"}
[2025-10-25T16:40:07.376Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 3s (5935 modules)
[2025-10-25T16:40:08.175Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/auth/profile in 1ms (4278 modules)
[2025-10-25T16:40:10.131Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1848ms (5937 modules)
[2025-10-25T16:40:10.260Z] [INFO   ] 2025-10-25T16:40:10.260Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:40:10.260Z"}
[2025-10-25T16:40:10.260Z] [INFO   ] 2025-10-25T16:40:10.260Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:40:10.260Z"}
[2025-10-25T16:40:10.260Z] [INFO   ] 2025-10-25T16:40:10.260Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T16:40:10.260Z"}
[2025-10-25T16:40:10.394Z] [INFO   ] 2025-10-25T16:40:10.394Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:40:10.394Z","headers":{"referer":"check-console"}}
[2025-10-25T16:40:10.494Z] [ERROR  ] 2025-10-25T16:40:10.494Z [ERROR] Collaboration join error: {}
[2025-10-25T16:40:10.512Z] [INFO   ] 2025-10-25T16:40:10.512Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:40:10.623Z] [INFO   ] 2025-10-25T16:40:10.623Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:40:14.469Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T16:40:14.471Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'google-drive',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:40:14.471Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'google-drive',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:40:14.471Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T16:40:14.471Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T16:40:27.969Z] [INFO   ] 2025-10-25T16:40:27.968Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843740569}
[2025-10-25T16:40:28.489Z] [INFO   ] 2025-10-25T16:40:28.486Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:40:32.445Z] [INFO   ] 2025-10-25T16:40:32.445Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:40:32.445Z","headers":{"referer":"check-console"}}
[2025-10-25T16:40:32.519Z] [INFO   ] 2025-10-25T16:40:32.519Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:40:32.607Z] [INFO   ] 2025-10-25T16:40:32.607Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:40:37.253Z] [INFO   ] 2025-10-25T16:40:37.252Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/12961d34-8cab-4fc2-9c3c-33fdd7b3bbbb","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843749853}
[2025-10-25T16:40:37.666Z] [INFO   ] 2025-10-25T16:40:37.666Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:40:40.690Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T16:40:40.691Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'google-drive',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:40:40.692Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'google-drive',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:40:40.692Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T16:40:40.692Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T16:40:49.078Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send an email received in Gmail to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow when a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This node is necessary to fulfill the user\'s request to send the email content to Slack.'
}
],
  connections: 'The workflow starts with the Gmail trigger node, which activates when a new email is received. This trigger then connects directly to the Slack action node, which sends the email content to the specified Slack channel.'
}
[2025-10-25T16:40:49.079Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow when a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This node is necessary to fulfill the user\'s request to send the email content to Slack.'
}
]
[2025-10-25T16:40:49.079Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 0,
  position: { x: 813.6666666666667, y: 80 }
}
[2025-10-25T16:40:49.181Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 1,
  position: { x: 1103.6666666666667, y: 80 }
}
[2025-10-25T16:40:50.136Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761410449079-0)
[2025-10-25T16:40:50.937Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761410449079-0)
[2025-10-25T16:40:56.563Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [
  'node_type',
  'user_id',
  'label',
  'search_query',
  'include_attachments',
  'mark_as_read',
  'trigger_on',
  'filter_by',
  'notification'
],
  finalConfigKeys: [
  'node_type',
  'user_id',
  'label',
  'search_query',
  'include_attachments',
  'mark_as_read',
  'trigger_on',
  'filter_by',
  'notification',
  'from'
],
  fallbackFields: [ 'from' ]
}
[2025-10-25T16:40:56.564Z] [INFO   ] [STREAM] Configuring 10 fields for Trigger on New Email: node_type, user_id, label, search_query, include_attachments, mark_as_read, trigger_on, filter_by, notification, from
[2025-10-25T16:40:56.564Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T16:40:56.865Z] [INFO   ] [STREAM] Setting field user_id = {{user.id}} for Trigger on New Email
[2025-10-25T16:40:57.168Z] [INFO   ] [STREAM] Setting field label = New Email Trigger for Trigger on New Email
[2025-10-25T16:40:57.471Z] [INFO   ] [STREAM] Setting field search_query = is:unread for Trigger on New Email
[2025-10-25T16:40:57.773Z] [INFO   ] [STREAM] Setting field include_attachments = true for Trigger on New Email
[2025-10-25T16:40:58.075Z] [INFO   ] [STREAM] Setting field mark_as_read = false for Trigger on New Email
[2025-10-25T16:40:58.377Z] [INFO   ] [STREAM] Setting field trigger_on = any for Trigger on New Email
[2025-10-25T16:40:58.680Z] [INFO   ] [STREAM] Setting field filter_by = [object Object] for Trigger on New Email
[2025-10-25T16:40:58.982Z] [INFO   ] [STREAM] Setting field notification = [object Object] for Trigger on New Email
[2025-10-25T16:40:59.284Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T16:41:00.087Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T16:41:01.893Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761410449180-1)
[2025-10-25T16:41:02.696Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761410449180-1)
[2025-10-25T16:42:02.210Z] [ERROR  ] 2025-10-25T16:42:02.209Z [ERROR] AI call failed: {}
[2025-10-25T16:42:02.213Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T16:42:02.213Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T16:42:02.213Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T16:42:02.216Z] [ERROR  ] 2025-10-25T16:42:02.214Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T16:43:49.397Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 3.1s (5935 modules)
[2025-10-25T16:43:49.659Z] [INFO   ] 2025-10-25T16:43:49.659Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/12961d34-8cab-4fc2-9c3c-33fdd7b3bbbb","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843942259}
[2025-10-25T16:43:49.995Z] [INFO   ] 2025-10-25T16:43:49.995Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:43:50.755Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 474ms (4270 modules)
[2025-10-25T16:43:51.730Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 337ms (4272 modules)
[2025-10-25T16:43:51.795Z] [INFO   ] 2025-10-25T16:43:51.795Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:43:51.795Z","headers":{"referer":"check-console"}}
[2025-10-25T16:43:51.864Z] [INFO   ] 2025-10-25T16:43:51.864Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:43:51.961Z] [INFO   ] 2025-10-25T16:43:51.961Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:44:32.445Z] [INFO   ] 2025-10-25T16:44:32.444Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12843985045}
[2025-10-25T16:44:32.683Z] [INFO   ] 2025-10-25T16:44:32.683Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:44:32.683Z"}
[2025-10-25T16:44:32.686Z] [INFO   ] 2025-10-25T16:44:32.686Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:44:32.686Z"}
[2025-10-25T16:44:32.686Z] [INFO   ] 2025-10-25T16:44:32.686Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T16:44:32.686Z"}
[2025-10-25T16:44:32.750Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T16:44:32.750Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T16:44:32.750Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T16:44:32.961Z] [INFO   ] 2025-10-25T16:44:32.960Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:44:33.996Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 457ms (4274 modules)
[2025-10-25T16:44:34.660Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4276 modules)
[2025-10-25T16:44:38.199Z] [INFO   ] 2025-10-25T16:44:38.199Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:44:38.199Z","headers":{"referer":"check-console"}}
[2025-10-25T16:44:38.327Z] [INFO   ] 2025-10-25T16:44:38.327Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:44:38.471Z] [INFO   ] 2025-10-25T16:44:38.470Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:44:48.832Z] [INFO   ] 2025-10-25T16:44:48.832Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/e485562c-50d0-4943-be56-c90bd5748747","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12844001433}
[2025-10-25T16:44:49.302Z] [INFO   ] 2025-10-25T16:44:49.302Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:44:51.089Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 375ms (4277 modules)
[2025-10-25T16:44:53.865Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T16:44:53.866Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-drive',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:44:53.866Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-drive',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:44:53.866Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T16:44:53.866Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T16:45:03.389Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send received emails to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, capturing incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the received email.',
  reasoning: 'This action is needed to relay the email content to Slack, fulfilling the user\'s request.'
}
],
  connections: 'The workflow starts with the Gmail trigger for a new email, which then connects to the Slack action to send the email content as a message.'
}
[2025-10-25T16:45:03.390Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, capturing incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the received email.',
  reasoning: 'This action is needed to relay the email content to Slack, fulfilling the user\'s request.'
}
]
[2025-10-25T16:45:03.390Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 0,
  position: { x: 813.6666666666667, y: 80 }
}
[2025-10-25T16:45:03.491Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 1,
  position: { x: 1103.6666666666667, y: 80 }
}
[2025-10-25T16:45:04.444Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761410703390-0)
[2025-10-25T16:45:05.246Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761410703390-0)
[2025-10-25T16:45:16.414Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T16:45:16.415Z] [INFO   ] [STREAM] Configuring 4 fields for Trigger on New Email: node_type, trigger, options, from
[2025-10-25T16:45:16.415Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T16:45:16.717Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T16:45:17.019Z] [INFO   ] [STREAM] Setting field options = [object Object] for Trigger on New Email
[2025-10-25T16:45:17.321Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T16:45:18.124Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T16:45:19.928Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761410703491-1)
[2025-10-25T16:45:20.730Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761410703491-1)
[2025-10-25T16:45:22.076Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 465ms (4277 modules)
[2025-10-25T16:45:43.049Z] [ERROR  ] 2025-10-25T16:45:43.049Z [ERROR] AI call failed: {}
[2025-10-25T16:45:43.053Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T16:45:43.053Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T16:45:43.053Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T16:45:43.356Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T16:46:00.786Z] [ERROR  ] 2025-10-25T16:46:00.786Z [ERROR] AI call failed: {}
[2025-10-25T16:46:00.788Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T16:46:00.788Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T16:46:00.788Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T16:46:00.788Z] [ERROR  ] 2025-10-25T16:46:00.788Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T16:50:37.974Z] [INFO   ] 2025-10-25T16:50:37.973Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12844350574}
[2025-10-25T16:50:38.469Z] [INFO   ] 2025-10-25T16:50:38.468Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:50:38.468Z"}
[2025-10-25T16:50:38.481Z] [INFO   ] 2025-10-25T16:50:38.480Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:50:38.480Z"}
[2025-10-25T16:50:38.481Z] [INFO   ] 2025-10-25T16:50:38.481Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T16:50:38.481Z"}
[2025-10-25T16:50:39.148Z] [INFO   ] 2025-10-25T16:50:39.146Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:50:43.307Z] [INFO   ] 2025-10-25T16:50:43.306Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:50:43.306Z","headers":{"referer":"check-console"}}
[2025-10-25T16:50:43.429Z] [INFO   ] 2025-10-25T16:50:43.428Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:50:43.548Z] [INFO   ] 2025-10-25T16:50:43.548Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T17:15:34.250Z] [INFO   ] 2025-10-25T17:15:34.249Z [DEBUG] üîë Discord bot token loaded
[2025-10-25T17:15:34.307Z] [INFO   ] 2025-10-25T17:15:34.307Z [DEBUG] Discord Gateway closed, persistent reconnect disabled
[2025-10-25T17:15:34.771Z] [INFO   ] 2025-10-25T17:15:34.770Z [DEBUG] Discord Gateway WebSocket connection established
[2025-10-25T17:15:34.775Z] [INFO   ] 2025-10-25T17:15:34.774Z [DEBUG] üîë Sending identify with intents: {"GUILDS":true,"GUILD_MEMBERS":true,"GUILD_INVITES":true,"GUILD_MESSAGES":true,"MESSAGE_CONTENT":true,"intentsValue":33347}
[2025-10-25T17:15:34.952Z] [INFO   ] 2025-10-25T17:15:34.952Z [DEBUG] üéâ Discord bot ready! {"sessionId":"4bdab91b42a8b33ab3eaaab4f079acc9","username":"ChainReact-Bot","userId":"1378595955212812308","guildCount":2}
[2025-10-25T17:15:34.952Z] [INFO   ] 2025-10-25T17:15:34.952Z [DEBUG] üìã Initializing invite cache...
[2025-10-25T17:15:34.955Z] [INFO   ] 2025-10-25T17:15:34.955Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T17:15:34.964Z] [INFO   ] 2025-10-25T17:15:34.964Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T17:15:35.141Z] [INFO   ] 2025-10-25T17:15:35.141Z [DEBUG] ‚úÖ Cached 3 invites for guild 1378950884045623406

=== Log Session Ended: 2025-10-25T17:49:25.788Z ===
