=== Log Session Started: 2025-10-25T19:07:46.727Z ===
Node Version: v23.7.0
Platform: darwin
Working Directory: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e
================================================================================

[2025-10-25T19:07:46.727Z] [INFO   ] File logging initialized
[2025-10-25T19:07:46.727Z] [INFO   ] Log file: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_14-07-46.log
[2025-10-25T19:07:46.733Z] [INFO   ] Deleted old log file: workflow_2025-10-18_14-05-34.log
[2025-10-25T19:07:46.734Z] [INFO   ] Deleted old log file: workflow_2025-10-18_13-58-37.log
[2025-10-25T19:07:46.734Z] [INFO   ] üìÅ File logging enabled
[2025-10-25T19:07:46.734Z] [INFO   ] üìù Logs will be written to: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_14-07-46.log
[2025-10-25T19:07:46.734Z] [INFO   ] üí° To view logs in real-time: tail -f /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_14-07-46.log
[2025-10-25T19:07:46.734Z] [INFO   ] üí° To view all logs: cat /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_14-07-46.log
[2025-10-25T19:07:46.734Z] [INFO   ] üí° To share logs: Copy the file at /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_14-07-46.log
[2025-10-25T19:07:46.734Z] [INFO   ] --------------------------------------------------------------------------------
[2025-10-25T19:07:46.734Z] [DEBUG  ] üìÅ File logging system initialized
[2025-10-25T19:07:46.747Z] [INFO   ]  [32m[1m‚úì[22m[39m Ready in 3.1s
[2025-10-25T19:07:46.867Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /middleware in 115ms (233 modules)
[2025-10-25T19:07:47.161Z] [INFO   ] 2025-10-25T19:07:47.161Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12852579761}
[2025-10-25T19:07:47.682Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /workflows/ai-agent ...
[2025-10-25T19:07:47.742Z] [INFO   ] 2025-10-25T19:07:47.742Z [DEBUG] ü§ñ Discord bot configured, initializing gateway connection in background...
[2025-10-25T19:07:49.882Z] [INFO   ] 2025-10-25T19:07:49.882Z [DEBUG] Initializing Discord Gateway connection (singleton)...
[2025-10-25T19:07:49.882Z] [INFO   ] 2025-10-25T19:07:49.882Z [DEBUG] üîë Discord bot token loaded
[2025-10-25T19:07:50.223Z] [INFO   ] 2025-10-25T19:07:50.223Z [DEBUG] Discord Gateway initialization complete
[2025-10-25T19:07:50.224Z] [INFO   ] 2025-10-25T19:07:50.224Z [DEBUG] ‚úÖ Discord bot gateway connection initialized
[2025-10-25T19:07:50.574Z] [INFO   ] 2025-10-25T19:07:50.574Z [DEBUG] Discord Gateway WebSocket connection established
[2025-10-25T19:07:50.575Z] [INFO   ] 2025-10-25T19:07:50.575Z [DEBUG] üîë Sending identify with intents: {"GUILDS":true,"GUILD_MEMBERS":true,"GUILD_INVITES":true,"GUILD_MESSAGES":true,"MESSAGE_CONTENT":true,"intentsValue":33347}
[2025-10-25T19:07:51.029Z] [INFO   ] 2025-10-25T19:07:51.029Z [DEBUG] üéâ Discord bot ready! {"sessionId":"b3cb648666e01e3e6dd0ac952e69f266","username":"ChainReact-Bot","userId":"1378595955212812308","guildCount":2}
[2025-10-25T19:07:51.029Z] [INFO   ] 2025-10-25T19:07:51.029Z [DEBUG] üìã Initializing invite cache...
[2025-10-25T19:07:51.030Z] [INFO   ] 2025-10-25T19:07:51.030Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T19:07:51.031Z] [INFO   ] 2025-10-25T19:07:51.031Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T19:07:52.104Z] [INFO   ] 2025-10-25T19:07:52.104Z [DEBUG] ‚úÖ Cached 3 invites for guild 1378950884045623406
[2025-10-25T19:07:53.340Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /workflows/ai-agent in 6.2s (3725 modules)
[2025-10-25T19:07:53.736Z] [INFO   ] 2025-10-25T19:07:53.736Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:07:53.736Z"}
[2025-10-25T19:07:53.739Z] [INFO   ] 2025-10-25T19:07:53.739Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:07:53.739Z"}
[2025-10-25T19:07:53.739Z] [INFO   ] 2025-10-25T19:07:53.739Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T19:07:53.739Z"}
[2025-10-25T19:07:54.146Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 788ms (597 modules)
[2025-10-25T19:07:54.275Z] [INFO   ] 2025-10-25T19:07:54.274Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:07:55.462Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T19:07:56.336Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 1537ms (3732 modules)
[2025-10-25T19:08:00.121Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 355ms (3734 modules)
[2025-10-25T19:08:00.209Z] [INFO   ] 2025-10-25T19:08:00.209Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:08:00.209Z","headers":{"referer":"check-console"}}
[2025-10-25T19:08:00.338Z] [INFO   ] 2025-10-25T19:08:00.338Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:08:00.426Z] [INFO   ] 2025-10-25T19:08:00.426Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:08:01.045Z] [INFO   ] 2025-10-25T19:08:01.045Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/bee4d81b-64ff-4fca-9043-ea43213ba0a4","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12852593646}
[2025-10-25T19:08:01.601Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /workflows/builder/[id] ...
[2025-10-25T19:08:03.945Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /workflows/builder/[id] in 2.8s (5921 modules)
[2025-10-25T19:08:04.942Z] [INFO   ] 2025-10-25T19:08:04.941Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:08:06.010Z] [INFO   ] 2025-10-25T19:08:06.009Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/bee4d81b-64ff-4fca-9043-ea43213ba0a4","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12852598610}
[2025-10-25T19:08:06.222Z] [INFO   ] 2025-10-25T19:08:06.221Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:08:06.221Z"}
[2025-10-25T19:08:06.234Z] [INFO   ] 2025-10-25T19:08:06.234Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:08:06.234Z"}
[2025-10-25T19:08:06.234Z] [INFO   ] 2025-10-25T19:08:06.234Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T19:08:06.234Z"}
[2025-10-25T19:08:06.471Z] [INFO   ] 2025-10-25T19:08:06.470Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:08:06.914Z] [INFO   ] 2025-10-25T19:08:06.913Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T19:08:08.073Z] [INFO   ] 2025-10-25T19:08:08.073Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:08:08.073Z","headers":{"referer":"check-console"}}
[2025-10-25T19:08:08.218Z] [INFO   ] 2025-10-25T19:08:08.218Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:08:08.347Z] [INFO   ] 2025-10-25T19:08:08.347Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:08:08.614Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/join ...
[2025-10-25T19:08:08.759Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 651ms (5924 modules)
[2025-10-25T19:08:09.827Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/ai/stream-workflow ...
[2025-10-25T19:08:09.832Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/stream-workflow in 526ms (2463 modules)
[2025-10-25T19:08:15.003Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T19:08:15.004Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:08:15.005Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:08:15.005Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T19:08:15.005Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T19:08:21.928Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send a notification to a Slack channel whenever they receive a new email.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in the user\'s Gmail account.',
  reasoning: 'This node is essential to initiate the workflow based on the user\'s request to monitor incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to fulfill the user\'s requirement of notifying a Slack channel when a new email is received.'
}
],
  connections: 'The workflow starts with the \'New Email Trigger\' node, which activates when a new email is received. This then connects directly to the \'Send Message to Slack\' node, which sends a notification to Slack about the new email.'
}
[2025-10-25T19:08:21.929Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in the user\'s Gmail account.',
  reasoning: 'This node is essential to initiate the workflow based on the user\'s request to monitor incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to fulfill the user\'s requirement of notifying a Slack channel when a new email is received.'
}
]
[2025-10-25T19:08:21.930Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 0,
  col: 0,
  position: { x: 381, y: 80 }
}
[2025-10-25T19:08:22.032Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 1,
  col: 0,
  position: { x: 381, y: 480 }
}
[2025-10-25T19:08:22.988Z] [INFO   ] [STREAM] Preparing New Email Trigger (node-1761419301929-0)
[2025-10-25T19:08:23.789Z] [INFO   ] [STREAM] Starting configuration for New Email Trigger (node-1761419301929-0)
[2025-10-25T19:08:30.356Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [
  'node_type',
  'description',
  'email_address',
  'label_ids',
  'include_spam_trash',
  'search_string',
  'trigger_on_read',
  'trigger_on_unread'
],
  finalConfigKeys: [
  'node_type',
  'description',
  'email_address',
  'label_ids',
  'include_spam_trash',
  'search_string',
  'trigger_on_read',
  'trigger_on_unread',
  'from'
],
  fallbackFields: [ 'from' ]
}
[2025-10-25T19:08:30.357Z] [INFO   ] [STREAM] Configuring 9 fields for New Email Trigger: node_type, description, email_address, label_ids, include_spam_trash, search_string, trigger_on_read, trigger_on_unread, from
[2025-10-25T19:08:30.357Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for New Email Trigger
[2025-10-25T19:08:30.659Z] [INFO   ] [STREAM] Setting field description = Triggers the workflow when a new email is received in the user's Gmail account. for New Email Trigger
[2025-10-25T19:08:30.962Z] [INFO   ] [STREAM] Setting field email_address = {{trigger.email}} for New Email Trigger
[2025-10-25T19:08:31.265Z] [INFO   ] [STREAM] Setting field label_ids = INBOX for New Email Trigger
[2025-10-25T19:08:31.569Z] [INFO   ] [STREAM] Setting field include_spam_trash = false for New Email Trigger
[2025-10-25T19:08:31.871Z] [INFO   ] [STREAM] Setting field search_string =  for New Email Trigger
[2025-10-25T19:08:32.173Z] [INFO   ] [STREAM] Setting field trigger_on_read = false for New Email Trigger
[2025-10-25T19:08:32.475Z] [INFO   ] [STREAM] Setting field trigger_on_unread = true for New Email Trigger
[2025-10-25T19:08:32.779Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for New Email Trigger
[2025-10-25T19:08:33.583Z] [INFO   ] [STREAM] Skipping test for trigger New Email Trigger
[2025-10-25T19:08:35.388Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761419302031-1)
[2025-10-25T19:08:36.190Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761419302031-1)
[2025-10-25T19:08:39.983Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/collaborators ...
[2025-10-25T19:08:39.987Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 522ms (5926 modules)
[2025-10-25T19:11:03.457Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1807ms (5931 modules)
[2025-10-25T19:11:03.917Z] [INFO   ] 2025-10-25T19:11:03.916Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/bee4d81b-64ff-4fca-9043-ea43213ba0a4","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12852776517}
[2025-10-25T19:11:04.258Z] [INFO   ] 2025-10-25T19:11:04.258Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:11:05.157Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T19:11:05.492Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 948ms (5919 modules)
[2025-10-25T19:11:06.158Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T19:11:06.476Z] [INFO   ] 2025-10-25T19:11:06.476Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/bee4d81b-64ff-4fca-9043-ea43213ba0a4","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12852779077}
[2025-10-25T19:11:06.506Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 353ms (4270 modules)
[2025-10-25T19:11:06.667Z] [INFO   ] 2025-10-25T19:11:06.667Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:11:06.667Z","headers":{"referer":"check-console"}}
[2025-10-25T19:11:06.926Z] [INFO   ] 2025-10-25T19:11:06.925Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:11:06.925Z"}
[2025-10-25T19:11:06.940Z] [INFO   ] 2025-10-25T19:11:06.939Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:11:06.939Z"}
[2025-10-25T19:11:06.940Z] [INFO   ] 2025-10-25T19:11:06.940Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T19:11:06.940Z"}
[2025-10-25T19:11:07.013Z] [INFO   ] 2025-10-25T19:11:07.013Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:11:07.032Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T19:11:07.033Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T19:11:07.034Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T19:11:07.166Z] [INFO   ] 2025-10-25T19:11:07.166Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:11:07.244Z] [INFO   ] 2025-10-25T19:11:07.243Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:11:07.731Z] [INFO   ] 2025-10-25T19:11:07.731Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T19:11:09.284Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/join ...
[2025-10-25T19:11:09.294Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 526ms (4272 modules)
[2025-10-25T19:11:10.172Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4277 modules)
[2025-10-25T19:11:10.323Z] [INFO   ] 2025-10-25T19:11:10.323Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:11:10.323Z","headers":{"referer":"check-console"}}
[2025-10-25T19:11:10.470Z] [INFO   ] 2025-10-25T19:11:10.470Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:11:10.567Z] [INFO   ] 2025-10-25T19:11:10.566Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:11:14.494Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T19:11:14.496Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:11:14.496Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:11:14.496Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T19:11:14.496Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T19:13:38.979Z] [ERROR  ] 2025-10-25T19:13:38.978Z [ERROR] AI call failed: {}
[2025-10-25T19:13:38.980Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T19:13:38.981Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T19:13:38.981Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T19:13:38.981Z] [ERROR  ] 2025-10-25T19:13:38.981Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T19:21:04.368Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to initiate the workflow whenever the user receives an email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to send the content of the received email to the user\'s Slack channel.'
}
],
  connections: 'The workflow starts with the \'New Email Trigger\' node, which activates when a new email is received. This triggers the \'Send Message to Slack\' node, which sends the email content to the designated Slack channel.'
}
[2025-10-25T19:21:04.370Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to initiate the workflow whenever the user receives an email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to send the content of the received email to the user\'s Slack channel.'
}
]
[2025-10-25T19:21:04.371Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 0,
  col: 0,
  position: { x: 381, y: 80 }
}
[2025-10-25T19:21:04.472Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 1,
  col: 0,
  position: { x: 381, y: 480 }
}
[2025-10-25T19:21:05.429Z] [INFO   ] [STREAM] Preparing New Email Trigger (node-1761420064370-0)
[2025-10-25T19:21:06.231Z] [INFO   ] [STREAM] Starting configuration for New Email Trigger (node-1761420064370-0)
[2025-10-25T19:21:17.000Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T19:21:17.001Z] [INFO   ] [STREAM] Configuring 4 fields for New Email Trigger: node_type, trigger, options, from
[2025-10-25T19:21:17.001Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for New Email Trigger
[2025-10-25T19:21:17.303Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for New Email Trigger
[2025-10-25T19:21:17.605Z] [INFO   ] [STREAM] Setting field options = [object Object] for New Email Trigger
[2025-10-25T19:21:17.907Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for New Email Trigger
[2025-10-25T19:21:18.713Z] [INFO   ] [STREAM] Skipping test for trigger New Email Trigger
[2025-10-25T19:21:20.518Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761420064472-1)
[2025-10-25T19:21:21.320Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761420064472-1)
[2025-10-25T19:23:43.949Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1968ms (5931 modules)
[2025-10-25T19:23:44.494Z] [INFO   ] 2025-10-25T19:23:44.493Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/bee4d81b-64ff-4fca-9043-ea43213ba0a4","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12853537094}
[2025-10-25T19:23:44.869Z] [INFO   ] 2025-10-25T19:23:44.868Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:23:45.544Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 385ms (4268 modules)
[2025-10-25T19:23:47.087Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 314ms (4270 modules)
[2025-10-25T19:23:47.149Z] [INFO   ] 2025-10-25T19:23:47.149Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:23:47.149Z","headers":{"referer":"check-console"}}
[2025-10-25T19:23:47.252Z] [INFO   ] 2025-10-25T19:23:47.252Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:23:47.351Z] [INFO   ] 2025-10-25T19:23:47.351Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:24:25.895Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 791ms (5935 modules)
[2025-10-25T19:24:26.160Z] [INFO   ] 2025-10-25T19:24:26.160Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/bee4d81b-64ff-4fca-9043-ea43213ba0a4","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12853578761}
[2025-10-25T19:24:26.771Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T19:24:26.837Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 596ms (4273 modules)
[2025-10-25T19:24:27.324Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4275 modules)
[2025-10-25T19:24:27.633Z] [INFO   ] 2025-10-25T19:24:27.633Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:24:27.633Z"}
[2025-10-25T19:24:27.633Z] [INFO   ] 2025-10-25T19:24:27.633Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:24:27.633Z"}
[2025-10-25T19:24:27.633Z] [INFO   ] 2025-10-25T19:24:27.633Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T19:24:27.633Z"}
[2025-10-25T19:24:27.685Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T19:24:27.746Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T19:24:27.749Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T19:24:27.763Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T19:24:27.874Z] [INFO   ] 2025-10-25T19:24:27.873Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:24:28.187Z] [INFO   ] 2025-10-25T19:24:28.187Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T19:24:28.201Z] [ERROR  ] 2025-10-25T19:24:28.201Z [ERROR] Collaboration join error: {}
[2025-10-25T19:24:29.234Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/auth/profile ...
[2025-10-25T19:24:29.596Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/auth/profile in 916ms (4277 modules)
[2025-10-25T19:24:30.065Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4277 modules)
[2025-10-25T19:24:30.368Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4277 modules)
[2025-10-25T19:24:30.641Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4277 modules)
[2025-10-25T19:24:30.671Z] [INFO   ] 2025-10-25T19:24:30.671Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:24:30.671Z","headers":{"referer":"check-console"}}
[2025-10-25T19:24:30.782Z] [INFO   ] 2025-10-25T19:24:30.782Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:24:30.939Z] [INFO   ] 2025-10-25T19:24:30.939Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:24:34.321Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T19:24:34.322Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:24:34.323Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:24:34.323Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T19:24:34.323Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T19:24:43.326Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 972ms (5942 modules)
[2025-10-25T19:24:43.551Z] [INFO   ] 2025-10-25T19:24:43.550Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/bee4d81b-64ff-4fca-9043-ea43213ba0a4","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12853596151}
[2025-10-25T19:24:43.781Z] [INFO   ] 2025-10-25T19:24:43.781Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:25:14.124Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 924ms (5940 modules)
[2025-10-25T19:25:14.410Z] [INFO   ] 2025-10-25T19:25:14.410Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/bee4d81b-64ff-4fca-9043-ea43213ba0a4","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12853627011}
[2025-10-25T19:25:15.239Z] [INFO   ] 2025-10-25T19:25:15.239Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:25:15.239Z"}
[2025-10-25T19:25:15.252Z] [INFO   ] 2025-10-25T19:25:15.252Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:25:15.252Z"}
[2025-10-25T19:25:15.252Z] [INFO   ] 2025-10-25T19:25:15.252Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T19:25:15.252Z"}
[2025-10-25T19:25:15.933Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T19:25:15.938Z] [INFO   ] 2025-10-25T19:25:15.938Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:25:16.194Z] [INFO   ] 2025-10-25T19:25:16.194Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T19:25:17.449Z] [INFO   ] 2025-10-25T19:25:17.449Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:25:17.449Z","headers":{"referer":"check-console"}}
[2025-10-25T19:25:17.544Z] [INFO   ] 2025-10-25T19:25:17.544Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:25:17.686Z] [INFO   ] 2025-10-25T19:25:17.686Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:25:20.468Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T19:25:20.470Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:25:20.470Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:25:20.470Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T19:25:20.470Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T19:25:29.739Z] [ERROR  ] 2025-10-25T19:25:29.739Z [ERROR] AI call failed: {}
[2025-10-25T19:25:29.742Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T19:25:29.742Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T19:25:29.742Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T19:25:29.743Z] [ERROR  ] 2025-10-25T19:25:29.743Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T19:25:48.516Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 436ms (4277 modules)
[2025-10-25T19:30:50.711Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in the user\'s Gmail account.',
  reasoning: 'This node is essential as it initiates the workflow whenever the user receives a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is needed to relay the email information to Slack, fulfilling the user\'s request.'
}
],
  connections: 'The New Email Trigger node connects directly to the Send Message to Slack node, enabling the workflow to send the email content to Slack as soon as a new email is received.'
}
[2025-10-25T19:30:50.713Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in the user\'s Gmail account.',
  reasoning: 'This node is essential as it initiates the workflow whenever the user receives a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is needed to relay the email information to Slack, fulfilling the user\'s request.'
}
]
[2025-10-25T19:30:50.715Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 0,
  col: 0,
  position: { x: 381, y: 80 }
}
[2025-10-25T19:30:50.817Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 1,
  col: 0,
  position: { x: 381, y: 480 }
}
[2025-10-25T19:30:51.773Z] [INFO   ] [STREAM] Preparing New Email Trigger (node-1761420650714-0)
[2025-10-25T19:30:52.575Z] [INFO   ] [STREAM] Starting configuration for New Email Trigger (node-1761420650714-0)
[2025-10-25T19:30:59.902Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'advanced_options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'advanced_options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T19:30:59.903Z] [INFO   ] [STREAM] Configuring 4 fields for New Email Trigger: node_type, trigger, advanced_options, from
[2025-10-25T19:30:59.903Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for New Email Trigger
[2025-10-25T19:31:00.206Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for New Email Trigger
[2025-10-25T19:31:00.508Z] [INFO   ] [STREAM] Setting field advanced_options = [object Object] for New Email Trigger
[2025-10-25T19:31:00.810Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for New Email Trigger
[2025-10-25T19:31:01.615Z] [INFO   ] [STREAM] Skipping test for trigger New Email Trigger
[2025-10-25T19:31:03.420Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761420650816-1)
[2025-10-25T19:31:04.222Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761420650816-1)
[2025-10-25T19:31:08.706Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'channel', 'text', 'username', 'icon_emoji', 'link_names' ],
  finalConfigKeys: [
  'channel',
  'text',
  'username',
  'icon_emoji',
  'link_names',
  'message'
],
  fallbackFields: [ 'message' ]
}
[2025-10-25T19:31:08.707Z] [INFO   ] [STREAM] Configuring 6 fields for Send Message to Slack: channel, text, username, icon_emoji, link_names, message
[2025-10-25T19:31:08.707Z] [INFO   ] [STREAM] Setting field channel = #general for Send Message to Slack
[2025-10-25T19:31:09.009Z] [INFO   ] [STREAM] Setting field text = New email received from: {{trigger.data.from}} 
 Subject: {{trigger.data.subject}} 
 Body: {{trigger.data.body}} for Send Message to Slack
[2025-10-25T19:31:09.312Z] [INFO   ] [STREAM] Setting field username = Email Notifier for Send Message to Slack
[2025-10-25T19:31:09.614Z] [INFO   ] [STREAM] Setting field icon_emoji = :email: for Send Message to Slack
[2025-10-25T19:31:09.916Z] [INFO   ] [STREAM] Setting field link_names = true for Send Message to Slack
[2025-10-25T19:31:10.216Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T19:35:57.980Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2s (5933 modules)
[2025-10-25T19:35:58.452Z] [INFO   ] 2025-10-25T19:35:58.451Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/bee4d81b-64ff-4fca-9043-ea43213ba0a4","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12854271052}
[2025-10-25T19:35:58.851Z] [INFO   ] 2025-10-25T19:35:58.851Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:35:59.560Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 440ms (4270 modules)
[2025-10-25T19:36:01.219Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 301ms (4272 modules)
[2025-10-25T19:36:01.341Z] [INFO   ] 2025-10-25T19:36:01.341Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:36:01.341Z","headers":{"referer":"check-console"}}
[2025-10-25T19:36:01.421Z] [INFO   ] 2025-10-25T19:36:01.420Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:36:01.547Z] [INFO   ] 2025-10-25T19:36:01.547Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:44:01.933Z] [INFO   ] 2025-10-25T19:44:01.932Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12854754533}
[2025-10-25T19:44:02.296Z] [INFO   ] 2025-10-25T19:44:02.296Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:44:02.296Z"}
[2025-10-25T19:44:02.299Z] [INFO   ] 2025-10-25T19:44:02.299Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:44:02.299Z"}
[2025-10-25T19:44:02.299Z] [INFO   ] 2025-10-25T19:44:02.299Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T19:44:02.299Z"}
[2025-10-25T19:44:02.623Z] [INFO   ] 2025-10-25T19:44:02.622Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:44:04.348Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T19:44:04.381Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 1126ms (4266 modules)
[2025-10-25T19:44:04.636Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4268 modules)
[2025-10-25T19:44:08.342Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 290ms (4270 modules)
[2025-10-25T19:44:08.409Z] [INFO   ] 2025-10-25T19:44:08.409Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:44:08.408Z","headers":{"referer":"check-console"}}
[2025-10-25T19:44:08.546Z] [INFO   ] 2025-10-25T19:44:08.546Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:44:08.658Z] [INFO   ] 2025-10-25T19:44:08.658Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:44:24.372Z] [INFO   ] 2025-10-25T19:44:24.372Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12854776973}
[2025-10-25T19:44:24.598Z] [INFO   ] 2025-10-25T19:44:24.598Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:44:24.598Z"}
[2025-10-25T19:44:24.601Z] [INFO   ] 2025-10-25T19:44:24.601Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:44:24.601Z"}
[2025-10-25T19:44:24.601Z] [INFO   ] 2025-10-25T19:44:24.601Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T19:44:24.601Z"}
[2025-10-25T19:44:24.859Z] [INFO   ] 2025-10-25T19:44:24.859Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:44:28.765Z] [INFO   ] 2025-10-25T19:44:28.765Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:44:28.765Z","headers":{"referer":"check-console"}}
[2025-10-25T19:44:28.899Z] [INFO   ] 2025-10-25T19:44:28.898Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:44:28.996Z] [INFO   ] 2025-10-25T19:44:28.996Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:44:32.038Z] [INFO   ] 2025-10-25T19:44:32.038Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/2ae345e7-7416-4257-b14d-7ef985df66bf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12854784639}
[2025-10-25T19:44:32.567Z] [INFO   ] 2025-10-25T19:44:32.567Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:44:34.037Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/join ...
[2025-10-25T19:44:34.286Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 754ms (4273 modules)
[2025-10-25T19:44:36.671Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T19:44:36.672Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:44:36.672Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:44:36.672Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T19:44:36.672Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T19:44:43.282Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send new emails received in their Gmail account to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to initiate the workflow whenever a new email arrives.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel with the content of the email.',
  reasoning: 'This node is needed to deliver the email content to the Slack channel, fulfilling the user\'s request.'
}
],
  connections: 'The workflow starts with the New Email Trigger, which activates when a new email is received. This trigger then connects directly to the Send Message to Slack action, which sends the email content to the designated Slack channel.'
}
[2025-10-25T19:44:43.284Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to initiate the workflow whenever a new email arrives.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel with the content of the email.',
  reasoning: 'This node is needed to deliver the email content to the Slack channel, fulfilling the user\'s request.'
}
]
[2025-10-25T19:44:43.285Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 0,
  col: 0,
  position: { x: 381, y: 80 }
}
[2025-10-25T19:44:43.387Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 1,
  col: 0,
  position: { x: 381, y: 480 }
}
[2025-10-25T19:44:44.345Z] [INFO   ] [STREAM] Preparing New Email Trigger (node-1761421483284-0)
[2025-10-25T19:44:45.147Z] [INFO   ] [STREAM] Starting configuration for New Email Trigger (node-1761421483284-0)
[2025-10-25T19:45:05.401Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 400ms (4275 modules)
[2025-10-25T19:45:36.433Z] [INFO   ] 2025-10-25T19:45:36.432Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/2ae345e7-7416-4257-b14d-7ef985df66bf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12854849033}
[2025-10-25T19:45:36.752Z] [INFO   ] 2025-10-25T19:45:36.752Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:45:36.752Z"}
[2025-10-25T19:45:36.764Z] [INFO   ] 2025-10-25T19:45:36.764Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:45:36.764Z"}
[2025-10-25T19:45:36.764Z] [INFO   ] 2025-10-25T19:45:36.764Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T19:45:36.764Z"}
[2025-10-25T19:45:36.833Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T19:45:36.834Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T19:45:36.834Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T19:45:36.998Z] [INFO   ] 2025-10-25T19:45:36.997Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:45:37.326Z] [INFO   ] 2025-10-25T19:45:37.326Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T19:45:38.325Z] [INFO   ] 2025-10-25T19:45:38.324Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:45:38.324Z","headers":{"referer":"check-console"}}
[2025-10-25T19:45:38.447Z] [INFO   ] 2025-10-25T19:45:38.447Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:45:38.540Z] [INFO   ] 2025-10-25T19:45:38.540Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:45:41.527Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T19:45:41.528Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:45:41.529Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:45:41.529Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T19:45:41.529Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T19:48:59.284Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [
  'node_type',
  'description',
  'email_address',
  '// Uses the email address from the previous node\'s output, assuming it contains the user\'s Gmail address.',
  '// Default to \'inbox\' to trigger on new emails received in the main inbox.',
  '// Default to \'false\' for marking emails as read, allowing the user to process unread emails.',
  '// Default to \'false\' for filtering out promotional emails, focusing on important communications.',
  '// Default to \'all\' for the label, allowing the user to receive triggers for any labeled emails.',
  '// Default to \'5\' for the maximum number of emails to check, balancing performance and responsiveness.'
],
  finalConfigKeys: [
  'node_type',
  'description',
  'email_address',
  '// Uses the email address from the previous node\'s output, assuming it contains the user\'s Gmail address.',
  '// Default to \'inbox\' to trigger on new emails received in the main inbox.',
  '// Default to \'false\' for marking emails as read, allowing the user to process unread emails.',
  '// Default to \'false\' for filtering out promotional emails, focusing on important communications.',
  '// Default to \'all\' for the label, allowing the user to receive triggers for any labeled emails.',
  '// Default to \'5\' for the maximum number of emails to check, balancing performance and responsiveness.',
  'from'
],
  fallbackFields: [ 'from' ]
}
[2025-10-25T19:48:59.284Z] [INFO   ] [STREAM] Configuring 10 fields for New Email Trigger: node_type, description, email_address, // Uses the email address from the previous node's output, assuming it contains the user's Gmail address., // Default to 'inbox' to trigger on new emails received in the main inbox., // Default to 'false' for marking emails as read, allowing the user to process unread emails., // Default to 'false' for filtering out promotional emails, focusing on important communications., // Default to 'all' for the label, allowing the user to receive triggers for any labeled emails., // Default to '5' for the maximum number of emails to check, balancing performance and responsiveness., from
[2025-10-25T19:48:59.285Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for New Email Trigger
[2025-10-25T19:48:59.287Z] [ERROR  ] 2025-10-25T19:48:59.287Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T19:49:37.339Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send received emails to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This is the starting point of the workflow, as it detects when an email arrives.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This action sends the content of the received email to Slack, fulfilling the user\'s request.'
}
],
  connections: 'The workflow starts with the Gmail trigger for new emails, which then connects to the Slack action to send the email content to a Slack channel.'
}
[2025-10-25T19:49:37.340Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This is the starting point of the workflow, as it detects when an email arrives.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This action sends the content of the received email to Slack, fulfilling the user\'s request.'
}
]
[2025-10-25T19:49:37.341Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 0,
  col: 0,
  position: { x: 381, y: 80 }
}
[2025-10-25T19:49:37.443Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 1,
  col: 0,
  position: { x: 381, y: 480 }
}
[2025-10-25T19:49:38.398Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761421777340-0)
[2025-10-25T19:49:39.200Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761421777340-0)
[2025-10-25T19:49:45.355Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'action' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'action', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T19:49:45.356Z] [INFO   ] [STREAM] Configuring 4 fields for Trigger on New Email: node_type, trigger, action, from
[2025-10-25T19:49:45.356Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T19:49:45.658Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T19:49:45.960Z] [INFO   ] [STREAM] Setting field action = [object Object] for Trigger on New Email
[2025-10-25T19:49:46.262Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T19:49:47.067Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T19:49:48.871Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761421777442-1)
[2025-10-25T19:49:49.673Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761421777442-1)
[2025-10-25T19:50:26.174Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.4s (5931 modules)
[2025-10-25T19:50:26.577Z] [INFO   ] 2025-10-25T19:50:26.577Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/2ae345e7-7416-4257-b14d-7ef985df66bf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12855139178}
[2025-10-25T19:50:26.921Z] [INFO   ] 2025-10-25T19:50:26.920Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:50:27.844Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T19:50:28.353Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 1091ms (4268 modules)
[2025-10-25T19:50:29.333Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 277ms (4270 modules)
[2025-10-25T19:50:29.398Z] [INFO   ] 2025-10-25T19:50:29.398Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:50:29.398Z","headers":{"referer":"check-console"}}
[2025-10-25T19:50:29.467Z] [INFO   ] 2025-10-25T19:50:29.467Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:50:29.548Z] [INFO   ] 2025-10-25T19:50:29.548Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:51:28.026Z] [INFO   ] 2025-10-25T19:51:28.025Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/2ae345e7-7416-4257-b14d-7ef985df66bf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12855200626}
[2025-10-25T19:51:28.329Z] [INFO   ] 2025-10-25T19:51:28.329Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:51:28.329Z"}
[2025-10-25T19:51:28.341Z] [INFO   ] 2025-10-25T19:51:28.341Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T19:51:28.341Z"}
[2025-10-25T19:51:28.341Z] [INFO   ] 2025-10-25T19:51:28.341Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T19:51:28.341Z"}
[2025-10-25T19:51:28.417Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T19:51:28.418Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T19:51:28.419Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T19:51:28.622Z] [INFO   ] 2025-10-25T19:51:28.621Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:51:28.965Z] [INFO   ] 2025-10-25T19:51:28.965Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T19:51:31.242Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T19:51:32.546Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 1804ms (4270 modules)
[2025-10-25T19:51:33.033Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4275 modules)
[2025-10-25T19:51:33.147Z] [INFO   ] 2025-10-25T19:51:33.147Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:51:33.147Z","headers":{"referer":"check-console"}}
[2025-10-25T19:51:33.290Z] [INFO   ] 2025-10-25T19:51:33.290Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:51:33.401Z] [INFO   ] 2025-10-25T19:51:33.401Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T19:51:36.984Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T19:51:36.985Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:51:36.986Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T19:51:36.986Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T19:51:36.986Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T19:51:43.125Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it captures the user\'s request to act upon incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This action fulfills the user\'s requirement to forward the email content to Slack.'
}
],
  connections: 'The workflow starts with the Gmail trigger for new emails, which then connects directly to the Slack action to send the email content as a message.'
}
[2025-10-25T19:51:43.126Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it captures the user\'s request to act upon incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This action fulfills the user\'s requirement to forward the email content to Slack.'
}
]
[2025-10-25T19:51:43.126Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 0,
  col: 0,
  position: { x: 381, y: 80 }
}
[2025-10-25T19:51:43.228Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 1,
  col: 0,
  position: { x: 381, y: 480 }
}
[2025-10-25T19:51:44.184Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761421903126-0)
[2025-10-25T19:51:44.986Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761421903126-0)
[2025-10-25T19:51:51.490Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T19:51:51.491Z] [INFO   ] [STREAM] Configuring 4 fields for Trigger on New Email: node_type, trigger, options, from
[2025-10-25T19:51:51.491Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T19:51:51.793Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T19:51:52.096Z] [INFO   ] [STREAM] Setting field options = [object Object] for Trigger on New Email
[2025-10-25T19:51:52.400Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T19:51:53.205Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T19:51:55.008Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761421903228-1)
[2025-10-25T19:51:55.811Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761421903228-1)
[2025-10-25T19:52:04.328Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/collaborators ...
[2025-10-25T19:52:04.331Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 502ms (4275 modules)
[2025-10-25T19:53:40.472Z] [ERROR  ] 2025-10-25T19:53:40.471Z [ERROR] AI call failed: {}
[2025-10-25T19:53:40.473Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T19:53:40.473Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T19:53:40.473Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T19:53:40.474Z] [ERROR  ] 2025-10-25T19:53:40.474Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T19:56:57.192Z] [ERROR  ] 2025-10-25T19:56:57.191Z [ERROR] AI call failed: {}
[2025-10-25T19:56:57.193Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T19:56:57.194Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T19:56:57.194Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T19:56:57.495Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T19:58:52.825Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.5s (5931 modules)
[2025-10-25T19:58:53.281Z] [INFO   ] 2025-10-25T19:58:53.281Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/2ae345e7-7416-4257-b14d-7ef985df66bf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12855645882}
[2025-10-25T19:58:53.550Z] [INFO   ] 2025-10-25T19:58:53.550Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T19:58:54.576Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T19:58:54.630Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 594ms (4268 modules)
[2025-10-25T19:58:55.998Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 295ms (4270 modules)
[2025-10-25T19:58:56.073Z] [INFO   ] 2025-10-25T19:58:56.073Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T19:58:56.073Z","headers":{"referer":"check-console"}}
[2025-10-25T19:58:56.154Z] [INFO   ] 2025-10-25T19:58:56.154Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T19:58:56.265Z] [INFO   ] 2025-10-25T19:58:56.265Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T20:00:07.350Z] [INFO   ] 2025-10-25T20:00:07.349Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/2ae345e7-7416-4257-b14d-7ef985df66bf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12855719950}
[2025-10-25T20:00:07.653Z] [INFO   ] 2025-10-25T20:00:07.653Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T20:00:07.653Z"}
[2025-10-25T20:00:07.664Z] [INFO   ] 2025-10-25T20:00:07.664Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T20:00:07.664Z"}
[2025-10-25T20:00:07.665Z] [INFO   ] 2025-10-25T20:00:07.665Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T20:00:07.665Z"}
[2025-10-25T20:00:07.965Z] [INFO   ] 2025-10-25T20:00:07.962Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T20:00:08.259Z] [INFO   ] 2025-10-25T20:00:08.259Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T20:00:10.007Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T20:00:10.052Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 1348ms (4266 modules)
[2025-10-25T20:00:10.870Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 0ms (4268 modules)
[2025-10-25T20:00:11.596Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1ms (4273 modules)
[2025-10-25T20:00:11.859Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4273 modules)
[2025-10-25T20:00:12.198Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4273 modules)
[2025-10-25T20:00:12.497Z] [INFO   ] 2025-10-25T20:00:12.497Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T20:00:12.497Z","headers":{"referer":"check-console"}}
[2025-10-25T20:00:12.639Z] [INFO   ] 2025-10-25T20:00:12.639Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T20:00:12.739Z] [INFO   ] 2025-10-25T20:00:12.739Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T20:00:16.645Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T20:00:16.646Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T20:00:16.646Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T20:00:16.646Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T20:00:16.646Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T20:00:23.313Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send an email received in Gmail to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, capturing the event of receiving a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This node is necessary to relay the content of the received email to the Slack channel.'
}
],
  connections: 'The workflow starts with the Gmail trigger node, which activates when a new email is received. This trigger then connects directly to the Slack action node, which sends the email content to the designated Slack channel.'
}
[2025-10-25T20:00:23.314Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, capturing the event of receiving a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This node is necessary to relay the content of the received email to the Slack channel.'
}
]
[2025-10-25T20:00:23.314Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 0,
  col: 0,
  position: { x: 381, y: 80 }
}
[2025-10-25T20:00:23.415Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 1,
  col: 0,
  position: { x: 381, y: 480 }
}
[2025-10-25T20:00:24.371Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761422423314-0)
[2025-10-25T20:00:25.172Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761422423314-0)
[2025-10-25T20:00:29.116Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T20:00:29.117Z] [INFO   ] [STREAM] Configuring 4 fields for Trigger on New Email: node_type, trigger, options, from
[2025-10-25T20:00:29.117Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T20:00:29.420Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T20:00:29.723Z] [INFO   ] [STREAM] Setting field options = [object Object] for Trigger on New Email
[2025-10-25T20:00:30.025Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T20:00:30.831Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T20:00:32.636Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761422423415-1)
[2025-10-25T20:00:33.439Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761422423415-1)
[2025-10-25T20:00:43.388Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 405ms (4275 modules)
[2025-10-25T20:01:51.608Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.1s (5931 modules)
[2025-10-25T20:01:52.501Z] [INFO   ] 2025-10-25T20:01:52.501Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/2ae345e7-7416-4257-b14d-7ef985df66bf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12855825102}
[2025-10-25T20:01:52.886Z] [INFO   ] 2025-10-25T20:01:52.886Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T20:01:53.822Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T20:01:54.490Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 1179ms (4268 modules)
[2025-10-25T20:01:55.172Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 303ms (4270 modules)
[2025-10-25T20:01:55.237Z] [INFO   ] 2025-10-25T20:01:55.237Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T20:01:55.237Z","headers":{"referer":"check-console"}}
[2025-10-25T20:01:55.322Z] [INFO   ] 2025-10-25T20:01:55.322Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T20:01:55.421Z] [INFO   ] 2025-10-25T20:01:55.421Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T20:03:10.665Z] [ERROR  ] 2025-10-25T20:03:10.664Z [ERROR] AI call failed: {}
[2025-10-25T20:03:10.667Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T20:03:10.668Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T20:03:10.668Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T20:03:10.970Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T20:10:38.685Z] [INFO   ] 2025-10-25T20:10:38.684Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/2ae345e7-7416-4257-b14d-7ef985df66bf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12856351285}
[2025-10-25T20:10:39.067Z] [INFO   ] 2025-10-25T20:10:39.067Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T20:10:39.067Z"}
[2025-10-25T20:10:39.080Z] [INFO   ] 2025-10-25T20:10:39.080Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T20:10:39.080Z"}
[2025-10-25T20:10:39.080Z] [INFO   ] 2025-10-25T20:10:39.080Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T20:10:39.080Z"}
[2025-10-25T20:10:39.421Z] [INFO   ] 2025-10-25T20:10:39.421Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T20:10:39.706Z] [INFO   ] 2025-10-25T20:10:39.706Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T20:10:41.553Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T20:10:41.591Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 1442ms (4266 modules)
[2025-10-25T20:10:42.305Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 1ms (4268 modules)
[2025-10-25T20:10:42.824Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4273 modules)
[2025-10-25T20:10:43.152Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4273 modules)
[2025-10-25T20:10:43.429Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1ms (4273 modules)
[2025-10-25T20:10:43.722Z] [INFO   ] 2025-10-25T20:10:43.722Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T20:10:43.722Z","headers":{"referer":"check-console"}}
[2025-10-25T20:10:43.898Z] [INFO   ] 2025-10-25T20:10:43.898Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T20:10:44.081Z] [INFO   ] 2025-10-25T20:10:44.081Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T20:10:47.157Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T20:10:47.158Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T20:10:47.158Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T20:10:47.158Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T20:10:47.158Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T20:10:54.348Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send received emails to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is necessary to initiate the workflow whenever a new email arrives.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to deliver the content of the received email to the Slack channel.'
}
],
  connections: 'The workflow starts with the Gmail trigger node, which activates when a new email is received. This triggers the Slack action node to send the email content to a designated Slack channel.'
}
[2025-10-25T20:10:54.349Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is necessary to initiate the workflow whenever a new email arrives.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to deliver the content of the received email to the Slack channel.'
}
]
[2025-10-25T20:10:54.351Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 0,
  col: 0,
  position: { x: 381, y: 80 }
}
[2025-10-25T20:10:54.461Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 909, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2545.3333333333335,
  builderViewportWidth: 1212,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1132,
  nodesPerRow: 1,
  row: 1,
  col: 0,
  position: { x: 381, y: 480 }
}
[2025-10-25T20:10:55.498Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761423054350-0)
[2025-10-25T20:10:56.300Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761423054350-0)
[2025-10-25T20:11:01.344Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T20:11:01.345Z] [INFO   ] [STREAM] Configuring 4 fields for Trigger on New Email: node_type, trigger, options, from
[2025-10-25T20:11:01.345Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T20:11:01.647Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T20:11:01.951Z] [INFO   ] [STREAM] Setting field options = [object Object] for Trigger on New Email
[2025-10-25T20:11:02.254Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T20:11:03.060Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T20:11:04.864Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761423054458-1)
[2025-10-25T20:11:05.666Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761423054458-1)
[2025-10-25T20:11:15.163Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/collaborators ...
[2025-10-25T20:11:15.584Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 1256ms (4275 modules)
[2025-10-25T20:12:37.639Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1414ms (1898 modules)
[2025-10-25T20:12:38.054Z] [INFO   ] 2025-10-25T20:12:38.054Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/2ae345e7-7416-4257-b14d-7ef985df66bf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12856470655}
[2025-10-25T20:12:38.417Z] [INFO   ] 2025-10-25T20:12:38.416Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T20:12:40.108Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T20:12:41.202Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 2.2s (4268 modules)
[2025-10-25T20:12:41.790Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4270 modules)
[2025-10-25T20:12:41.877Z] [INFO   ] 2025-10-25T20:12:41.877Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T20:12:41.877Z","headers":{"referer":"check-console"}}
[2025-10-25T20:12:42.012Z] [INFO   ] 2025-10-25T20:12:42.012Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T20:12:42.117Z] [INFO   ] 2025-10-25T20:12:42.117Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T20:12:49.022Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 515ms (1665 modules)
[2025-10-25T20:12:49.056Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T20:12:49.284Z] [INFO   ] 2025-10-25T20:12:49.284Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/2ae345e7-7416-4257-b14d-7ef985df66bf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12856481885}
[2025-10-25T20:12:49.676Z] [INFO   ] 2025-10-25T20:12:49.676Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T20:12:49.676Z"}
[2025-10-25T20:12:49.688Z] [INFO   ] 2025-10-25T20:12:49.688Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T20:12:49.688Z"}
[2025-10-25T20:12:49.688Z] [INFO   ] 2025-10-25T20:12:49.688Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T20:12:49.688Z"}
[2025-10-25T20:12:49.779Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T20:12:49.780Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T20:12:49.780Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T20:12:49.961Z] [INFO   ] 2025-10-25T20:12:49.959Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T20:12:50.263Z] [INFO   ] 2025-10-25T20:12:50.263Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T20:12:51.259Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T20:12:51.283Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 529ms (4272 modules)
[2025-10-25T20:12:52.808Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 0ms (4274 modules)
[2025-10-25T20:12:53.690Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1ms (4277 modules)
[2025-10-25T20:12:54.330Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1ms (4277 modules)
[2025-10-25T20:12:54.659Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4277 modules)
[2025-10-25T20:12:54.698Z] [INFO   ] 2025-10-25T20:12:54.698Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T20:12:54.698Z","headers":{"referer":"check-console"}}
[2025-10-25T20:12:54.843Z] [INFO   ] 2025-10-25T20:12:54.843Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T20:12:54.979Z] [INFO   ] 2025-10-25T20:12:54.979Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T20:12:56.672Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/ai/stream-workflow ...
[2025-10-25T20:12:56.792Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/stream-workflow in 965ms (812 modules)
[2025-10-25T20:12:57.379Z] [INFO   ] 2025-10-25T20:12:57.379Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/2ae345e7-7416-4257-b14d-7ef985df66bf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12856489980}
[2025-10-25T20:12:57.914Z] [INFO   ] 2025-10-25T20:12:57.914Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T20:12:58.958Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T20:12:58.958Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T20:12:58.959Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'google-drive',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T20:12:58.959Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T20:12:58.959Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED

=== Log Session Ended: 2025-10-25T20:14:41.069Z ===
