=== Log Session Started: 2025-10-25T14:38:13.436Z ===
Node Version: v23.7.0
Platform: darwin
Working Directory: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e
================================================================================

[2025-10-25T14:38:13.436Z] [INFO   ] File logging initialized
[2025-10-25T14:38:13.436Z] [INFO   ] Log file: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_09-38-13.log
[2025-10-25T14:38:13.442Z] [INFO   ] Deleted old log file: workflow_2025-10-18_08-59-30.log
[2025-10-25T14:38:13.443Z] [INFO   ] Deleted old log file: workflow_2025-10-18_08-21-19.log
[2025-10-25T14:38:13.444Z] [INFO   ] üìÅ File logging enabled
[2025-10-25T14:38:13.444Z] [INFO   ] üìù Logs will be written to: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_09-38-13.log
[2025-10-25T14:38:13.444Z] [INFO   ] üí° To view logs in real-time: tail -f /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_09-38-13.log
[2025-10-25T14:38:13.444Z] [INFO   ] üí° To view all logs: cat /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_09-38-13.log
[2025-10-25T14:38:13.444Z] [INFO   ] üí° To share logs: Copy the file at /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_09-38-13.log
[2025-10-25T14:38:13.444Z] [INFO   ] --------------------------------------------------------------------------------
[2025-10-25T14:38:13.444Z] [DEBUG  ] üìÅ File logging system initialized
[2025-10-25T14:38:13.463Z] [INFO   ]  [32m[1m‚úì[22m[39m Ready in 3.1s
[2025-10-25T14:38:14.520Z] [INFO   ] 2025-10-25T14:38:14.520Z [DEBUG] ü§ñ Discord bot configured, initializing gateway connection in background...
[2025-10-25T14:38:16.284Z] [INFO   ] 2025-10-25T14:38:16.283Z [DEBUG] Initializing Discord Gateway connection (singleton)...
[2025-10-25T14:38:16.284Z] [INFO   ] 2025-10-25T14:38:16.284Z [DEBUG] üîë Discord bot token loaded
[2025-10-25T14:38:16.731Z] [INFO   ] 2025-10-25T14:38:16.731Z [DEBUG] Discord Gateway initialization complete
[2025-10-25T14:38:16.732Z] [INFO   ] 2025-10-25T14:38:16.732Z [DEBUG] ‚úÖ Discord bot gateway connection initialized
[2025-10-25T14:38:16.829Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /middleware in 249ms (233 modules)
[2025-10-25T14:38:16.945Z] [INFO   ] 2025-10-25T14:38:16.945Z [DEBUG] Discord Gateway WebSocket connection established
[2025-10-25T14:38:16.946Z] [INFO   ] 2025-10-25T14:38:16.946Z [DEBUG] üîë Sending identify with intents: {"GUILDS":true,"GUILD_MEMBERS":true,"GUILD_INVITES":true,"GUILD_MESSAGES":true,"MESSAGE_CONTENT":true,"intentsValue":33347}
[2025-10-25T14:38:17.145Z] [INFO   ] 2025-10-25T14:38:17.145Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12836409746}
[2025-10-25T14:38:17.521Z] [INFO   ] 2025-10-25T14:38:17.521Z [DEBUG] üéâ Discord bot ready! {"sessionId":"b9462edaf830c0e1b2de01da8f8e8fe0","username":"ChainReact-Bot","userId":"1378595955212812308","guildCount":2}
[2025-10-25T14:38:17.521Z] [INFO   ] 2025-10-25T14:38:17.521Z [DEBUG] üìã Initializing invite cache...
[2025-10-25T14:38:17.523Z] [INFO   ] 2025-10-25T14:38:17.523Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T14:38:17.533Z] [INFO   ] 2025-10-25T14:38:17.533Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T14:38:17.668Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /workflows/ai-agent ...
[2025-10-25T14:38:17.733Z] [INFO   ] 2025-10-25T14:38:17.732Z [DEBUG] ‚úÖ Cached 3 invites for guild 1378950884045623406
[2025-10-25T14:38:22.284Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 5.1s (3744 modules)
[2025-10-25T14:38:22.650Z] [INFO   ] 2025-10-25T14:38:22.650Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T14:38:22.650Z"}
[2025-10-25T14:38:22.653Z] [INFO   ] 2025-10-25T14:38:22.653Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T14:38:22.653Z"}
[2025-10-25T14:38:22.653Z] [INFO   ] 2025-10-25T14:38:22.653Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T14:38:22.653Z"}
[2025-10-25T14:38:22.950Z] [INFO   ] 2025-10-25T14:38:22.949Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T14:38:23.593Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T14:38:25.196Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 2.1s (3734 modules)
[2025-10-25T14:38:26.438Z] [INFO   ] 2025-10-25T14:38:26.437Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/e1150d66-273e-4310-982c-f78992ac1173","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12836419038}
[2025-10-25T14:38:26.998Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /workflows/builder/[id] ...
[2025-10-25T14:38:28.311Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /workflows/builder/[id] in 1818ms (5925 modules)
[2025-10-25T14:38:28.934Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 393ms (5927 modules)
[2025-10-25T14:38:29.030Z] [INFO   ] 2025-10-25T14:38:29.030Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T14:38:29.030Z","headers":{"referer":"check-console"}}
[2025-10-25T14:38:29.122Z] [INFO   ] 2025-10-25T14:38:29.122Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T14:38:29.218Z] [INFO   ] 2025-10-25T14:38:29.217Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T14:38:29.288Z] [INFO   ] 2025-10-25T14:38:29.287Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T14:38:30.645Z] [INFO   ] 2025-10-25T14:38:30.645Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/e1150d66-273e-4310-982c-f78992ac1173","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12836423245}
[2025-10-25T14:38:30.948Z] [INFO   ] 2025-10-25T14:38:30.947Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T14:38:30.947Z"}
[2025-10-25T14:38:30.959Z] [INFO   ] 2025-10-25T14:38:30.959Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T14:38:30.959Z"}
[2025-10-25T14:38:30.959Z] [INFO   ] 2025-10-25T14:38:30.959Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T14:38:30.959Z"}
[2025-10-25T14:38:31.168Z] [INFO   ] 2025-10-25T14:38:31.168Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T14:38:31.637Z] [INFO   ] 2025-10-25T14:38:31.637Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T14:38:32.150Z] [INFO   ] 2025-10-25T14:38:32.150Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T14:38:32.150Z","headers":{"referer":"check-console"}}
[2025-10-25T14:38:32.241Z] [INFO   ] 2025-10-25T14:38:32.241Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T14:38:32.360Z] [INFO   ] 2025-10-25T14:38:32.360Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T14:38:32.760Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/join ...
[2025-10-25T14:38:32.783Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 537ms (5930 modules)
[2025-10-25T14:38:33.588Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/stream-workflow in 450ms (2465 modules)
[2025-10-25T14:38:35.732Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T14:38:35.733Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T14:38:35.734Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T14:38:35.734Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T14:38:35.734Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T14:38:40.766Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send incoming emails to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Gmail Trigger - New Email',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to initiate the workflow upon receiving a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Slack Action - Send Message',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is required to forward the content of the received email to Slack.'
}
],
  connections: 'The Gmail trigger node connects to the Slack action node, allowing the workflow to send a message to Slack whenever a new email is received.'
}
[2025-10-25T14:38:40.768Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Gmail Trigger - New Email',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to initiate the workflow upon receiving a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Slack Action - Send Message',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is required to forward the content of the received email to Slack.'
}
]
[2025-10-25T14:38:40.769Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 920, height: 852, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2560,
  builderViewportWidth: 1226.6666666666667,
  visibleHeight: 1136,
  availableWidth: 1146.6666666666667,
  nodesPerRow: 2,
  row: 0,
  col: 0,
  position: { x: 388.33333333333337, y: 80 }
}
[2025-10-25T14:38:40.871Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 920, height: 852, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2560,
  builderViewportWidth: 1226.6666666666667,
  visibleHeight: 1136,
  availableWidth: 1146.6666666666667,
  nodesPerRow: 2,
  row: 0,
  col: 1,
  position: { x: 678.3333333333334, y: 80 }
}
[2025-10-25T14:38:41.827Z] [INFO   ] [STREAM] Preparing Gmail Trigger - New Email (node-1761403120769-0)
[2025-10-25T14:38:42.628Z] [INFO   ] [STREAM] Starting configuration for Gmail Trigger - New Email (node-1761403120769-0)
[2025-10-25T14:40:24.149Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1535ms (5935 modules)
[2025-10-25T14:40:24.396Z] [INFO   ] 2025-10-25T14:40:24.396Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/e1150d66-273e-4310-982c-f78992ac1173","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12836536997}
[2025-10-25T14:40:24.733Z] [INFO   ] 2025-10-25T14:40:24.733Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T14:40:25.459Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T14:40:25.698Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 797ms (5923 modules)
[2025-10-25T14:40:26.162Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T14:40:26.475Z] [INFO   ] 2025-10-25T14:40:26.475Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/e1150d66-273e-4310-982c-f78992ac1173","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12836539076}
[2025-10-25T14:40:26.502Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 301ms (4272 modules)
[2025-10-25T14:40:26.604Z] [INFO   ] 2025-10-25T14:40:26.604Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T14:40:26.604Z","headers":{"referer":"check-console"}}
[2025-10-25T14:40:26.883Z] [INFO   ] 2025-10-25T14:40:26.883Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T14:40:26.883Z"}
[2025-10-25T14:40:26.896Z] [INFO   ] 2025-10-25T14:40:26.896Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T14:40:26.896Z"}
[2025-10-25T14:40:26.896Z] [INFO   ] 2025-10-25T14:40:26.896Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T14:40:26.896Z"}
[2025-10-25T14:40:26.967Z] [INFO   ] 2025-10-25T14:40:26.967Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T14:40:26.980Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T14:40:26.982Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T14:40:26.983Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T14:40:27.061Z] [INFO   ] 2025-10-25T14:40:27.061Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T14:40:27.110Z] [INFO   ] 2025-10-25T14:40:27.109Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T14:40:27.554Z] [INFO   ] 2025-10-25T14:40:27.554Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T14:40:28.101Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 353ms (4274 modules)
[2025-10-25T14:40:29.135Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 1ms (4276 modules)
[2025-10-25T14:40:30.285Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T14:40:30.947Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 518ms (5946 modules)
[2025-10-25T14:40:31.013Z] [INFO   ] 2025-10-25T14:40:31.013Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T14:40:31.013Z","headers":{"referer":"check-console"}}
[2025-10-25T14:40:31.163Z] [INFO   ] 2025-10-25T14:40:31.163Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T14:40:31.376Z] [INFO   ] 2025-10-25T14:40:31.376Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T14:40:31.385Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T14:40:31.483Z] [INFO   ] 2025-10-25T14:40:31.482Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/e1150d66-273e-4310-982c-f78992ac1173","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12836544083}
[2025-10-25T14:40:31.813Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1ms (4279 modules)
[2025-10-25T14:40:32.563Z] [INFO   ] 2025-10-25T14:40:32.563Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T14:40:34.471Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T14:40:34.474Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T14:40:34.474Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T14:40:34.474Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T14:40:34.474Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T14:40:37.695Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.6s (5946 modules)
[2025-10-25T14:40:37.735Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T14:40:37.872Z] [INFO   ] 2025-10-25T14:40:37.872Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/e1150d66-273e-4310-982c-f78992ac1173","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12836550473}
[2025-10-25T14:40:38.186Z] [INFO   ] 2025-10-25T14:40:38.186Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T14:40:38.186Z"}
[2025-10-25T14:40:38.198Z] [INFO   ] 2025-10-25T14:40:38.198Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T14:40:38.198Z"}
[2025-10-25T14:40:38.198Z] [INFO   ] 2025-10-25T14:40:38.198Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T14:40:38.198Z"}
[2025-10-25T14:40:38.271Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T14:40:38.271Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T14:40:38.271Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T14:40:38.390Z] [INFO   ] 2025-10-25T14:40:38.390Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T14:40:39.062Z] [INFO   ] 2025-10-25T14:40:39.062Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T14:40:39.205Z] [ERROR  ] 2025-10-25T14:40:39.205Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:186:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T14:40:39.941Z] [INFO   ] 2025-10-25T14:40:39.941Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T14:40:39.941Z","headers":{"referer":"check-console"}}
[2025-10-25T14:40:40.024Z] [INFO   ] 2025-10-25T14:40:40.024Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T14:40:40.152Z] [INFO   ] 2025-10-25T14:40:40.152Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T14:40:43.012Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T14:40:43.013Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T14:40:43.013Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T14:40:43.013Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T14:40:43.013Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T14:43:46.979Z] [ERROR  ] 2025-10-25T14:43:46.979Z [ERROR] AI call failed: {}
[2025-10-25T14:43:46.982Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T14:43:46.982Z] [INFO   ] [STREAM] Configuring 1 fields for Gmail Trigger - New Email: from
[2025-10-25T14:43:46.982Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Gmail Trigger - New Email
[2025-10-25T14:43:46.983Z] [ERROR  ] 2025-10-25T14:43:46.983Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T14:49:57.208Z] [INFO   ] 2025-10-25T14:49:57.208Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12837109808}
[2025-10-25T14:49:58.035Z] [INFO   ] 2025-10-25T14:49:58.035Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T14:50:00.816Z] [INFO   ] 2025-10-25T14:50:00.816Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/26507eda-7414-470a-b40a-8224d6c60cb5","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12837113416}
[2025-10-25T14:50:01.129Z] [INFO   ] 2025-10-25T14:50:01.128Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T14:50:01.674Z] [INFO   ] 2025-10-25T14:50:01.674Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T14:50:01.674Z","headers":{"referer":"check-console"}}
[2025-10-25T14:50:01.801Z] [INFO   ] 2025-10-25T14:50:01.801Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T14:50:01.918Z] [INFO   ] 2025-10-25T14:50:01.918Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T14:50:04.944Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T14:50:04.945Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T14:50:04.945Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T14:50:04.945Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T14:50:04.945Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T14:50:10.535Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send an email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to forward the content of the received email to Slack.'
}
],
  connections: 'The workflow starts with the \'gmail_trigger_new_email\' node, which triggers the workflow when a new email is received. This then connects to the \'slack_action_send_message\' node, which sends the email content to a designated Slack channel.'
}
[2025-10-25T14:50:10.536Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to forward the content of the received email to Slack.'
}
]
[2025-10-25T14:50:10.537Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 920, height: 852, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2560,
  builderViewportWidth: 1226.6666666666667,
  visibleHeight: 1136,
  availableWidth: 1146.6666666666667,
  nodesPerRow: 2,
  row: 0,
  col: 0,
  position: { x: 388.33333333333337, y: 80 }
}
[2025-10-25T14:50:10.640Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 920, height: 852, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2560,
  builderViewportWidth: 1226.6666666666667,
  visibleHeight: 1136,
  availableWidth: 1146.6666666666667,
  nodesPerRow: 2,
  row: 0,
  col: 1,
  position: { x: 678.3333333333334, y: 80 }
}
[2025-10-25T14:50:11.599Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761403810536-0)
[2025-10-25T14:50:12.401Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761403810536-0)
[2025-10-25T14:50:17.475Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'config' ],
  finalConfigKeys: [ 'node_type', 'config', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T14:50:17.475Z] [INFO   ] [STREAM] Configuring 3 fields for Trigger on New Email: node_type, config, from
[2025-10-25T14:50:17.475Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T14:50:17.778Z] [INFO   ] [STREAM] Setting field config = [object Object] for Trigger on New Email
[2025-10-25T14:50:18.082Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T14:50:18.888Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T14:50:20.691Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761403810639-1)
[2025-10-25T14:50:21.494Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761403810639-1)
[2025-10-25T14:55:23.033Z] [ERROR  ] 2025-10-25T14:55:23.032Z [ERROR] AI call failed: {}
[2025-10-25T14:55:23.034Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T14:55:23.034Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T14:55:23.034Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T14:55:23.337Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T15:04:00.249Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 3.1s (5935 modules)
[2025-10-25T15:04:00.852Z] [INFO   ] 2025-10-25T15:04:00.852Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/26507eda-7414-470a-b40a-8224d6c60cb5","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12837953453}
[2025-10-25T15:04:01.149Z] [INFO   ] 2025-10-25T15:04:01.148Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:04:02.251Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T15:04:02.268Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 533ms (4270 modules)
[2025-10-25T15:04:03.018Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 361ms (4272 modules)
[2025-10-25T15:04:03.085Z] [INFO   ] 2025-10-25T15:04:03.085Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T15:04:03.085Z","headers":{"referer":"check-console"}}
[2025-10-25T15:04:03.178Z] [INFO   ] 2025-10-25T15:04:03.178Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T15:04:03.306Z] [INFO   ] 2025-10-25T15:04:03.305Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T15:10:17.111Z] [INFO   ] 2025-10-25T15:10:17.110Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12838329711}
[2025-10-25T15:10:17.355Z] [INFO   ] 2025-10-25T15:10:17.355Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:10:17.355Z"}
[2025-10-25T15:10:17.357Z] [INFO   ] 2025-10-25T15:10:17.357Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:10:17.357Z"}
[2025-10-25T15:10:17.357Z] [INFO   ] 2025-10-25T15:10:17.357Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T15:10:17.357Z"}
[2025-10-25T15:10:17.651Z] [INFO   ] 2025-10-25T15:10:17.650Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:10:18.781Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T15:10:18.813Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 750ms (4268 modules)
[2025-10-25T15:10:19.263Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4270 modules)
[2025-10-25T15:10:22.854Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 211ms (4272 modules)
[2025-10-25T15:10:22.926Z] [INFO   ] 2025-10-25T15:10:22.925Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T15:10:22.925Z","headers":{"referer":"check-console"}}
[2025-10-25T15:10:23.050Z] [INFO   ] 2025-10-25T15:10:23.050Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T15:10:23.152Z] [INFO   ] 2025-10-25T15:10:23.152Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T15:10:38.104Z] [INFO   ] 2025-10-25T15:10:38.103Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12838350704}
[2025-10-25T15:10:38.518Z] [INFO   ] 2025-10-25T15:10:38.517Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:10:39.536Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/join ...
[2025-10-25T15:10:39.550Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 558ms (4275 modules)
[2025-10-25T15:10:41.919Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T15:10:41.921Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:10:41.921Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:10:41.921Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T15:10:41.921Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T15:10:46.451Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email received in Gmail to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Gmail New Email Trigger',
  description: 'Triggers the workflow when a new email is received in the user\'s Gmail account.',
  reasoning: 'This node is essential to initiate the workflow based on the user\'s requirement of sending emails to Slack.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is required to fulfill the user\'s request by sending the email content to Slack.'
}
],
  connections: 'The Gmail New Email Trigger connects directly to the Send Message to Slack action, allowing the workflow to send the email content to Slack immediately after a new email is received.'
}
[2025-10-25T15:10:46.452Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Gmail New Email Trigger',
  description: 'Triggers the workflow when a new email is received in the user\'s Gmail account.',
  reasoning: 'This node is essential to initiate the workflow based on the user\'s requirement of sending emails to Slack.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is required to fulfill the user\'s request by sending the email content to Slack.'
}
]
[2025-10-25T15:10:46.452Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 920, height: 852, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2560,
  builderViewportWidth: 1226.6666666666667,
  visibleHeight: 1136,
  availableWidth: 1146.6666666666667,
  nodesPerRow: 2,
  row: 0,
  col: 0,
  position: { x: 388.33333333333337, y: 80 }
}
[2025-10-25T15:10:46.554Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 920, height: 852, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2560,
  builderViewportWidth: 1226.6666666666667,
  visibleHeight: 1136,
  availableWidth: 1146.6666666666667,
  nodesPerRow: 2,
  row: 0,
  col: 1,
  position: { x: 678.3333333333334, y: 80 }
}
[2025-10-25T15:10:47.511Z] [INFO   ] [STREAM] Preparing Gmail New Email Trigger (node-1761405046452-0)
[2025-10-25T15:10:48.313Z] [INFO   ] [STREAM] Starting configuration for Gmail New Email Trigger (node-1761405046452-0)
[2025-10-25T15:10:53.699Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [
  'node_type',
  'user_id',
  'email_address',
  'label_ids',
  'include_spam_trash',
  'trigger_on_read',
  'search_query',
  'polling_interval'
],
  finalConfigKeys: [
  'node_type',
  'user_id',
  'email_address',
  'label_ids',
  'include_spam_trash',
  'trigger_on_read',
  'search_query',
  'polling_interval',
  'from'
],
  fallbackFields: [ 'from' ]
}
[2025-10-25T15:10:53.699Z] [INFO   ] [STREAM] Configuring 9 fields for Gmail New Email Trigger: node_type, user_id, email_address, label_ids, include_spam_trash, trigger_on_read, search_query, polling_interval, from
[2025-10-25T15:10:53.699Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Gmail New Email Trigger
[2025-10-25T15:10:54.002Z] [INFO   ] [STREAM] Setting field user_id = {{user.id}} for Gmail New Email Trigger
[2025-10-25T15:10:54.304Z] [INFO   ] [STREAM] Setting field email_address = {{user.email}} for Gmail New Email Trigger
[2025-10-25T15:10:54.608Z] [INFO   ] [STREAM] Setting field label_ids = INBOX for Gmail New Email Trigger
[2025-10-25T15:10:54.909Z] [INFO   ] [STREAM] Setting field include_spam_trash = false for Gmail New Email Trigger
[2025-10-25T15:10:55.211Z] [INFO   ] [STREAM] Setting field trigger_on_read = false for Gmail New Email Trigger
[2025-10-25T15:10:55.514Z] [INFO   ] [STREAM] Setting field search_query = is:unread for Gmail New Email Trigger
[2025-10-25T15:10:55.817Z] [INFO   ] [STREAM] Setting field polling_interval = 5 for Gmail New Email Trigger
[2025-10-25T15:10:56.120Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Gmail New Email Trigger
[2025-10-25T15:10:56.925Z] [INFO   ] [STREAM] Skipping test for trigger Gmail New Email Trigger
[2025-10-25T15:10:58.728Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761405046554-1)
[2025-10-25T15:10:59.531Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761405046554-1)
[2025-10-25T15:11:10.572Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 449ms (4277 modules)
[2025-10-25T15:13:50.807Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.1s (5935 modules)
[2025-10-25T15:13:51.289Z] [INFO   ] 2025-10-25T15:13:51.289Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12838543890}
[2025-10-25T15:13:51.628Z] [INFO   ] 2025-10-25T15:13:51.628Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:13:52.353Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 444ms (4270 modules)
[2025-10-25T15:13:53.220Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 293ms (4272 modules)
[2025-10-25T15:13:53.290Z] [INFO   ] 2025-10-25T15:13:53.290Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T15:13:53.290Z","headers":{"referer":"check-console"}}
[2025-10-25T15:13:53.383Z] [INFO   ] 2025-10-25T15:13:53.383Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T15:13:53.486Z] [INFO   ] 2025-10-25T15:13:53.486Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T15:14:10.674Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1833ms (5939 modules)
[2025-10-25T15:14:10.972Z] [INFO   ] 2025-10-25T15:14:10.972Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12838563573}
[2025-10-25T15:14:11.450Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T15:14:11.721Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T15:14:11.823Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 874ms (4275 modules)
[2025-10-25T15:14:12.288Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4277 modules)
[2025-10-25T15:14:12.570Z] [INFO   ] 2025-10-25T15:14:12.570Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:14:12.570Z"}
[2025-10-25T15:14:12.582Z] [INFO   ] 2025-10-25T15:14:12.582Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:14:12.582Z"}
[2025-10-25T15:14:12.582Z] [INFO   ] 2025-10-25T15:14:12.582Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T15:14:12.582Z"}
[2025-10-25T15:14:12.663Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T15:14:12.663Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T15:14:12.664Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T15:14:12.783Z] [ERROR  ] 2025-10-25T15:14:12.783Z [ERROR] Collaboration join error: {"code":"ECONNRESET"}
[2025-10-25T15:14:12.904Z] [INFO   ] 2025-10-25T15:14:12.903Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:14:13.250Z] [INFO   ] 2025-10-25T15:14:13.250Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T15:14:13.818Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/auth/profile ...
[2025-10-25T15:14:13.826Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/auth/profile in 510ms (4279 modules)
[2025-10-25T15:14:14.511Z] [INFO   ] 2025-10-25T15:14:14.511Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T15:14:14.511Z","headers":{"referer":"check-console"}}
[2025-10-25T15:14:14.646Z] [INFO   ] 2025-10-25T15:14:14.646Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T15:14:14.765Z] [INFO   ] 2025-10-25T15:14:14.765Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T15:14:17.480Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T15:14:17.481Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:14:17.481Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:14:17.481Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T15:14:17.481Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T15:14:34.430Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 935ms (5946 modules)
[2025-10-25T15:14:34.674Z] [INFO   ] 2025-10-25T15:14:34.673Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12838587274}
[2025-10-25T15:14:34.933Z] [INFO   ] 2025-10-25T15:14:34.932Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:15:08.083Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1115ms (5944 modules)
[2025-10-25T15:15:08.371Z] [INFO   ] 2025-10-25T15:15:08.371Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12838620972}
[2025-10-25T15:15:08.760Z] [INFO   ] 2025-10-25T15:15:08.760Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:15:08.760Z"}
[2025-10-25T15:15:08.774Z] [INFO   ] 2025-10-25T15:15:08.774Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:15:08.774Z"}
[2025-10-25T15:15:08.774Z] [INFO   ] 2025-10-25T15:15:08.774Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T15:15:08.774Z"}
[2025-10-25T15:15:09.111Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T15:15:09.415Z] [INFO   ] 2025-10-25T15:15:09.410Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:15:09.819Z] [INFO   ] 2025-10-25T15:15:09.819Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T15:15:10.332Z] [INFO   ] 2025-10-25T15:15:10.332Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T15:15:10.332Z","headers":{"referer":"check-console"}}
[2025-10-25T15:15:10.425Z] [INFO   ] 2025-10-25T15:15:10.425Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T15:15:10.670Z] [INFO   ] 2025-10-25T15:15:10.670Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T15:15:13.766Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T15:15:13.766Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:15:13.766Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:15:13.766Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T15:15:13.766Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T15:15:41.311Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 370ms (4277 modules)
[2025-10-25T15:16:02.586Z] [ERROR  ] 2025-10-25T15:16:02.585Z [ERROR] AI call failed: {}
[2025-10-25T15:16:02.589Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T15:16:02.589Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T15:16:02.589Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T15:16:02.590Z] [ERROR  ] 2025-10-25T15:16:02.590Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T15:21:51.087Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send a notification to a Slack channel whenever they receive a new email.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to initiate the workflow based on the user\'s email activity.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel with details about the new email.',
  reasoning: 'This node is needed to deliver the notification to Slack, fulfilling the user\'s request.'
}
],
  connections: 'The New Email Trigger node connects directly to the Send Message to Slack node, allowing the workflow to send a message whenever a new email is received.'
}
[2025-10-25T15:21:51.087Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to initiate the workflow based on the user\'s email activity.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel with details about the new email.',
  reasoning: 'This node is needed to deliver the notification to Slack, fulfilling the user\'s request.'
}
]
[2025-10-25T15:21:51.088Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 920, height: 852, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2560,
  builderViewportWidth: 1226.6666666666667,
  visibleHeight: 1136,
  availableWidth: 1146.6666666666667,
  nodesPerRow: 2,
  row: 0,
  col: 0,
  position: { x: 388.33333333333337, y: 80 }
}
[2025-10-25T15:21:51.190Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 920, height: 852, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2560,
  builderViewportWidth: 1226.6666666666667,
  visibleHeight: 1136,
  availableWidth: 1146.6666666666667,
  nodesPerRow: 2,
  row: 0,
  col: 1,
  position: { x: 678.3333333333334, y: 80 }
}
[2025-10-25T15:21:52.144Z] [INFO   ] [STREAM] Preparing New Email Trigger (node-1761405711087-0)
[2025-10-25T15:21:52.945Z] [INFO   ] [STREAM] Starting configuration for New Email Trigger (node-1761405711087-0)
[2025-10-25T15:21:58.925Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T15:21:58.925Z] [INFO   ] [STREAM] Configuring 4 fields for New Email Trigger: node_type, trigger, options, from
[2025-10-25T15:21:58.925Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for New Email Trigger
[2025-10-25T15:21:59.228Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for New Email Trigger
[2025-10-25T15:21:59.532Z] [INFO   ] [STREAM] Setting field options = [object Object] for New Email Trigger
[2025-10-25T15:21:59.835Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for New Email Trigger
[2025-10-25T15:22:00.640Z] [INFO   ] [STREAM] Skipping test for trigger New Email Trigger
[2025-10-25T15:22:02.445Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761405711190-1)
[2025-10-25T15:22:03.247Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761405711190-1)
[2025-10-25T15:27:05.309Z] [ERROR  ] 2025-10-25T15:27:05.308Z [ERROR] AI call failed: {}
[2025-10-25T15:27:05.311Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T15:27:05.311Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T15:27:05.311Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T15:27:05.613Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T15:28:05.736Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 3.1s (5935 modules)
[2025-10-25T15:28:06.041Z] [INFO   ] 2025-10-25T15:28:06.041Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12839398641}
[2025-10-25T15:28:06.343Z] [INFO   ] 2025-10-25T15:28:06.343Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:28:06.963Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 387ms (4270 modules)
[2025-10-25T15:28:07.870Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 291ms (4272 modules)
[2025-10-25T15:28:07.942Z] [INFO   ] 2025-10-25T15:28:07.942Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T15:28:07.942Z","headers":{"referer":"check-console"}}
[2025-10-25T15:28:08.029Z] [INFO   ] 2025-10-25T15:28:08.029Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T15:28:08.126Z] [INFO   ] 2025-10-25T15:28:08.125Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T15:28:22.352Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2s (5939 modules)
[2025-10-25T15:28:22.721Z] [INFO   ] 2025-10-25T15:28:22.721Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12839415322}
[2025-10-25T15:28:23.600Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T15:28:23.835Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T15:28:24.604Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 1941ms (4275 modules)
[2025-10-25T15:28:25.176Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4277 modules)
[2025-10-25T15:28:25.454Z] [INFO   ] 2025-10-25T15:28:25.454Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:28:25.454Z"}
[2025-10-25T15:28:25.466Z] [INFO   ] 2025-10-25T15:28:25.466Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:28:25.466Z"}
[2025-10-25T15:28:25.466Z] [INFO   ] 2025-10-25T15:28:25.466Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T15:28:25.466Z"}
[2025-10-25T15:28:25.742Z] [ERROR  ] 2025-10-25T15:28:25.742Z [ERROR] Collaboration join error: {"code":"ECONNRESET"}
[2025-10-25T15:28:25.934Z] [INFO   ] 2025-10-25T15:28:25.933Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:28:26.308Z] [INFO   ] 2025-10-25T15:28:26.308Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T15:28:27.094Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/auth/profile ...
[2025-10-25T15:28:27.210Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/auth/profile in 631ms (4279 modules)
[2025-10-25T15:28:27.776Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T15:28:28.203Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T15:28:28.566Z] [INFO   ] 2025-10-25T15:28:28.566Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T15:28:28.565Z","headers":{"referer":"check-console"}}
[2025-10-25T15:28:28.697Z] [INFO   ] 2025-10-25T15:28:28.697Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T15:28:28.787Z] [INFO   ] 2025-10-25T15:28:28.787Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T15:28:33.401Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T15:28:33.402Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:28:33.402Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:28:33.402Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T15:28:33.402Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T15:28:40.124Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1194ms (5946 modules)
[2025-10-25T15:28:40.364Z] [INFO   ] 2025-10-25T15:28:40.364Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12839432965}
[2025-10-25T15:28:40.650Z] [INFO   ] 2025-10-25T15:28:40.650Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:28:49.519Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1631ms (5944 modules)
[2025-10-25T15:28:49.903Z] [INFO   ] 2025-10-25T15:28:49.903Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12839442504}
[2025-10-25T15:28:50.178Z] [INFO   ] 2025-10-25T15:28:50.178Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:28:50.178Z"}
[2025-10-25T15:28:50.191Z] [INFO   ] 2025-10-25T15:28:50.191Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:28:50.191Z"}
[2025-10-25T15:28:50.191Z] [INFO   ] 2025-10-25T15:28:50.191Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T15:28:50.191Z"}
[2025-10-25T15:28:50.467Z] [INFO   ] 2025-10-25T15:28:50.466Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:28:50.799Z] [INFO   ] 2025-10-25T15:28:50.798Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T15:28:50.812Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T15:28:51.460Z] [INFO   ] 2025-10-25T15:28:51.460Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T15:28:51.460Z","headers":{"referer":"check-console"}}
[2025-10-25T15:28:51.551Z] [INFO   ] 2025-10-25T15:28:51.551Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T15:28:51.647Z] [INFO   ] 2025-10-25T15:28:51.647Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T15:28:51.733Z] [INFO   ] 2025-10-25T15:28:51.733Z [DEBUG] üîë Discord bot token loaded
[2025-10-25T15:28:51.789Z] [INFO   ] 2025-10-25T15:28:51.789Z [DEBUG] Discord Gateway closed, persistent reconnect disabled
[2025-10-25T15:28:52.192Z] [INFO   ] 2025-10-25T15:28:52.192Z [DEBUG] Discord Gateway WebSocket connection established
[2025-10-25T15:28:52.193Z] [INFO   ] 2025-10-25T15:28:52.193Z [DEBUG] üîë Sending identify with intents: {"GUILDS":true,"GUILD_MEMBERS":true,"GUILD_INVITES":true,"GUILD_MESSAGES":true,"MESSAGE_CONTENT":true,"intentsValue":33347}
[2025-10-25T15:28:52.570Z] [INFO   ] 2025-10-25T15:28:52.569Z [DEBUG] üéâ Discord bot ready! {"sessionId":"18d90af098b71350644c19fd87d0ac6e","username":"ChainReact-Bot","userId":"1378595955212812308","guildCount":2}
[2025-10-25T15:28:52.570Z] [INFO   ] 2025-10-25T15:28:52.570Z [DEBUG] üìã Initializing invite cache...
[2025-10-25T15:28:52.573Z] [INFO   ] 2025-10-25T15:28:52.573Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T15:28:52.743Z] [INFO   ] 2025-10-25T15:28:52.743Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T15:28:53.462Z] [INFO   ] 2025-10-25T15:28:53.462Z [DEBUG] ‚úÖ Cached 3 invites for guild 1378950884045623406
[2025-10-25T15:28:55.946Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T15:28:55.949Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:28:55.950Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:28:55.950Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T15:28:55.950Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T15:29:03.977Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1866ms (5944 modules)
[2025-10-25T15:29:04.296Z] [INFO   ] 2025-10-25T15:29:04.296Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12839456897}
[2025-10-25T15:29:04.567Z] [INFO   ] 2025-10-25T15:29:04.567Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:29:50.945Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1633ms (5944 modules)
[2025-10-25T15:29:51.345Z] [INFO   ] 2025-10-25T15:29:51.345Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12839503946}
[2025-10-25T15:29:51.652Z] [INFO   ] 2025-10-25T15:29:51.652Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:29:51.651Z"}
[2025-10-25T15:29:51.664Z] [INFO   ] 2025-10-25T15:29:51.664Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:29:51.664Z"}
[2025-10-25T15:29:51.664Z] [INFO   ] 2025-10-25T15:29:51.664Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T15:29:51.664Z"}
[2025-10-25T15:29:52.022Z] [INFO   ] 2025-10-25T15:29:52.022Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:29:52.023Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T15:29:52.327Z] [INFO   ] 2025-10-25T15:29:52.327Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T15:29:53.045Z] [INFO   ] 2025-10-25T15:29:53.045Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T15:29:53.045Z","headers":{"referer":"check-console"}}
[2025-10-25T15:29:53.151Z] [INFO   ] 2025-10-25T15:29:53.151Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T15:29:53.247Z] [INFO   ] 2025-10-25T15:29:53.247Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T15:29:56.733Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T15:29:56.734Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:29:56.734Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:29:56.734Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T15:29:56.734Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T15:29:57.626Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1137ms (5944 modules)
[2025-10-25T15:29:57.793Z] [INFO   ] 2025-10-25T15:29:57.793Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12839510394}
[2025-10-25T15:29:58.057Z] [INFO   ] 2025-10-25T15:29:58.057Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:30:29.173Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1859ms (5944 modules)
[2025-10-25T15:30:29.551Z] [INFO   ] 2025-10-25T15:30:29.551Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12839542152}
[2025-10-25T15:30:29.924Z] [INFO   ] 2025-10-25T15:30:29.924Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:30:29.924Z"}
[2025-10-25T15:30:29.938Z] [INFO   ] 2025-10-25T15:30:29.937Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T15:30:29.937Z"}
[2025-10-25T15:30:29.938Z] [INFO   ] 2025-10-25T15:30:29.938Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T15:30:29.938Z"}
[2025-10-25T15:30:30.258Z] [INFO   ] 2025-10-25T15:30:30.257Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:30:30.514Z] [INFO   ] 2025-10-25T15:30:30.514Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T15:30:30.522Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T15:30:31.231Z] [INFO   ] 2025-10-25T15:30:31.231Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T15:30:31.231Z","headers":{"referer":"check-console"}}
[2025-10-25T15:30:31.393Z] [INFO   ] 2025-10-25T15:30:31.393Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T15:30:31.480Z] [INFO   ] 2025-10-25T15:30:31.480Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T15:30:34.939Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T15:30:34.940Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:30:34.940Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-drive',
  'google-docs',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T15:30:34.940Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T15:30:34.940Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T15:31:02.402Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 358ms (4277 modules)
[2025-10-25T15:37:41.167Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send an email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to start the workflow whenever a new email arrives.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to send the content of the received email to Slack.'
}
],
  connections: 'The workflow starts with the Gmail trigger node, which activates when a new email is received. This triggers the Slack action node to send the email content to a designated Slack channel.'
}
[2025-10-25T15:37:41.168Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to start the workflow whenever a new email arrives.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to send the content of the received email to Slack.'
}
]
[2025-10-25T15:37:41.169Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 0,
  position: { x: 813.6666666666667, y: 80 }
}
[2025-10-25T15:37:41.272Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 1,
  position: { x: 1103.6666666666667, y: 80 }
}
[2025-10-25T15:37:42.228Z] [INFO   ] [STREAM] Preparing New Email Trigger (node-1761406661168-0)
[2025-10-25T15:37:43.029Z] [INFO   ] [STREAM] Starting configuration for New Email Trigger (node-1761406661168-0)
[2025-10-25T15:37:52.128Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [
  'node_type',
  'description',
  'email_address',
  ' // Assuming the previous node provides the user\'s email address as a variable, allowing the trigger to be specific to that account. This is essential for the trigger to function correctly in the context of the user\'s workflow. The variable is used to ensure that the trigger listens for new emails in the correct inbox. The email address is a required field for the Gmail trigger node. Additionally, this configuration assumes that the user has already set up authentication for their Gmail account in the workflow automation platform. Therefore, no authentication details are included here, as they are typically handled in the platform\'s settings. The optional fields are filled with sensible defaults to ensure the trigger operates effectively without requiring additional user input. The \'label\' field is set to \'inbox\' to focus on new emails in the primary inbox, and the \'include_spam\' field is set to false to avoid triggering on spam emails. The \'unread_only\' field is set to true to only trigger on unread emails, which is a common requirement for email workflows. The \'polling_interval\' is set to 5 minutes, which is a reasonable default for checking for new emails without being too frequent. This configuration aligns with the user\'s goal of continuing to build their workflow by ensuring that the trigger is set up correctly and efficiently. The final configuration is structured to provide a clear and functional setup for the Gmail trigger node.  ',
  'include_spam',
  'unread_only',
  'polling_interval'
],
  finalConfigKeys: [
  'node_type',
  'description',
  'email_address',
  ' // Assuming the previous node provides the user\'s email address as a variable, allowing the trigger to be specific to that account. This is essential for the trigger to function correctly in the context of the user\'s workflow. The variable is used to ensure that the trigger listens for new emails in the correct inbox. The email address is a required field for the Gmail trigger node. Additionally, this configuration assumes that the user has already set up authentication for their Gmail account in the workflow automation platform. Therefore, no authentication details are included here, as they are typically handled in the platform\'s settings. The optional fields are filled with sensible defaults to ensure the trigger operates effectively without requiring additional user input. The \'label\' field is set to \'inbox\' to focus on new emails in the primary inbox, and the \'include_spam\' field is set to false to avoid triggering on spam emails. The \'unread_only\' field is set to true to only trigger on unread emails, which is a common requirement for email workflows. The \'polling_interval\' is set to 5 minutes, which is a reasonable default for checking for new emails without being too frequent. This configuration aligns with the user\'s goal of continuing to build their workflow by ensuring that the trigger is set up correctly and efficiently. The final configuration is structured to provide a clear and functional setup for the Gmail trigger node.  ',
  'include_spam',
  'unread_only',
  'polling_interval',
  'from'
],
  fallbackFields: [ 'from' ]
}
[2025-10-25T15:37:52.129Z] [INFO   ] [STREAM] Configuring 8 fields for New Email Trigger: node_type, description, email_address,  // Assuming the previous node provides the user's email address as a variable, allowing the trigger to be specific to that account. This is essential for the trigger to function correctly in the context of the user's workflow. The variable is used to ensure that the trigger listens for new emails in the correct inbox. The email address is a required field for the Gmail trigger node. Additionally, this configuration assumes that the user has already set up authentication for their Gmail account in the workflow automation platform. Therefore, no authentication details are included here, as they are typically handled in the platform's settings. The optional fields are filled with sensible defaults to ensure the trigger operates effectively without requiring additional user input. The 'label' field is set to 'inbox' to focus on new emails in the primary inbox, and the 'include_spam' field is set to false to avoid triggering on spam emails. The 'unread_only' field is set to true to only trigger on unread emails, which is a common requirement for email workflows. The 'polling_interval' is set to 5 minutes, which is a reasonable default for checking for new emails without being too frequent. This configuration aligns with the user's goal of continuing to build their workflow by ensuring that the trigger is set up correctly and efficiently. The final configuration is structured to provide a clear and functional setup for the Gmail trigger node.  , include_spam, unread_only, polling_interval, from
[2025-10-25T15:37:52.129Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for New Email Trigger
[2025-10-25T15:37:52.432Z] [INFO   ] [STREAM] Setting field description = Triggers the workflow when a new email is received in Gmail. for New Email Trigger
[2025-10-25T15:37:52.736Z] [INFO   ] [STREAM] Setting field email_address = {{trigger.email}} for New Email Trigger
[2025-10-25T15:37:53.039Z] [INFO   ] [STREAM] Setting field  // Assuming the previous node provides the user's email address as a variable, allowing the trigger to be specific to that account. This is essential for the trigger to function correctly in the context of the user's workflow. The variable is used to ensure that the trigger listens for new emails in the correct inbox. The email address is a required field for the Gmail trigger node. Additionally, this configuration assumes that the user has already set up authentication for their Gmail account in the workflow automation platform. Therefore, no authentication details are included here, as they are typically handled in the platform's settings. The optional fields are filled with sensible defaults to ensure the trigger operates effectively without requiring additional user input. The 'label' field is set to 'inbox' to focus on new emails in the primary inbox, and the 'include_spam' field is set to false to avoid triggering on spam emails. The 'unread_only' field is set to true to only trigger on unread emails, which is a common requirement for email workflows. The 'polling_interval' is set to 5 minutes, which is a reasonable default for checking for new emails without being too frequent. This configuration aligns with the user's goal of continuing to build their workflow by ensuring that the trigger is set up correctly and efficiently. The final configuration is structured to provide a clear and functional setup for the Gmail trigger node.   = label for New Email Trigger
[2025-10-25T15:37:53.343Z] [INFO   ] [STREAM] Setting field include_spam = false for New Email Trigger
[2025-10-25T15:37:53.645Z] [INFO   ] [STREAM] Setting field unread_only = true for New Email Trigger
[2025-10-25T15:37:53.948Z] [INFO   ] [STREAM] Setting field polling_interval = 5 for New Email Trigger
[2025-10-25T15:37:54.250Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for New Email Trigger
[2025-10-25T15:37:55.054Z] [INFO   ] [STREAM] Skipping test for trigger New Email Trigger
[2025-10-25T15:37:56.859Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761406661272-1)
[2025-10-25T15:37:57.661Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761406661272-1)
[2025-10-25T15:38:03.937Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'channel', 'text', 'username', 'icon_emoji', 'attachments' ],
  finalConfigKeys: [
  'channel',
  'text',
  'username',
  'icon_emoji',
  'attachments',
  'message'
],
  fallbackFields: [ 'message' ]
}
[2025-10-25T15:38:03.937Z] [INFO   ] [STREAM] Configuring 6 fields for Send Message to Slack: channel, text, username, icon_emoji, attachments, message
[2025-10-25T15:38:03.938Z] [INFO   ] [STREAM] Setting field channel = #general for Send Message to Slack
[2025-10-25T15:38:04.240Z] [INFO   ] [STREAM] Setting field text = New email received from {{trigger.data.from}} with subject: {{trigger.data.subject}} for Send Message to Slack
[2025-10-25T15:38:04.542Z] [INFO   ] [STREAM] Setting field username = Email Notifier for Send Message to Slack
[2025-10-25T15:38:04.845Z] [INFO   ] [STREAM] Setting field icon_emoji = :email: for Send Message to Slack
[2025-10-25T15:38:05.148Z] [INFO   ] [STREAM] Setting field attachments = [object Object] for Send Message to Slack
[2025-10-25T15:38:05.451Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T15:44:06.214Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 3.8s (5935 modules)
[2025-10-25T15:44:06.637Z] [INFO   ] 2025-10-25T15:44:06.637Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12840359237}
[2025-10-25T15:44:07.139Z] [INFO   ] 2025-10-25T15:44:07.139Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T15:44:07.953Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T15:44:08.019Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 632ms (4270 modules)
[2025-10-25T15:44:08.817Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 302ms (4272 modules)
[2025-10-25T15:44:08.896Z] [INFO   ] 2025-10-25T15:44:08.896Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T15:44:08.896Z","headers":{"referer":"check-console"}}
[2025-10-25T15:44:09.012Z] [INFO   ] 2025-10-25T15:44:09.012Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T15:44:09.118Z] [INFO   ] 2025-10-25T15:44:09.118Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:10:52.513Z] [INFO   ] 2025-10-25T16:10:52.510Z [DEBUG] üëã Discord GUILD_MEMBER_ADD received: {"userId":"224627666274353153","username":"mudy247","guildId":"1378950884045623406","joinedAt":"2025-10-25T16:10:52.152643+00:00"}
[2025-10-25T16:10:52.902Z] [INFO   ] 2025-10-25T16:10:52.902Z [DEBUG] ‚úÖ Member joined using invite: vj6ZWf2W2Y
[2025-10-25T16:10:52.903Z] [INFO   ] 2025-10-25T16:10:52.903Z [DEBUG] üéØ Assigning role 1415165584705851514 to user mudy247 via invite vj6ZWf2W2Y
[2025-10-25T16:10:53.142Z] [INFO   ] 2025-10-25T16:10:53.142Z [DEBUG] üì° Discord event received: GUILD_MEMBER_UPDATE
[2025-10-25T16:10:53.257Z] [INFO   ] 2025-10-25T16:10:53.257Z [DEBUG] ‚úÖ Successfully assigned role 1415165584705851514 to mudy247
[2025-10-25T16:10:53.587Z] [INFO   ] 2025-10-25T16:10:53.587Z [DEBUG] [Discord] No active workflows to evaluate for member join
[2025-10-25T16:13:05.778Z] [INFO   ] 2025-10-25T16:13:05.777Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/83a2d00c-8a61-41e2-9105-74105322dc64","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12842098378}
[2025-10-25T16:13:06.259Z] [INFO   ] 2025-10-25T16:13:06.259Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:13:06.259Z"}
[2025-10-25T16:13:06.274Z] [INFO   ] 2025-10-25T16:13:06.273Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T16:13:06.273Z"}
[2025-10-25T16:13:06.274Z] [INFO   ] 2025-10-25T16:13:06.274Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T16:13:06.274Z"}
[2025-10-25T16:13:06.652Z] [INFO   ] 2025-10-25T16:13:06.649Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T16:13:07.003Z] [INFO   ] 2025-10-25T16:13:07.003Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T16:13:07.940Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T16:13:09.719Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 2.4s (4268 modules)
[2025-10-25T16:13:10.463Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 0ms (4272 modules)
[2025-10-25T16:13:10.773Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4275 modules)
[2025-10-25T16:13:11.066Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4275 modules)
[2025-10-25T16:13:11.378Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4275 modules)
[2025-10-25T16:13:11.404Z] [INFO   ] 2025-10-25T16:13:11.404Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T16:13:11.404Z","headers":{"referer":"check-console"}}
[2025-10-25T16:13:11.661Z] [INFO   ] 2025-10-25T16:13:11.661Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T16:13:11.790Z] [INFO   ] 2025-10-25T16:13:11.790Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T16:13:14.763Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T16:13:14.764Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'dropbox',
  'google-drive',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:13:14.764Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'dropbox',
  'google-drive',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T16:13:14.765Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T16:13:14.765Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T16:13:20.759Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow when a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects when a new email arrives.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is needed to fulfill the user\'s request to send the email content to Slack.'
}
],
  connections: 'The workflow starts with the Gmail trigger for a new email, which then connects to the Slack action to send the email content to the specified Slack channel.'
}
[2025-10-25T16:13:20.760Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow when a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects when a new email arrives.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is needed to fulfill the user\'s request to send the email content to Slack.'
}
]
[2025-10-25T16:13:20.761Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 0,
  position: { x: 813.6666666666667, y: 80 }
}
[2025-10-25T16:13:20.863Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 3,
  row: 0,
  col: 1,
  position: { x: 1103.6666666666667, y: 80 }
}
[2025-10-25T16:13:21.820Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761408800760-0)
[2025-10-25T16:13:22.622Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761408800760-0)
[2025-10-25T16:13:28.719Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T16:13:28.719Z] [INFO   ] [STREAM] Configuring 4 fields for Trigger on New Email: node_type, trigger, options, from
[2025-10-25T16:13:28.719Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T16:13:29.021Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T16:13:29.324Z] [INFO   ] [STREAM] Setting field options = [object Object] for Trigger on New Email
[2025-10-25T16:13:29.626Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T16:13:30.432Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T16:13:32.236Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761408800862-1)
[2025-10-25T16:13:33.038Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761408800862-1)
[2025-10-25T16:13:36.793Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'channel', 'text', 'username', 'icon_emoji', 'link_names' ],
  finalConfigKeys: [
  'channel',
  'text',
  'username',
  'icon_emoji',
  'link_names',
  'message'
],
  fallbackFields: [ 'message' ]
}
[2025-10-25T16:13:36.793Z] [INFO   ] [STREAM] Configuring 6 fields for Send Message to Slack: channel, text, username, icon_emoji, link_names, message
[2025-10-25T16:13:36.793Z] [INFO   ] [STREAM] Setting field channel = #general for Send Message to Slack
[2025-10-25T16:13:37.094Z] [INFO   ] [STREAM] Setting field text = New email received:
From: {{trigger.data.from}}
Subject: {{trigger.data.subject}}
Body: {{trigger.data.body}} for Send Message to Slack
[2025-10-25T16:13:37.397Z] [INFO   ] [STREAM] Setting field username = Email Notifier for Send Message to Slack
[2025-10-25T16:13:37.699Z] [INFO   ] [STREAM] Setting field icon_emoji = :email: for Send Message to Slack
[2025-10-25T16:13:38.002Z] [INFO   ] [STREAM] Setting field link_names = true for Send Message to Slack
[2025-10-25T16:13:38.305Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T16:13:42.906Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/collaborators ...
[2025-10-25T16:13:43.018Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 671ms (4277 modules)
