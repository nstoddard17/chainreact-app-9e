=== Log Session Started: 2025-10-26T04:38:11.311Z ===
Node Version: v23.7.0
Platform: darwin
Working Directory: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e
================================================================================

[2025-10-26T04:38:11.311Z] [INFO   ] File logging initialized
[2025-10-26T04:38:11.311Z] [INFO   ] Log file: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_23-38-11.log
[2025-10-26T04:38:11.322Z] [INFO   ] Deleted old log file: workflow_2025-10-18_23-23-25.log
[2025-10-26T04:38:11.323Z] [INFO   ] üìÅ File logging enabled
[2025-10-26T04:38:11.323Z] [INFO   ] üìù Logs will be written to: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_23-38-11.log
[2025-10-26T04:38:11.323Z] [INFO   ] üí° To view logs in real-time: tail -f /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_23-38-11.log
[2025-10-26T04:38:11.323Z] [INFO   ] üí° To view all logs: cat /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_23-38-11.log
[2025-10-26T04:38:11.323Z] [INFO   ] üí° To share logs: Copy the file at /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-25_23-38-11.log
[2025-10-26T04:38:11.323Z] [INFO   ] --------------------------------------------------------------------------------
[2025-10-26T04:38:11.323Z] [DEBUG  ] üìÅ File logging system initialized
[2025-10-26T04:38:11.331Z] [INFO   ]  [32m[1m‚úì[22m[39m Ready in 3.3s
[2025-10-26T04:38:12.337Z] [INFO   ] 2025-10-26T04:38:12.337Z [DEBUG] ü§ñ Discord bot configured, initializing gateway connection in background...
[2025-10-26T04:38:14.125Z] [INFO   ] 2025-10-26T04:38:14.125Z [DEBUG] Initializing Discord Gateway connection (singleton)...
[2025-10-26T04:38:14.126Z] [INFO   ] 2025-10-26T04:38:14.125Z [DEBUG] üîë Discord bot token loaded
[2025-10-26T04:38:14.327Z] [INFO   ] 2025-10-26T04:38:14.327Z [DEBUG] Discord Gateway initialization complete
[2025-10-26T04:38:14.329Z] [INFO   ] 2025-10-26T04:38:14.329Z [DEBUG] ‚úÖ Discord bot gateway connection initialized
[2025-10-26T04:38:14.439Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /middleware in 252ms (233 modules)
[2025-10-26T04:38:14.551Z] [INFO   ] 2025-10-26T04:38:14.551Z [DEBUG] Discord Gateway WebSocket connection established
[2025-10-26T04:38:14.552Z] [INFO   ] 2025-10-26T04:38:14.551Z [DEBUG] üîë Sending identify with intents: {"GUILDS":true,"GUILD_MEMBERS":true,"GUILD_INVITES":true,"GUILD_MESSAGES":true,"MESSAGE_CONTENT":true,"intentsValue":33347}
[2025-10-26T04:38:14.824Z] [INFO   ] 2025-10-26T04:38:14.823Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12886807424}
[2025-10-26T04:38:15.109Z] [INFO   ] 2025-10-26T04:38:15.109Z [DEBUG] üéâ Discord bot ready! {"sessionId":"19189385109a646807e344b5cd88760d","username":"ChainReact-Bot","userId":"1378595955212812308","guildCount":2}
[2025-10-26T04:38:15.109Z] [INFO   ] 2025-10-26T04:38:15.109Z [DEBUG] üìã Initializing invite cache...
[2025-10-26T04:38:15.117Z] [INFO   ] 2025-10-26T04:38:15.117Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-26T04:38:15.194Z] [INFO   ] 2025-10-26T04:38:15.194Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-26T04:38:15.286Z] [INFO   ] 2025-10-26T04:38:15.286Z [DEBUG] ‚úÖ Cached 3 invites for guild 1378950884045623406
[2025-10-26T04:38:15.350Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /workflows/ai-agent ...
[2025-10-26T04:38:18.596Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /workflows/ai-agent in 3.7s (3725 modules)
[2025-10-26T04:38:18.997Z] [INFO   ] 2025-10-26T04:38:18.997Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:38:18.997Z"}
[2025-10-26T04:38:19.000Z] [INFO   ] 2025-10-26T04:38:18.999Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:38:18.999Z"}
[2025-10-26T04:38:19.000Z] [INFO   ] 2025-10-26T04:38:19.000Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-26T04:38:19.000Z"}
[2025-10-26T04:38:19.367Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 758ms (597 modules)
[2025-10-26T04:38:19.402Z] [INFO   ] 2025-10-26T04:38:19.402Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:38:20.524Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-26T04:38:21.088Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 1064ms (3732 modules)
[2025-10-26T04:38:24.804Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 295ms (3734 modules)
[2025-10-26T04:38:24.947Z] [INFO   ] 2025-10-26T04:38:24.947Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-26T04:38:24.947Z","headers":{"referer":"check-console"}}
[2025-10-26T04:38:25.080Z] [INFO   ] 2025-10-26T04:38:25.080Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-26T04:38:25.176Z] [INFO   ] 2025-10-26T04:38:25.176Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-26T04:38:50.392Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 492ms (597 modules)
[2025-10-26T04:38:50.659Z] [INFO   ] 2025-10-26T04:38:50.659Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12886843259}
[2025-10-26T04:38:50.823Z] [INFO   ] 2025-10-26T04:38:50.822Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:38:51.011Z] [INFO   ] 2025-10-26T04:38:51.011Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/23476f48-f9f0-46dc-aad8-2293a3cea7a5","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12886843612}
[2025-10-26T04:38:51.605Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /workflows/builder/[id] ...
[2025-10-26T04:38:54.356Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /workflows/builder/[id] in 3.3s (5925 modules)
[2025-10-26T04:38:55.332Z] [INFO   ] 2025-10-26T04:38:55.332Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:38:56.608Z] [INFO   ] 2025-10-26T04:38:56.608Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/23476f48-f9f0-46dc-aad8-2293a3cea7a5","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12886849208}
[2025-10-26T04:38:56.809Z] [INFO   ] 2025-10-26T04:38:56.809Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:38:56.809Z"}
[2025-10-26T04:38:56.822Z] [INFO   ] 2025-10-26T04:38:56.822Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:38:56.822Z"}
[2025-10-26T04:38:56.823Z] [INFO   ] 2025-10-26T04:38:56.823Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-26T04:38:56.823Z"}
[2025-10-26T04:38:57.075Z] [INFO   ] 2025-10-26T04:38:57.074Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:38:57.632Z] [INFO   ] 2025-10-26T04:38:57.632Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-26T04:38:58.395Z] [INFO   ] 2025-10-26T04:38:58.395Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-26T04:38:58.395Z","headers":{"referer":"check-console"}}
[2025-10-26T04:38:58.489Z] [INFO   ] 2025-10-26T04:38:58.489Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-26T04:38:58.853Z] [INFO   ] 2025-10-26T04:38:58.853Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-26T04:38:59.193Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/join ...
[2025-10-26T04:38:59.213Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 723ms (5928 modules)
[2025-10-26T04:38:59.993Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/analyze-request in 410ms (5930 modules)
[2025-10-26T04:39:00.202Z] [INFO   ] 2025-10-26T04:39:00.202Z [INFO] [ANALYZE] Analyzing user request: {"prompt":"When I get an email send it to slack","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-26T04:39:02.710Z] [INFO   ] 2025-10-26T04:39:02.710Z [INFO] [ANALYZE] Analysis complete: {"needsClarification":true,"questions":[{"id":"slack_channel","question":"Which Slack channel would you like to send messages to?","fieldType":"dropdown","dataEndpoint":"/api/integrations/slack/channels","nodeType":"slack_action_send_message","configField":"channel","required":true},{"id":"email_sender_filter","question":"Would you like to filter emails by sender? (Optional)","fieldType":"dropdown","dataEndpoint":"/api/integrations/gmail/senders","nodeType":"gmail_trigger_new_email","configField":"from","required":false,"allowCustom":true,"isMultiSelect":true,"tooltip":"Select one or more recent senders, or type custom email addresses. The workflow will trigger for emails from any of the selected senders."},{"id":"email_keywords_filter","question":"Would you like to filter emails by keywords? (Optional)","fieldType":"text","nodeType":"gmail_trigger_new_email","configField":"keywords","required":false,"tooltip":"Enter keywords to search for in both the subject and body of emails. Examples: 'invoice', 'urgent report', 'meeting'. Separate multiple keywords with commas to match any of them. The workflow will trigger when an email contains any of these keywords in either the subject or body."}],"inferredData":{"email_source":"gmail","reasoning":"User has only Gmail connected","message_template":"New email from {{trigger.from}}\n\nSubject: {{trigger.subject}}\n\nBody:\n{{trigger.body}}"}}
[2025-10-26T04:39:03.497Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/integrations/gmail/senders ...
[2025-10-26T04:39:04.265Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations/gmail/senders in 1444ms (5935 modules)
[2025-10-26T04:39:04.801Z] [INFO   ] 2025-10-26T04:39:04.801Z [INFO] [SLACK CHANNELS] Fetched channels: {"count":3}
[2025-10-26T04:39:05.163Z] [INFO   ] 2025-10-26T04:39:05.162Z [INFO] [SLACK CHANNELS] Fetched channels: {"count":3}
[2025-10-26T04:39:05.184Z] [INFO   ] 2025-10-26T04:39:05.184Z [INFO] [GMAIL SENDERS] Fetched senders: {"count":13}
[2025-10-26T04:39:05.816Z] [INFO   ] 2025-10-26T04:39:05.816Z [INFO] [GMAIL SENDERS] Fetched senders: {"count":13}
[2025-10-26T04:39:07.461Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/ai/stream-workflow ...
[2025-10-26T04:39:07.842Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/stream-workflow in 979ms (2465 modules)
[2025-10-26T04:39:10.058Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-26T04:39:10.060Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'dropbox',
  'google-drive',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-26T04:39:10.060Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'twitter',
  'dropbox',
  'google-drive',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-26T04:39:10.060Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-26T04:39:10.060Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-26T04:39:15.821Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is necessary to fulfill the user\'s request to send the email content to Slack.'
}
],
  connections: 'The workflow starts with the Gmail trigger for new emails, which connects to the Slack action to send the email content to a specified channel.'
}
[2025-10-26T04:39:15.822Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is necessary to fulfill the user\'s request to send the email content to Slack.'
}
]
[2025-10-26T04:39:15.822Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 911, height: 1300, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2548,
  builderViewportWidth: 1214.6666666666667,
  visibleHeight: 1733.3333333333333,
  availableWidth: 1134.6666666666667,
  nodesPerRow: 1,
  row: 0,
  col: 0,
  position: { x: 382.33333333333337, y: 80 }
}
[2025-10-26T04:39:15.924Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 911, height: 1300, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2548,
  builderViewportWidth: 1214.6666666666667,
  visibleHeight: 1733.3333333333333,
  availableWidth: 1134.6666666666667,
  nodesPerRow: 1,
  row: 1,
  col: 0,
  position: { x: 382.33333333333337, y: 480 }
}
[2025-10-26T04:39:16.882Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761453555822-0)
[2025-10-26T04:39:17.685Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761453555822-0)
[2025-10-26T04:39:18.206Z] [INFO   ] [STREAM] Calling generateNodeConfig for Trigger on New Email...
[2025-10-26T04:39:18.207Z] [INFO   ] [generateNodeConfig] Starting for node: Trigger on New Email
[2025-10-26T04:39:18.208Z] [INFO   ] [generateNodeConfig] nodeComponent: { type: 'gmail_trigger_new_email', providerId: 'gmail' }
[2025-10-26T04:39:18.213Z] [INFO   ] [generateNodeConfig] clarifications received: {}
[2025-10-26T04:39:18.214Z] [INFO   ] [generateNodeConfig] Extracted clarificationEntries: []
[2025-10-26T04:39:18.215Z] [INFO   ] [generateNodeConfig] messageTemplate: undefined
[2025-10-26T04:39:18.215Z] [INFO   ] [generateNodeConfig] Final clarificationContext: NONE
[2025-10-26T04:39:18.215Z] [INFO   ] [generateNodeConfig] Sending prompt to AI...
[2025-10-26T04:39:23.375Z] [INFO   ] [generateNodeConfig] AI returned result: {
  "success": true,
  "config": {
    "node_type": "gmail_trigger_new_email",
    "trigger": {
      "user_id": "{{previous_node.user_id}}",
      "label_ids": [
        "INBOX"
      ],
      "include_spam_trash": false,
      "search_query": "",
      "fetch_body": true,
      "fetch_attachments": false
    },
    "output": {
      "email_subject": "{{trigger.email.subject}}",
      "email_from": "{{trigger.email.from}}",
      "email_body": "{{trigger.email.body}}",
      "email_timestamp": "{{trigger.email.timestamp}}"
    }
  },
  "reasoning": "The configuration uses the user's Gmail account to trigger the workflow upon receiving a new email in the inbox. The 'label_ids' is set to 'INBOX' to ensure only emails from the inbox are considered. The 'include_spam_trash' is set to false to avoid triggering on spam or trash emails. The output fields are populated with variables that can be used in subsequent nodes, allowing for easy access to the email's subject, sender, body, and timestamp, which aligns with the user's goal of continuing the workflow based on new email events."
}
[2025-10-26T04:39:23.375Z] [INFO   ] [generateNodeConfig] Config from AI: {
  "node_type": "gmail_trigger_new_email",
  "trigger": {
    "user_id": "{{previous_node.user_id}}",
    "label_ids": [
      "INBOX"
    ],
    "include_spam_trash": false,
    "search_query": "",
    "fetch_body": true,
    "fetch_attachments": false
  },
  "output": {
    "email_subject": "{{trigger.email.subject}}",
    "email_from": "{{trigger.email.from}}",
    "email_body": "{{trigger.email.body}}",
    "email_timestamp": "{{trigger.email.timestamp}}"
  }
}
[2025-10-26T04:39:23.376Z] [INFO   ] [generateNodeConfig] Final config after force-apply: {
  "labelIds": [
    "INBOX"
  ]
}
[2025-10-26T04:39:23.376Z] [INFO   ] [STREAM] generateNodeConfig completed in 5170ms for Trigger on New Email
[2025-10-26T04:39:23.377Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'labelIds' ],
  finalConfigKeys: [ 'labelIds' ],
  fallbackFields: []
}
[2025-10-26T04:39:23.377Z] [INFO   ] [STREAM] Configuring 1 fields for Trigger on New Email: labelIds
[2025-10-26T04:39:23.377Z] [INFO   ] [STREAM] Setting field labelIds = INBOX for Trigger on New Email
[2025-10-26T04:39:24.183Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-26T04:39:25.686Z] [INFO   ] [STREAM] Trigger complete, continuing to next node (loop iteration 0 of 1)
[2025-10-26T04:39:25.988Z] [INFO   ] [STREAM] Completed node 1 of 2, moving to next iteration
[2025-10-26T04:39:25.989Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761453555923-1)
[2025-10-26T04:39:26.791Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761453555923-1)
[2025-10-26T04:39:27.293Z] [INFO   ] [STREAM] Calling generateNodeConfig for Send Message to Slack...
[2025-10-26T04:39:27.294Z] [INFO   ] [generateNodeConfig] Starting for node: Send Message to Slack
[2025-10-26T04:39:27.294Z] [INFO   ] [generateNodeConfig] nodeComponent: { type: 'slack_action_send_message', providerId: 'slack' }
[2025-10-26T04:39:27.294Z] [INFO   ] [generateNodeConfig] clarifications received: {}
[2025-10-26T04:39:27.294Z] [INFO   ] [generateNodeConfig] Extracted clarificationEntries: []
[2025-10-26T04:39:27.294Z] [INFO   ] [generateNodeConfig] messageTemplate: undefined
[2025-10-26T04:39:27.294Z] [INFO   ] [generateNodeConfig] Final clarificationContext: NONE
[2025-10-26T04:39:27.295Z] [INFO   ] [generateNodeConfig] Sending prompt to AI...
[2025-10-26T04:39:30.461Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/collaborators ...
[2025-10-26T04:39:30.467Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 518ms (5937 modules)
[2025-10-26T04:41:32.896Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 862ms (1900 modules)
[2025-10-26T04:41:33.188Z] [INFO   ] 2025-10-26T04:41:33.188Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/23476f48-f9f0-46dc-aad8-2293a3cea7a5","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12887005789}
[2025-10-26T04:41:33.493Z] [INFO   ] 2025-10-26T04:41:33.493Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:41:34.200Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-26T04:41:35.608Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 1918ms (5923 modules)
[2025-10-26T04:41:35.704Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-26T04:41:35.951Z] [INFO   ] 2025-10-26T04:41:35.951Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/23476f48-f9f0-46dc-aad8-2293a3cea7a5","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12887008552}
[2025-10-26T04:41:36.242Z] [INFO   ] 2025-10-26T04:41:36.242Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:41:36.242Z"}
[2025-10-26T04:41:36.254Z] [INFO   ] 2025-10-26T04:41:36.254Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:41:36.254Z"}
[2025-10-26T04:41:36.254Z] [INFO   ] 2025-10-26T04:41:36.254Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-26T04:41:36.254Z"}
[2025-10-26T04:41:36.345Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-26T04:41:36.348Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-26T04:41:36.388Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-26T04:41:36.575Z] [INFO   ] 2025-10-26T04:41:36.574Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:41:37.175Z] [INFO   ] 2025-10-26T04:41:37.175Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-26T04:41:38.081Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 461ms (4272 modules)
[2025-10-26T04:41:38.400Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4279 modules)
[2025-10-26T04:41:38.464Z] [INFO   ] 2025-10-26T04:41:38.464Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-26T04:41:38.464Z","headers":{"referer":"check-console"}}
[2025-10-26T04:41:38.549Z] [INFO   ] 2025-10-26T04:41:38.549Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-26T04:41:38.644Z] [INFO   ] 2025-10-26T04:41:38.644Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-26T04:41:39.733Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/analyze-request in 354ms (4281 modules)
[2025-10-26T04:41:39.922Z] [INFO   ] 2025-10-26T04:41:39.922Z [INFO] [ANALYZE] Analyzing user request: {"prompt":"When I get an email send it to slack","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-26T04:41:42.288Z] [INFO   ] 2025-10-26T04:41:42.287Z [INFO] [ANALYZE] Analysis complete: {"needsClarification":true,"questions":[{"id":"slack_channel","question":"Which Slack channel would you like to send messages to?","fieldType":"dropdown","dataEndpoint":"/api/integrations/slack/channels","nodeType":"slack_action_send_message","configField":"channel","required":true},{"id":"email_sender_filter","question":"Would you like to filter emails by sender? (Optional)","fieldType":"dropdown","dataEndpoint":"/api/integrations/gmail/senders","nodeType":"gmail_trigger_new_email","configField":"from","required":false,"allowCustom":true,"isMultiSelect":true,"tooltip":"Select one or more recent senders, or type custom email addresses. The workflow will trigger for emails from any of the selected senders."},{"id":"email_keywords_filter","question":"Would you like to filter emails by keywords? (Optional)","fieldType":"text","nodeType":"gmail_trigger_new_email","configField":"keywords","required":false,"tooltip":"Enter keywords to search for in both the subject and body of emails. Examples: 'invoice', 'urgent report', 'meeting'. Separate multiple keywords with commas to match any of them. The workflow will trigger when an email contains any of these keywords in either the subject or body."}],"inferredData":{"email_source":"gmail","reasoning":"User has only Gmail connected","message_template":"New email from {{trigger.from}}\n\nSubject: {{trigger.subject}}\n\nBody:\n{{trigger.body}}"}}
[2025-10-26T04:41:43.143Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/integrations/gmail/senders ...
[2025-10-26T04:41:43.737Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations/gmail/senders in 1321ms (4284 modules)
[2025-10-26T04:41:44.092Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4286 modules)
[2025-10-26T04:41:44.586Z] [INFO   ] 2025-10-26T04:41:44.586Z [INFO] [SLACK CHANNELS] Fetched channels: {"count":3}
[2025-10-26T04:41:44.909Z] [INFO   ] 2025-10-26T04:41:44.909Z [INFO] [SLACK CHANNELS] Fetched channels: {"count":3}
[2025-10-26T04:41:44.947Z] [INFO   ] 2025-10-26T04:41:44.947Z [INFO] [GMAIL SENDERS] Fetched senders: {"count":13}
[2025-10-26T04:41:45.600Z] [INFO   ] 2025-10-26T04:41:45.599Z [INFO] [GMAIL SENDERS] Fetched senders: {"count":13}
[2025-10-26T04:41:47.335Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 478ms (1667 modules)
[2025-10-26T04:41:47.590Z] [INFO   ] 2025-10-26T04:41:47.590Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/23476f48-f9f0-46dc-aad8-2293a3cea7a5","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12887020190}
[2025-10-26T04:41:47.754Z] [INFO   ] 2025-10-26T04:41:47.754Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:41:50.641Z] [INFO   ] 2025-10-26T04:41:50.640Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12887023241}
[2025-10-26T04:41:50.832Z] [INFO   ] 2025-10-26T04:41:50.832Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:41:50.832Z"}
[2025-10-26T04:41:50.835Z] [INFO   ] 2025-10-26T04:41:50.835Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-26T04:41:50.835Z"}
[2025-10-26T04:41:50.835Z] [INFO   ] 2025-10-26T04:41:50.835Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-26T04:41:50.835Z"}
[2025-10-26T04:41:51.144Z] [INFO   ] 2025-10-26T04:41:51.143Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-26T04:41:54.932Z] [INFO   ] 2025-10-26T04:41:54.931Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-26T04:41:54.931Z","headers":{"referer":"check-console"}}
[2025-10-26T04:41:55.057Z] [INFO   ] 2025-10-26T04:41:55.057Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-26T04:41:55.140Z] [INFO   ] 2025-10-26T04:41:55.140Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}

=== Log Session Ended: 2025-10-26T04:41:56.609Z ===
