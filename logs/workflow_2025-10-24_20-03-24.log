=== Log Session Started: 2025-10-25T01:03:24.247Z ===
Node Version: v23.7.0
Platform: darwin
Working Directory: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e
================================================================================

[2025-10-25T01:03:24.247Z] [INFO   ] File logging initialized
[2025-10-25T01:03:24.247Z] [INFO   ] Log file: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-24_20-03-24.log
[2025-10-25T01:03:24.252Z] [INFO   ] üìÅ File logging enabled
[2025-10-25T01:03:24.252Z] [INFO   ] üìù Logs will be written to: /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-24_20-03-24.log
[2025-10-25T01:03:24.252Z] [INFO   ] üí° To view logs in real-time: tail -f /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-24_20-03-24.log
[2025-10-25T01:03:24.252Z] [INFO   ] üí° To view all logs: cat /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-24_20-03-24.log
[2025-10-25T01:03:24.252Z] [INFO   ] üí° To share logs: Copy the file at /Users/nathanielstoddard/chainreact-app/chainreact-app-9e/logs/workflow_2025-10-24_20-03-24.log
[2025-10-25T01:03:24.253Z] [INFO   ] --------------------------------------------------------------------------------
[2025-10-25T01:03:24.253Z] [DEBUG  ] üìÅ File logging system initialized
[2025-10-25T01:03:24.269Z] [INFO   ]  [32m[1m‚úì[22m[39m Ready in 2.8s
[2025-10-25T01:03:25.292Z] [INFO   ] 2025-10-25T01:03:25.292Z [DEBUG] ü§ñ Discord bot configured, initializing gateway connection in background...
[2025-10-25T01:03:27.071Z] [INFO   ] 2025-10-25T01:03:27.071Z [DEBUG] Initializing Discord Gateway connection (singleton)...
[2025-10-25T01:03:27.071Z] [INFO   ] 2025-10-25T01:03:27.071Z [DEBUG] üîë Discord bot token loaded
[2025-10-25T01:03:27.310Z] [INFO   ] 2025-10-25T01:03:27.310Z [DEBUG] Discord Gateway initialization complete
[2025-10-25T01:03:27.311Z] [INFO   ] 2025-10-25T01:03:27.311Z [DEBUG] ‚úÖ Discord bot gateway connection initialized
[2025-10-25T01:03:27.493Z] [INFO   ] 2025-10-25T01:03:27.493Z [DEBUG] Discord Gateway WebSocket connection established
[2025-10-25T01:03:27.493Z] [INFO   ] 2025-10-25T01:03:27.493Z [DEBUG] üîë Sending identify with intents: {"GUILDS":true,"GUILD_MEMBERS":true,"GUILD_INVITES":true,"GUILD_MESSAGES":true,"MESSAGE_CONTENT":true,"intentsValue":33347}
[2025-10-25T01:03:27.736Z] [INFO   ] 2025-10-25T01:03:27.736Z [DEBUG] üéâ Discord bot ready! {"sessionId":"071dacf28a283077fcaa7f086e39e7cf","username":"ChainReact-Bot","userId":"1378595955212812308","guildCount":2}
[2025-10-25T01:03:27.736Z] [INFO   ] 2025-10-25T01:03:27.736Z [DEBUG] üìã Initializing invite cache...
[2025-10-25T01:03:27.738Z] [INFO   ] 2025-10-25T01:03:27.738Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T01:03:27.749Z] [INFO   ] 2025-10-25T01:03:27.749Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T01:03:27.953Z] [INFO   ] 2025-10-25T01:03:27.953Z [DEBUG] ‚úÖ Cached 3 invites for guild 1378950884045623406
[2025-10-25T01:03:28.501Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /middleware in 178ms (233 modules)
[2025-10-25T01:03:29.044Z] [INFO   ] 2025-10-25T01:03:29.043Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12787521644}
[2025-10-25T01:03:29.584Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /workflows/ai-agent ...
[2025-10-25T01:03:33.200Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /workflows/ai-agent in 4.1s (3734 modules)
[2025-10-25T01:03:33.627Z] [INFO   ] 2025-10-25T01:03:33.627Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:03:33.627Z"}
[2025-10-25T01:03:33.630Z] [INFO   ] 2025-10-25T01:03:33.630Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:03:33.630Z"}
[2025-10-25T01:03:33.630Z] [INFO   ] 2025-10-25T01:03:33.630Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:03:33.630Z"}
[2025-10-25T01:03:33.966Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 739ms (597 modules)
[2025-10-25T01:03:34.105Z] [INFO   ] 2025-10-25T01:03:34.105Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:03:34.767Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T01:03:34.979Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 716ms (3732 modules)
[2025-10-25T01:03:38.696Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 299ms (3734 modules)
[2025-10-25T01:03:38.819Z] [INFO   ] 2025-10-25T01:03:38.819Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:03:38.819Z","headers":{"referer":"check-console"}}
[2025-10-25T01:03:38.952Z] [INFO   ] 2025-10-25T01:03:38.951Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:03:39.034Z] [INFO   ] 2025-10-25T01:03:39.034Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:03:57.492Z] [INFO   ] 2025-10-25T01:03:57.492Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12787550092}
[2025-10-25T01:03:58.060Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /workflows/builder/[id] ...
[2025-10-25T01:04:01.417Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /workflows/builder/[id] in 3.9s (5949 modules)
[2025-10-25T01:04:02.385Z] [INFO   ] 2025-10-25T01:04:02.385Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:04:03.650Z] [INFO   ] 2025-10-25T01:04:03.650Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12787556251}
[2025-10-25T01:04:03.854Z] [INFO   ] 2025-10-25T01:04:03.854Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:04:03.854Z"}
[2025-10-25T01:04:03.867Z] [INFO   ] 2025-10-25T01:04:03.867Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:04:03.867Z"}
[2025-10-25T01:04:03.867Z] [INFO   ] 2025-10-25T01:04:03.867Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:04:03.867Z"}
[2025-10-25T01:04:04.092Z] [INFO   ] 2025-10-25T01:04:04.092Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:04:04.529Z] [INFO   ] 2025-10-25T01:04:04.529Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:04:05.208Z] [INFO   ] 2025-10-25T01:04:05.207Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:04:05.207Z","headers":{"referer":"check-console"}}
[2025-10-25T01:04:05.287Z] [INFO   ] 2025-10-25T01:04:05.287Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:04:05.380Z] [INFO   ] 2025-10-25T01:04:05.380Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:04:05.883Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/join ...
[2025-10-25T01:04:05.890Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 575ms (5938 modules)
[2025-10-25T01:04:06.682Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/ai/stream-workflow ...
[2025-10-25T01:04:06.812Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/stream-workflow in 673ms (2470 modules)
[2025-10-25T01:04:08.439Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:04:08.441Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:04:08.441Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:04:08.441Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:04:08.441Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:04:11.661Z] [INFO   ] [STREAM] Auto-approving plan, continuing to build immediately
[2025-10-25T01:04:11.662Z] [INFO   ] [STREAM] Plan structure: {
  hasNodes: true,
  nodeCount: 2,
  planKeys: [ 'understanding', 'nodes', 'connections' ]
}
[2025-10-25T01:04:11.663Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it captures incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is necessary to fulfill the user\'s request to send the email content to Slack.'
}
],
  connections: 'The workflow starts with the Gmail trigger for a new email, which then connects to the Slack action to send the email content as a message.'
}
[2025-10-25T01:04:11.664Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it captures incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This node is necessary to fulfill the user\'s request to send the email content to Slack.'
}
]
[2025-10-25T01:04:11.664Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 2110, height: 1211, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 3410.6666666666665,
  visibleHeight: 1614.6666666666667,
  availableWidth: 3330.6666666666665,
  nodesPerRow: 6,
  row: 0,
  col: 0,
  position: { x: 40, y: 80 }
}
[2025-10-25T01:04:11.767Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 2110, height: 1211, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 3410.6666666666665,
  visibleHeight: 1614.6666666666667,
  availableWidth: 3330.6666666666665,
  nodesPerRow: 6,
  row: 0,
  col: 1,
  position: { x: 590, y: 80 }
}
[2025-10-25T01:04:12.780Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761354251664-0)
[2025-10-25T01:04:13.580Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761354251664-0)
[2025-10-25T01:04:17.692Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [
  'node_type',
  'user_id',
  'email_address',
  'label_ids',
  'include_spam_trash',
  'fetch_body',
  'fetch_attachments',
  'trigger_on',
  'email_subject',
  'email_body',
  'email_sender'
],
  finalConfigKeys: [
  'node_type',
  'user_id',
  'email_address',
  'label_ids',
  'include_spam_trash',
  'fetch_body',
  'fetch_attachments',
  'trigger_on',
  'email_subject',
  'email_body',
  'email_sender',
  'from'
],
  fallbackFields: [ 'from' ]
}
[2025-10-25T01:04:17.693Z] [INFO   ] [STREAM] Configuring 12 fields for Trigger on New Email: node_type, user_id, email_address, label_ids, include_spam_trash, fetch_body, fetch_attachments, trigger_on, email_subject, email_body, email_sender, from
[2025-10-25T01:04:17.693Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T01:04:17.996Z] [INFO   ] [STREAM] Setting field user_id = {{user.id}} for Trigger on New Email
[2025-10-25T01:04:18.297Z] [INFO   ] [STREAM] Setting field email_address = {{user.email}} for Trigger on New Email
[2025-10-25T01:04:18.600Z] [INFO   ] [STREAM] Setting field label_ids = INBOX for Trigger on New Email
[2025-10-25T01:04:18.902Z] [INFO   ] [STREAM] Setting field include_spam_trash = false for Trigger on New Email
[2025-10-25T01:04:19.204Z] [INFO   ] [STREAM] Setting field fetch_body = true for Trigger on New Email
[2025-10-25T01:04:19.507Z] [INFO   ] [STREAM] Setting field fetch_attachments = false for Trigger on New Email
[2025-10-25T01:04:19.810Z] [INFO   ] [STREAM] Setting field trigger_on = new_email for Trigger on New Email
[2025-10-25T01:04:20.112Z] [INFO   ] [STREAM] Setting field email_subject = {{trigger.email.subject}} for Trigger on New Email
[2025-10-25T01:04:20.414Z] [INFO   ] [STREAM] Setting field email_body = {{trigger.email.body}} for Trigger on New Email
[2025-10-25T01:04:20.716Z] [INFO   ] [STREAM] Setting field email_sender = {{trigger.email.from}} for Trigger on New Email
[2025-10-25T01:04:21.018Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T01:04:21.820Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T01:04:23.625Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761354251766-1)
[2025-10-25T01:04:24.427Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761354251766-1)
[2025-10-25T01:04:27.490Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'channel', 'text', 'username', 'icon_emoji', 'link_names' ],
  finalConfigKeys: [
  'channel',
  'text',
  'username',
  'icon_emoji',
  'link_names',
  'message'
],
  fallbackFields: [ 'message' ]
}
[2025-10-25T01:04:27.490Z] [INFO   ] [STREAM] Configuring 6 fields for Send Message to Slack: channel, text, username, icon_emoji, link_names, message
[2025-10-25T01:04:27.491Z] [INFO   ] [STREAM] Setting field channel = #general for Send Message to Slack
[2025-10-25T01:04:27.793Z] [INFO   ] [STREAM] Setting field text = New email received:

From: {{trigger.data.from}}
Subject: {{trigger.data.subject}}
Body: {{trigger.data.body}} for Send Message to Slack
[2025-10-25T01:04:28.096Z] [INFO   ] [STREAM] Setting field username = Email Notifier for Send Message to Slack
[2025-10-25T01:04:28.399Z] [INFO   ] [STREAM] Setting field icon_emoji = :email: for Send Message to Slack
[2025-10-25T01:04:28.702Z] [INFO   ] [STREAM] Setting field link_names = true for Send Message to Slack
[2025-10-25T01:04:29.004Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T01:04:37.029Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/collaborators ...
[2025-10-25T01:04:37.033Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 509ms (5940 modules)
[2025-10-25T01:10:49.880Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1479ms (5945 modules)
[2025-10-25T01:10:50.083Z] [INFO   ] 2025-10-25T01:10:50.083Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12787962684}
[2025-10-25T01:10:50.379Z] [INFO   ] 2025-10-25T01:10:50.379Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:10:51.163Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T01:10:51.614Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 1028ms (5933 modules)
[2025-10-25T01:10:51.744Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:10:52.022Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 366ms (4277 modules)
[2025-10-25T01:10:52.101Z] [INFO   ] 2025-10-25T01:10:52.101Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:10:52.101Z","headers":{"referer":"check-console"}}
[2025-10-25T01:10:52.104Z] [INFO   ] 2025-10-25T01:10:52.104Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12787964705}
[2025-10-25T01:10:52.398Z] [INFO   ] 2025-10-25T01:10:52.398Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:10:52.398Z"}
[2025-10-25T01:10:52.409Z] [INFO   ] 2025-10-25T01:10:52.409Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:10:52.409Z"}
[2025-10-25T01:10:52.409Z] [INFO   ] 2025-10-25T01:10:52.409Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:10:52.409Z"}
[2025-10-25T01:10:52.499Z] [INFO   ] 2025-10-25T01:10:52.499Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:10:52.603Z] [INFO   ] 2025-10-25T01:10:52.603Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:10:52.657Z] [INFO   ] 2025-10-25T01:10:52.657Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:10:53.096Z] [INFO   ] 2025-10-25T01:10:53.095Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:10:53.937Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 437ms (4279 modules)
[2025-10-25T01:10:54.745Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4284 modules)
[2025-10-25T01:10:54.850Z] [INFO   ] 2025-10-25T01:10:54.850Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:10:54.850Z","headers":{"referer":"check-console"}}
[2025-10-25T01:10:54.929Z] [INFO   ] 2025-10-25T01:10:54.929Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:10:55.010Z] [INFO   ] 2025-10-25T01:10:55.010Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:10:57.542Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:10:57.544Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:10:57.544Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:10:57.545Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:10:57.545Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:11:00.553Z] [INFO   ] [STREAM] Auto-approving plan, continuing to build immediately
[2025-10-25T01:11:00.554Z] [INFO   ] [STREAM] Plan structure: {
  hasNodes: true,
  nodeCount: 2,
  planKeys: [ 'understanding', 'nodes', 'connections' ]
}
[2025-10-25T01:11:00.554Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any received email to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects incoming emails that need to be sent to Slack.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This action is necessary to deliver the content of the received email to the chosen Slack channel.'
}
],
  connections: 'The workflow starts with the Gmail trigger detecting a new email, which then connects to the Slack action that sends the email content to a Slack channel.'
}
[2025-10-25T01:11:00.554Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects incoming emails that need to be sent to Slack.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This action is necessary to deliver the content of the received email to the chosen Slack channel.'
}
]
[2025-10-25T01:11:00.554Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 0,
  position: { x: 40, y: 80 }
}
[2025-10-25T01:11:00.656Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 1,
  position: { x: 590, y: 80 }
}
[2025-10-25T01:11:01.611Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761354660554-0)
[2025-10-25T01:11:02.412Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761354660554-0)
[2025-10-25T01:11:06.455Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'filters', 'polling_interval' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'filters', 'polling_interval', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T01:11:06.456Z] [INFO   ] [STREAM] Configuring 5 fields for Trigger on New Email: node_type, trigger, filters, polling_interval, from
[2025-10-25T01:11:06.456Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T01:11:06.759Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T01:11:07.062Z] [INFO   ] [STREAM] Setting field filters = [object Object] for Trigger on New Email
[2025-10-25T01:11:07.364Z] [INFO   ] [STREAM] Setting field polling_interval = 5 for Trigger on New Email
[2025-10-25T01:11:07.718Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T01:11:08.527Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T01:11:10.332Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761354660656-1)
[2025-10-25T01:11:11.133Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761354660656-1)
[2025-10-25T01:11:14.804Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'channel', 'text', 'username', 'icon_emoji', 'attachments' ],
  finalConfigKeys: [
  'channel',
  'text',
  'username',
  'icon_emoji',
  'attachments',
  'message'
],
  fallbackFields: [ 'message' ]
}
[2025-10-25T01:11:14.804Z] [INFO   ] [STREAM] Configuring 6 fields for Send Message to Slack: channel, text, username, icon_emoji, attachments, message
[2025-10-25T01:11:14.804Z] [INFO   ] [STREAM] Setting field channel = #general for Send Message to Slack
[2025-10-25T01:11:15.105Z] [INFO   ] [STREAM] Setting field text = New email received from {{trigger.data.from}}: {{trigger.data.subject}} for Send Message to Slack
[2025-10-25T01:11:15.407Z] [INFO   ] [STREAM] Setting field username = Email Notifier for Send Message to Slack
[2025-10-25T01:11:15.710Z] [INFO   ] [STREAM] Setting field icon_emoji = :email: for Send Message to Slack
[2025-10-25T01:11:16.011Z] [INFO   ] [STREAM] Setting field attachments = [object Object] for Send Message to Slack
[2025-10-25T01:11:16.314Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T01:11:20.583Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 430ms (1672 modules)
[2025-10-25T01:11:20.797Z] [INFO   ] 2025-10-25T01:11:20.797Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12787993398}
[2025-10-25T01:11:21.023Z] [INFO   ] 2025-10-25T01:11:21.023Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:11:38.694Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 988ms (5956 modules)
[2025-10-25T01:11:38.736Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:11:38.936Z] [INFO   ] 2025-10-25T01:11:38.936Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788011537}
[2025-10-25T01:11:39.225Z] [INFO   ] 2025-10-25T01:11:39.225Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:11:39.225Z"}
[2025-10-25T01:11:39.236Z] [INFO   ] 2025-10-25T01:11:39.236Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:11:39.236Z"}
[2025-10-25T01:11:39.236Z] [INFO   ] 2025-10-25T01:11:39.236Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:11:39.236Z"}
[2025-10-25T01:11:39.437Z] [INFO   ] 2025-10-25T01:11:39.436Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:11:39.694Z] [INFO   ] 2025-10-25T01:11:39.694Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:11:40.129Z] [INFO   ] 2025-10-25T01:11:40.129Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:11:40.129Z","headers":{"referer":"check-console"}}
[2025-10-25T01:11:40.248Z] [INFO   ] 2025-10-25T01:11:40.248Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:11:40.325Z] [INFO   ] 2025-10-25T01:11:40.325Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:11:42.680Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:11:42.682Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:11:42.682Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:11:42.683Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:11:42.683Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:11:45.305Z] [INFO   ] [STREAM] Auto-approving plan, continuing to build immediately
[2025-10-25T01:11:45.305Z] [INFO   ] [STREAM] Plan structure: {
  hasNodes: true,
  nodeCount: 2,
  planKeys: [ 'understanding', 'nodes', 'connections' ]
}
[2025-10-25T01:11:45.306Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to start the workflow whenever the user receives a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to relay the content of the new email to the Slack channel.'
}
],
  connections: 'The Gmail trigger node connects directly to the Slack action node, allowing the workflow to send the email content to Slack as soon as a new email is received.'
}
[2025-10-25T01:11:45.306Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to start the workflow whenever the user receives a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to relay the content of the new email to the Slack channel.'
}
]
[2025-10-25T01:11:45.306Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 0,
  position: { x: 40, y: 80 }
}
[2025-10-25T01:11:45.408Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 1,
  position: { x: 590, y: 80 }
}
[2025-10-25T01:11:46.362Z] [INFO   ] [STREAM] Preparing New Email Trigger (node-1761354705306-0)
[2025-10-25T01:11:47.163Z] [INFO   ] [STREAM] Starting configuration for New Email Trigger (node-1761354705306-0)
[2025-10-25T01:11:51.436Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [
  'node_type',
  'description',
  'email_filter',
  'trigger_on',
  'include_body',
  'include_attachments',
  'notification'
],
  finalConfigKeys: [
  'node_type',
  'description',
  'email_filter',
  'trigger_on',
  'include_body',
  'include_attachments',
  'notification',
  'from'
],
  fallbackFields: [ 'from' ]
}
[2025-10-25T01:11:51.436Z] [INFO   ] [STREAM] Configuring 8 fields for New Email Trigger: node_type, description, email_filter, trigger_on, include_body, include_attachments, notification, from
[2025-10-25T01:11:51.436Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for New Email Trigger
[2025-10-25T01:11:51.738Z] [INFO   ] [STREAM] Setting field description = Triggers the workflow when a new email is received in Gmail. for New Email Trigger
[2025-10-25T01:11:52.040Z] [INFO   ] [STREAM] Setting field email_filter = [object Object] for New Email Trigger
[2025-10-25T01:11:52.342Z] [INFO   ] [STREAM] Setting field trigger_on = new_email for New Email Trigger
[2025-10-25T01:11:52.644Z] [INFO   ] [STREAM] Setting field include_body = true for New Email Trigger
[2025-10-25T01:11:52.947Z] [INFO   ] [STREAM] Setting field include_attachments = false for New Email Trigger
[2025-10-25T01:11:53.250Z] [INFO   ] [STREAM] Setting field notification = [object Object] for New Email Trigger
[2025-10-25T01:11:53.552Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for New Email Trigger
[2025-10-25T01:11:54.356Z] [INFO   ] [STREAM] Skipping test for trigger New Email Trigger
[2025-10-25T01:11:56.159Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761354705407-1)
[2025-10-25T01:11:56.960Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761354705407-1)
[2025-10-25T01:12:11.357Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 1358ms (5956 modules)
[2025-10-25T01:12:11.959Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:12:12.258Z] [INFO   ] 2025-10-25T01:12:12.258Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788044859}
[2025-10-25T01:12:12.468Z] [INFO   ] 2025-10-25T01:12:12.468Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:12:12.468Z"}
[2025-10-25T01:12:12.480Z] [INFO   ] 2025-10-25T01:12:12.480Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:12:12.480Z"}
[2025-10-25T01:12:12.480Z] [INFO   ] 2025-10-25T01:12:12.480Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:12:12.480Z"}
[2025-10-25T01:12:12.529Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:12:12.530Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:12:12.530Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:12:12.680Z] [INFO   ] 2025-10-25T01:12:12.680Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:12:12.869Z] [INFO   ] 2025-10-25T01:12:12.869Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:12:13.220Z] [INFO   ] 2025-10-25T01:12:13.220Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:12:13.220Z","headers":{"referer":"check-console"}}
[2025-10-25T01:12:13.306Z] [INFO   ] 2025-10-25T01:12:13.306Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:12:13.428Z] [INFO   ] 2025-10-25T01:12:13.428Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:12:15.649Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:12:15.649Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:12:15.650Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:12:15.650Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:12:15.650Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:12:18.985Z] [INFO   ] [STREAM] Auto-approving plan, continuing to build immediately
[2025-10-25T01:12:18.985Z] [INFO   ] [STREAM] Plan structure: {
  hasNodes: true,
  nodeCount: 2,
  planKeys: [ 'understanding', 'nodes', 'connections' ]
}
[2025-10-25T01:12:18.985Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to start the workflow when the user receives a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel with the email content.',
  reasoning: 'This node is needed to send the content of the new email to the user\'s chosen Slack channel.'
}
],
  connections: 'The \'New Email Trigger\' node connects to the \'Send Message to Slack\' node, allowing the workflow to send the email content to Slack whenever a new email is received.'
}
[2025-10-25T01:12:18.985Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to start the workflow when the user receives a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel with the email content.',
  reasoning: 'This node is needed to send the content of the new email to the user\'s chosen Slack channel.'
}
]
[2025-10-25T01:12:18.986Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 0,
  position: { x: 40, y: 80 }
}
[2025-10-25T01:12:19.088Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 1,
  position: { x: 590, y: 80 }
}
[2025-10-25T01:12:20.041Z] [INFO   ] [STREAM] Preparing New Email Trigger (node-1761354738986-0)
[2025-10-25T01:12:20.841Z] [INFO   ] [STREAM] Starting configuration for New Email Trigger (node-1761354738986-0)
[2025-10-25T01:12:23.799Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'description', 'required_fields', 'optional_fields' ],
  finalConfigKeys: [
  'node_type',
  'description',
  'required_fields',
  'optional_fields',
  'from'
],
  fallbackFields: [ 'from' ]
}
[2025-10-25T01:12:23.800Z] [INFO   ] [STREAM] Configuring 5 fields for New Email Trigger: node_type, description, required_fields, optional_fields, from
[2025-10-25T01:12:23.800Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for New Email Trigger
[2025-10-25T01:12:24.102Z] [INFO   ] [STREAM] Setting field description = Triggers the workflow when a new email is received in Gmail. for New Email Trigger
[2025-10-25T01:12:24.404Z] [INFO   ] [STREAM] Setting field required_fields = [object Object] for New Email Trigger
[2025-10-25T01:12:24.709Z] [INFO   ] [STREAM] Setting field optional_fields = [object Object] for New Email Trigger
[2025-10-25T01:12:25.366Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 921ms (5956 modules)
[2025-10-25T01:12:25.623Z] [INFO   ] 2025-10-25T01:12:25.623Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788058224}
[2025-10-25T01:12:25.880Z] [INFO   ] 2025-10-25T01:12:25.879Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:12:51.703Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1138ms (5956 modules)
[2025-10-25T01:12:52.051Z] [INFO   ] 2025-10-25T01:12:52.051Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788084652}
[2025-10-25T01:12:52.588Z] [INFO   ] 2025-10-25T01:12:52.588Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:12:52.588Z"}
[2025-10-25T01:12:52.600Z] [INFO   ] 2025-10-25T01:12:52.600Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:12:52.600Z"}
[2025-10-25T01:12:52.600Z] [INFO   ] 2025-10-25T01:12:52.600Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:12:52.600Z"}
[2025-10-25T01:12:52.744Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:12:52.787Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:12:52.787Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:12:52.787Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:12:52.976Z] [INFO   ] 2025-10-25T01:12:52.975Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:12:53.196Z] [INFO   ] 2025-10-25T01:12:53.196Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:12:53.586Z] [INFO   ] 2025-10-25T01:12:53.586Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:12:53.586Z","headers":{"referer":"check-console"}}
[2025-10-25T01:12:53.665Z] [INFO   ] 2025-10-25T01:12:53.665Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:12:53.750Z] [INFO   ] 2025-10-25T01:12:53.750Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:12:56.027Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:12:56.027Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:12:56.027Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:12:56.027Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:12:56.027Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:12:58.801Z] [INFO   ] [STREAM] Auto-approving plan, continuing to build immediately
[2025-10-25T01:12:58.801Z] [INFO   ] [STREAM] Plan structure: {
  hasNodes: true,
  nodeCount: 2,
  planKeys: [ 'understanding', 'nodes', 'connections' ]
}
[2025-10-25T01:12:58.802Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any incoming email to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Gmail Trigger: New Email',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to initiate the workflow whenever a new email arrives.'
},
  {
  type: 'slack_action_send_message',
  title: 'Slack Action: Send Message',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to send the content of the received email to Slack.'
}
],
  connections: 'The Gmail trigger node connects to the Slack action node, allowing the workflow to send the email content to Slack whenever a new email is received.'
}
[2025-10-25T01:12:58.802Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Gmail Trigger: New Email',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to initiate the workflow whenever a new email arrives.'
},
  {
  type: 'slack_action_send_message',
  title: 'Slack Action: Send Message',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is needed to send the content of the received email to Slack.'
}
]
[2025-10-25T01:12:58.802Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 0,
  position: { x: 40, y: 80 }
}
[2025-10-25T01:12:58.905Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 1,
  position: { x: 590, y: 80 }
}
[2025-10-25T01:12:59.862Z] [INFO   ] [STREAM] Preparing Gmail Trigger: New Email (node-1761354778802-0)
[2025-10-25T01:13:00.665Z] [INFO   ] [STREAM] Starting configuration for Gmail Trigger: New Email (node-1761354778802-0)
[2025-10-25T01:13:04.428Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'description', 'trigger', 'options' ],
  finalConfigKeys: [ 'node_type', 'description', 'trigger', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T01:13:04.428Z] [INFO   ] [STREAM] Configuring 5 fields for Gmail Trigger: New Email: node_type, description, trigger, options, from
[2025-10-25T01:13:04.429Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Gmail Trigger: New Email
[2025-10-25T01:13:04.732Z] [INFO   ] [STREAM] Setting field description = Triggers the workflow when a new email is received in Gmail. for Gmail Trigger: New Email
[2025-10-25T01:13:05.035Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Gmail Trigger: New Email
[2025-10-25T01:13:05.338Z] [INFO   ] [STREAM] Setting field options = [object Object] for Gmail Trigger: New Email
[2025-10-25T01:13:05.640Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Gmail Trigger: New Email
[2025-10-25T01:13:06.446Z] [INFO   ] [STREAM] Skipping test for trigger Gmail Trigger: New Email
[2025-10-25T01:13:08.251Z] [INFO   ] [STREAM] Preparing Slack Action: Send Message (node-1761354778904-1)
[2025-10-25T01:13:09.054Z] [INFO   ] [STREAM] Starting configuration for Slack Action: Send Message (node-1761354778904-1)
[2025-10-25T01:14:09.040Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1699ms (5947 modules)
[2025-10-25T01:14:09.328Z] [INFO   ] 2025-10-25T01:14:09.327Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788161928}
[2025-10-25T01:14:09.582Z] [INFO   ] 2025-10-25T01:14:09.581Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:14:10.148Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 380ms (4276 modules)
[2025-10-25T01:14:11.027Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 260ms (4278 modules)
[2025-10-25T01:14:11.092Z] [INFO   ] 2025-10-25T01:14:11.092Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:14:11.092Z","headers":{"referer":"check-console"}}
[2025-10-25T01:14:11.166Z] [INFO   ] 2025-10-25T01:14:11.166Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:14:11.249Z] [INFO   ] 2025-10-25T01:14:11.249Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:14:54.948Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:14:54.961Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 671ms (1906 modules)
[2025-10-25T01:14:55.478Z] [INFO   ] 2025-10-25T01:14:55.478Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788208078}
[2025-10-25T01:14:55.780Z] [INFO   ] 2025-10-25T01:14:55.780Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:14:55.780Z"}
[2025-10-25T01:14:55.791Z] [INFO   ] 2025-10-25T01:14:55.791Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:14:55.791Z"}
[2025-10-25T01:14:55.791Z] [INFO   ] 2025-10-25T01:14:55.791Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:14:55.791Z"}
[2025-10-25T01:14:55.862Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:14:55.863Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:14:55.863Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:14:56.040Z] [INFO   ] 2025-10-25T01:14:56.040Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:14:56.329Z] [INFO   ] 2025-10-25T01:14:56.329Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:14:56.787Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 394ms (4280 modules)
[2025-10-25T01:14:57.520Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4282 modules)
[2025-10-25T01:14:57.999Z] [INFO   ] 2025-10-25T01:14:57.999Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:14:57.999Z","headers":{"referer":"check-console"}}
[2025-10-25T01:14:58.149Z] [INFO   ] 2025-10-25T01:14:58.149Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:14:58.368Z] [INFO   ] 2025-10-25T01:14:58.368Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:14:58.606Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/join ...
[2025-10-25T01:14:58.785Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 680ms (4285 modules)
[2025-10-25T01:14:59.257Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/stream-workflow in 200ms (812 modules)
[2025-10-25T01:14:59.664Z] [INFO   ] 2025-10-25T01:14:59.664Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788212265}
[2025-10-25T01:14:59.869Z] [INFO   ] 2025-10-25T01:14:59.868Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:15:01.424Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:15:01.426Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:15:01.426Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:15:01.426Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:15:01.426Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:15:04.354Z] [INFO   ] [STREAM] Auto-approving plan, continuing to build immediately
[2025-10-25T01:15:04.355Z] [INFO   ] [STREAM] Plan structure: {
  hasNodes: true,
  nodeCount: 2,
  planKeys: [ 'understanding', 'nodes', 'connections' ]
}
[2025-10-25T01:15:04.356Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to initiate the workflow whenever the user receives a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is required to send the content of the received email to Slack, fulfilling the user\'s request.'
}
],
  connections: 'The New Email Trigger node connects directly to the Send Message to Slack node, allowing the workflow to send the email content to Slack as soon as a new email is received.'
}
[2025-10-25T01:15:04.356Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'New Email Trigger',
  description: 'Triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This node is essential to initiate the workflow whenever the user receives a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'Sends a message to a specified Slack channel.',
  reasoning: 'This node is required to send the content of the received email to Slack, fulfilling the user\'s request.'
}
]
[2025-10-25T01:15:04.357Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 0,
  position: { x: 1055, y: 80 }
}
[2025-10-25T01:15:04.458Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 1,
  position: { x: 1330, y: 80 }
}
[2025-10-25T01:15:05.417Z] [INFO   ] [STREAM] Preparing New Email Trigger (node-1761354904357-0)
[2025-10-25T01:15:06.221Z] [INFO   ] [STREAM] Starting configuration for New Email Trigger (node-1761354904357-0)
[2025-10-25T01:15:31.103Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [
  'channel',
  ' // Default Slack channel, can be changed to any specific channel you want to send messages to',
  ' // Message text includes the sender\'s email',
  'username',
  ' // Default username for the message sender'
],
  finalConfigKeys: [
  'channel',
  ' // Default Slack channel, can be changed to any specific channel you want to send messages to',
  ' // Message text includes the sender\'s email',
  'username',
  ' // Default username for the message sender',
  'message'
],
  fallbackFields: [ 'message' ]
}
[2025-10-25T01:15:31.104Z] [INFO   ] [STREAM] Configuring 6 fields for Send Message to Slack: channel,  // Default Slack channel, can be changed to any specific channel you want to send messages to,  // Message text includes the sender's email, username,  // Default username for the message sender, message
[2025-10-25T01:15:31.104Z] [INFO   ] [STREAM] Setting field channel = #general for Send Message to Slack
[2025-10-25T01:15:31.105Z] [ERROR  ] 2025-10-25T01:15:31.105Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T01:16:03.875Z] [ERROR  ] 2025-10-25T01:16:03.874Z [ERROR] AI call failed: {}
[2025-10-25T01:16:03.877Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T01:16:03.877Z] [INFO   ] [STREAM] Configuring 2 fields for Slack Action: Send Message: channel, message
[2025-10-25T01:16:03.877Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Slack Action: Send Message
[2025-10-25T01:16:03.878Z] [ERROR  ] 2025-10-25T01:16:03.878Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T01:16:10.545Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:16:11.402Z] [INFO   ] 2025-10-25T01:16:11.402Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788284003}
[2025-10-25T01:16:12.248Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:16:12.448Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.6s (5928 modules)
[2025-10-25T01:16:12.789Z] [INFO   ] 2025-10-25T01:16:12.789Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:16:12.789Z"}
[2025-10-25T01:16:12.801Z] [INFO   ] 2025-10-25T01:16:12.801Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:16:12.801Z"}
[2025-10-25T01:16:12.801Z] [INFO   ] 2025-10-25T01:16:12.801Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:16:12.801Z"}
[2025-10-25T01:16:12.873Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:16:12.873Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:16:12.874Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:16:13.049Z] [INFO   ] 2025-10-25T01:16:13.049Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:16:13.365Z] [INFO   ] 2025-10-25T01:16:13.365Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:16:13.813Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 381ms (4274 modules)
[2025-10-25T01:16:14.083Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4276 modules)
[2025-10-25T01:16:15.157Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/integrations ...
[2025-10-25T01:16:15.488Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 837ms (4278 modules)
[2025-10-25T01:16:15.895Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4281 modules)
[2025-10-25T01:16:16.019Z] [INFO   ] 2025-10-25T01:16:16.018Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:16:16.018Z","headers":{"referer":"check-console"}}
[2025-10-25T01:16:16.114Z] [INFO   ] 2025-10-25T01:16:16.114Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:16:16.206Z] [INFO   ] 2025-10-25T01:16:16.206Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:16:18.671Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:16:18.673Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:16:18.674Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:16:18.674Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:16:18.674Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:16:21.681Z] [INFO   ] [STREAM] Auto-approving plan, continuing to build immediately
[2025-10-25T01:16:21.682Z] [INFO   ] [STREAM] Plan structure: {
  hasNodes: true,
  nodeCount: 2,
  planKeys: [ 'understanding', 'nodes', 'connections' ]
}
[2025-10-25T01:16:21.683Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send received emails to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the email.',
  reasoning: 'This node is necessary to forward the email content to Slack after it is triggered.'
}
],
  connections: 'The workflow starts with the Gmail trigger node, which activates when a new email is received. This triggers the Slack action node to send the email content to the designated Slack channel.'
}
[2025-10-25T01:16:21.683Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it detects incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the email.',
  reasoning: 'This node is necessary to forward the email content to Slack after it is triggered.'
}
]
[2025-10-25T01:16:21.684Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 0,
  position: { x: 1055, y: 80 }
}
[2025-10-25T01:16:21.785Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 1,
  position: { x: 1330, y: 80 }
}
[2025-10-25T01:16:22.744Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761354981683-0)
[2025-10-25T01:16:23.547Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761354981683-0)
[2025-10-25T01:16:27.279Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [
  'node_type',
  'user_id',
  'label',
  'trigger_on',
  'email_filter',
  'include_body',
  'include_attachments',
  'mark_as_read',
  'notification'
],
  finalConfigKeys: [
  'node_type',
  'user_id',
  'label',
  'trigger_on',
  'email_filter',
  'include_body',
  'include_attachments',
  'mark_as_read',
  'notification',
  'from'
],
  fallbackFields: [ 'from' ]
}
[2025-10-25T01:16:27.280Z] [INFO   ] [STREAM] Configuring 10 fields for Trigger on New Email: node_type, user_id, label, trigger_on, email_filter, include_body, include_attachments, mark_as_read, notification, from
[2025-10-25T01:16:27.280Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T01:16:27.583Z] [INFO   ] [STREAM] Setting field user_id = {{user.id}} for Trigger on New Email
[2025-10-25T01:16:27.887Z] [INFO   ] [STREAM] Setting field label = New Email Trigger for Trigger on New Email
[2025-10-25T01:16:28.190Z] [INFO   ] [STREAM] Setting field trigger_on = new_email for Trigger on New Email
[2025-10-25T01:16:28.491Z] [INFO   ] [STREAM] Setting field email_filter = [object Object] for Trigger on New Email
[2025-10-25T01:16:28.794Z] [INFO   ] [STREAM] Setting field include_body = true for Trigger on New Email
[2025-10-25T01:16:29.097Z] [INFO   ] [STREAM] Setting field include_attachments = false for Trigger on New Email
[2025-10-25T01:16:29.400Z] [INFO   ] [STREAM] Setting field mark_as_read = true for Trigger on New Email
[2025-10-25T01:16:29.701Z] [INFO   ] [STREAM] Setting field notification = [object Object] for Trigger on New Email
[2025-10-25T01:16:30.003Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T01:16:30.809Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T01:16:32.615Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761354981784-1)
[2025-10-25T01:16:33.416Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761354981784-1)
[2025-10-25T01:16:46.935Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/collaborators ...
[2025-10-25T01:16:46.946Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 514ms (4283 modules)
[2025-10-25T01:16:59.902Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 943ms (5956 modules)
[2025-10-25T01:17:00.170Z] [INFO   ] 2025-10-25T01:17:00.170Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788332771}
[2025-10-25T01:17:00.524Z] [INFO   ] 2025-10-25T01:17:00.523Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:17:01.714Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 399ms (4285 modules)
[2025-10-25T01:17:09.439Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:17:09.987Z] [INFO   ] 2025-10-25T01:17:09.987Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/52ce8877-d56e-4e94-b6b5-c70657445fb1","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788342588}
[2025-10-25T01:17:10.512Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1528ms (5958 modules)
[2025-10-25T01:17:11.408Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:17:11.690Z] [INFO   ] 2025-10-25T01:17:11.689Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:17:11.689Z"}
[2025-10-25T01:17:11.701Z] [INFO   ] 2025-10-25T01:17:11.701Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:17:11.701Z"}
[2025-10-25T01:17:11.701Z] [INFO   ] 2025-10-25T01:17:11.701Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:17:11.701Z"}
[2025-10-25T01:17:11.776Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:17:11.776Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:17:11.777Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:17:11.949Z] [INFO   ] 2025-10-25T01:17:11.949Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:17:12.259Z] [INFO   ] 2025-10-25T01:17:12.258Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:17:12.949Z] [INFO   ] 2025-10-25T01:17:12.949Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:17:12.949Z","headers":{"referer":"check-console"}}
[2025-10-25T01:17:13.080Z] [INFO   ] 2025-10-25T01:17:13.080Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:17:13.172Z] [INFO   ] 2025-10-25T01:17:13.172Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:17:16.970Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:17:16.972Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:17:16.972Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'google-docs',
  'dropbox',
  'twitter',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:17:16.973Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:17:16.973Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:17:19.574Z] [INFO   ] [STREAM] Auto-approving plan, continuing to build immediately
[2025-10-25T01:17:19.575Z] [INFO   ] [STREAM] Plan structure: {
  hasNodes: true,
  nodeCount: 2,
  planKeys: [ 'understanding', 'nodes', 'connections' ]
}
[2025-10-25T01:17:19.577Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send emails they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it captures the event of receiving a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This node is necessary to send the content of the received email to Slack, fulfilling the user\'s request.'
}
],
  connections: 'The workflow starts with the Gmail trigger for a new email, which then connects to the Slack action to send a message containing the email details.'
}
[2025-10-25T01:17:19.578Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it captures the event of receiving a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This node is necessary to send the content of the received email to Slack, fulfilling the user\'s request.'
}
]
[2025-10-25T01:17:19.579Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 0,
  position: { x: 1055, y: 80 }
}
[2025-10-25T01:17:19.681Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 1,
  position: { x: 1330, y: 80 }
}
[2025-10-25T01:17:20.639Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761355039579-0)
[2025-10-25T01:17:21.441Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761355039579-0)
[2025-10-25T01:17:24.980Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'user_id', 'label', 'trigger', 'filters', 'options' ],
  finalConfigKeys: [
  'node_type',
  'user_id',
  'label',
  'trigger',
  'filters',
  'options',
  'from'
],
  fallbackFields: [ 'from' ]
}
[2025-10-25T01:17:24.980Z] [INFO   ] [STREAM] Configuring 7 fields for Trigger on New Email: node_type, user_id, label, trigger, filters, options, from
[2025-10-25T01:17:24.981Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T01:17:25.283Z] [INFO   ] [STREAM] Setting field user_id = {{user.id}} for Trigger on New Email
[2025-10-25T01:17:25.589Z] [INFO   ] [STREAM] Setting field label = New Email Trigger for Trigger on New Email
[2025-10-25T01:17:25.895Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T01:17:26.221Z] [INFO   ] [STREAM] Setting field filters = [object Object] for Trigger on New Email
[2025-10-25T01:17:26.522Z] [INFO   ] [STREAM] Setting field options = [object Object] for Trigger on New Email
[2025-10-25T01:17:26.833Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T01:17:27.637Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T01:17:29.442Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761355039680-1)
[2025-10-25T01:17:30.244Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761355039680-1)
[2025-10-25T01:17:33.678Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'channel', 'text', 'username', 'icon_emoji', 'attachments' ],
  finalConfigKeys: [
  'channel',
  'text',
  'username',
  'icon_emoji',
  'attachments',
  'message'
],
  fallbackFields: [ 'message' ]
}
[2025-10-25T01:17:33.679Z] [INFO   ] [STREAM] Configuring 6 fields for Send Message to Slack: channel, text, username, icon_emoji, attachments, message
[2025-10-25T01:17:33.679Z] [INFO   ] [STREAM] Setting field channel = #general for Send Message to Slack
[2025-10-25T01:17:33.982Z] [INFO   ] [STREAM] Setting field text = New email received from {{trigger.data.from}}: {{trigger.data.subject}} for Send Message to Slack
[2025-10-25T01:17:34.285Z] [INFO   ] [STREAM] Setting field username = Email Notifier for Send Message to Slack
[2025-10-25T01:17:34.590Z] [INFO   ] [STREAM] Setting field icon_emoji = :email: for Send Message to Slack
[2025-10-25T01:17:34.894Z] [INFO   ] [STREAM] Setting field attachments = [object Object] for Send Message to Slack
[2025-10-25T01:17:35.198Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T01:17:53.430Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [
  'node_type',
  'description',
  'email_address',
  ' // Assuming the previous node provides the email address to monitor for new emails. Adjust as necessary based on actual previous node output.',
  ' // Default to the inbox folder, can be adjusted if needed.',
  ' // Default to only trigger on unread emails.',
  ' // Default to true to ensure the trigger is active.'
],
  finalConfigKeys: [
  'node_type',
  'description',
  'email_address',
  ' // Assuming the previous node provides the email address to monitor for new emails. Adjust as necessary based on actual previous node output.',
  ' // Default to the inbox folder, can be adjusted if needed.',
  ' // Default to only trigger on unread emails.',
  ' // Default to true to ensure the trigger is active.',
  'from'
],
  fallbackFields: [ 'from' ]
}
[2025-10-25T01:17:53.431Z] [INFO   ] [STREAM] Configuring 8 fields for New Email Trigger: node_type, description, email_address,  // Assuming the previous node provides the email address to monitor for new emails. Adjust as necessary based on actual previous node output.,  // Default to the inbox folder, can be adjusted if needed.,  // Default to only trigger on unread emails.,  // Default to true to ensure the trigger is active., from
[2025-10-25T01:17:53.431Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for New Email Trigger
[2025-10-25T01:17:53.432Z] [ERROR  ] 2025-10-25T01:17:53.432Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T01:20:04.036Z] [ERROR  ] 2025-10-25T01:20:04.035Z [ERROR] AI call failed: {}
[2025-10-25T01:20:04.038Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T01:20:04.038Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T01:20:04.038Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T01:20:04.039Z] [ERROR  ] 2025-10-25T01:20:04.039Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T01:20:33.527Z] [INFO   ] 2025-10-25T01:20:33.527Z [DEBUG] üîë Discord bot token loaded
[2025-10-25T01:20:33.595Z] [INFO   ] 2025-10-25T01:20:33.595Z [DEBUG] Discord Gateway closed, persistent reconnect disabled
[2025-10-25T01:20:33.935Z] [INFO   ] 2025-10-25T01:20:33.935Z [DEBUG] Discord Gateway WebSocket connection established
[2025-10-25T01:20:33.937Z] [INFO   ] 2025-10-25T01:20:33.937Z [DEBUG] üîë Sending identify with intents: {"GUILDS":true,"GUILD_MEMBERS":true,"GUILD_INVITES":true,"GUILD_MESSAGES":true,"MESSAGE_CONTENT":true,"intentsValue":33347}
[2025-10-25T01:20:34.379Z] [INFO   ] 2025-10-25T01:20:34.379Z [DEBUG] üéâ Discord bot ready! {"sessionId":"5c9ca7fe8d36da1c5b39d0ab24973baa","username":"ChainReact-Bot","userId":"1378595955212812308","guildCount":2}
[2025-10-25T01:20:34.380Z] [INFO   ] 2025-10-25T01:20:34.380Z [DEBUG] üìã Initializing invite cache...
[2025-10-25T01:20:34.384Z] [INFO   ] 2025-10-25T01:20:34.384Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T01:20:34.393Z] [INFO   ] 2025-10-25T01:20:34.393Z [DEBUG] üì° Discord event received: GUILD_CREATE
[2025-10-25T01:20:34.569Z] [INFO   ] 2025-10-25T01:20:34.569Z [DEBUG] ‚úÖ Cached 3 invites for guild 1378950884045623406
[2025-10-25T01:21:50.290Z] [INFO   ] 2025-10-25T01:21:50.289Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788622889}
[2025-10-25T01:21:50.767Z] [INFO   ] 2025-10-25T01:21:50.767Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:21:54.670Z] [INFO   ] 2025-10-25T01:21:54.670Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:21:54.670Z","headers":{"referer":"check-console"}}
[2025-10-25T01:21:54.785Z] [INFO   ] 2025-10-25T01:21:54.785Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:21:54.885Z] [INFO   ] 2025-10-25T01:21:54.885Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:21:58.843Z] [INFO   ] 2025-10-25T01:21:58.842Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/5fcb1ef9-ce04-4a51-bfc6-6f6675c61454","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788631443}
[2025-10-25T01:21:59.139Z] [INFO   ] 2025-10-25T01:21:59.138Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:22:02.055Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:22:02.056Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:22:02.057Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:22:02.057Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:22:02.057Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:22:04.864Z] [INFO   ] [STREAM] Auto-approving plan, continuing to build immediately
[2025-10-25T01:22:04.865Z] [INFO   ] [STREAM] Plan structure: {
  hasNodes: true,
  nodeCount: 2,
  planKeys: [ 'understanding', 'nodes', 'connections' ]
}
[2025-10-25T01:22:04.866Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the initial trigger that starts the workflow when the user receives a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the email.',
  reasoning: 'This action sends the email content to Slack, fulfilling the user\'s request to forward emails to Slack.'
}
],
  connections: 'The workflow starts with the Gmail trigger for new emails, which connects directly to the Slack action to send the email content.'
}
[2025-10-25T01:22:04.866Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the initial trigger that starts the workflow when the user receives a new email.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the email.',
  reasoning: 'This action sends the email content to Slack, fulfilling the user\'s request to forward emails to Slack.'
}
]
[2025-10-25T01:22:04.866Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 0,
  position: { x: 1055, y: 80 }
}
[2025-10-25T01:22:04.968Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 1,
  position: { x: 1330, y: 80 }
}
[2025-10-25T01:22:05.921Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761355324866-0)
[2025-10-25T01:22:06.723Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761355324866-0)
[2025-10-25T01:22:09.625Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T01:22:09.626Z] [INFO   ] [STREAM] Configuring 4 fields for Trigger on New Email: node_type, trigger, options, from
[2025-10-25T01:22:09.626Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T01:22:09.927Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T01:22:10.230Z] [INFO   ] [STREAM] Setting field options = [object Object] for Trigger on New Email
[2025-10-25T01:22:10.532Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T01:22:11.337Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T01:22:13.141Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761355324968-1)
[2025-10-25T01:22:13.943Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761355324968-1)
[2025-10-25T01:23:33.392Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 3.1s (5935 modules)
[2025-10-25T01:23:33.576Z] [INFO   ] 2025-10-25T01:23:33.575Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/5fcb1ef9-ce04-4a51-bfc6-6f6675c61454","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788726176}
[2025-10-25T01:23:33.869Z] [INFO   ] 2025-10-25T01:23:33.869Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:23:34.691Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 438ms (4270 modules)
[2025-10-25T01:23:35.614Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 307ms (4272 modules)
[2025-10-25T01:23:35.681Z] [INFO   ] 2025-10-25T01:23:35.681Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:23:35.681Z","headers":{"referer":"check-console"}}
[2025-10-25T01:23:35.751Z] [INFO   ] 2025-10-25T01:23:35.751Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:23:35.842Z] [INFO   ] 2025-10-25T01:23:35.842Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:24:07.539Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1637ms (5939 modules)
[2025-10-25T01:24:07.930Z] [INFO   ] 2025-10-25T01:24:07.930Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/5fcb1ef9-ce04-4a51-bfc6-6f6675c61454","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788760531}
[2025-10-25T01:24:08.340Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T01:24:08.717Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:24:08.918Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 1095ms (4275 modules)
[2025-10-25T01:24:09.407Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (4277 modules)
[2025-10-25T01:24:09.697Z] [INFO   ] 2025-10-25T01:24:09.697Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:24:09.697Z"}
[2025-10-25T01:24:09.708Z] [INFO   ] 2025-10-25T01:24:09.708Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:24:09.708Z"}
[2025-10-25T01:24:09.708Z] [INFO   ] 2025-10-25T01:24:09.708Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:24:09.708Z"}
[2025-10-25T01:24:09.784Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:24:09.785Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:24:09.785Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:24:09.880Z] [ERROR  ] 2025-10-25T01:24:09.880Z [ERROR] Collaboration join error: {"code":"ECONNRESET"}
[2025-10-25T01:24:10.018Z] [INFO   ] 2025-10-25T01:24:10.017Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:24:10.323Z] [INFO   ] 2025-10-25T01:24:10.323Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T01:24:10.847Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/auth/profile in 457ms (4279 modules)
[2025-10-25T01:24:11.563Z] [INFO   ] 2025-10-25T01:24:11.562Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:24:11.562Z","headers":{"referer":"check-console"}}
[2025-10-25T01:24:11.696Z] [INFO   ] 2025-10-25T01:24:11.696Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:24:11.776Z] [INFO   ] 2025-10-25T01:24:11.776Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:24:14.351Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:24:14.352Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:24:14.352Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:24:14.352Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:24:14.353Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:24:16.171Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 932ms (5946 modules)
[2025-10-25T01:24:16.366Z] [INFO   ] 2025-10-25T01:24:16.366Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/5fcb1ef9-ce04-4a51-bfc6-6f6675c61454","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788768967}
[2025-10-25T01:24:16.657Z] [INFO   ] 2025-10-25T01:24:16.657Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:24:17.250Z] [INFO   ] [STREAM] Auto-approving plan, continuing to build immediately
[2025-10-25T01:24:17.251Z] [INFO   ] [STREAM] Plan structure: {
  hasNodes: true,
  nodeCount: 2,
  planKeys: [ 'understanding', 'nodes', 'connections' ]
}
[2025-10-25T01:24:17.251Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send a notification to a Slack channel whenever they receive a new email.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it captures the user\'s requirement to respond to new emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with details of the new email.',
  reasoning: 'This node fulfills the user\'s request to notify them in Slack about new emails.'
}
],
  connections: 'The workflow starts with the Gmail trigger for a new email, which then connects to the Slack action to send a message.'
}
[2025-10-25T01:24:17.251Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, as it captures the user\'s requirement to respond to new emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with details of the new email.',
  reasoning: 'This node fulfills the user\'s request to notify them in Slack about new emails.'
}
]
[2025-10-25T01:24:17.252Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 0,
  position: { x: 1055, y: 80 }
}
[2025-10-25T01:24:17.353Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1472, height: 852, zoom: 0.75, chatPanelWidth: 448 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 1,
  position: { x: 1330, y: 80 }
}
[2025-10-25T01:24:18.307Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761355457251-0)
[2025-10-25T01:24:19.110Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761355457251-0)
[2025-10-25T01:24:23.683Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'filters', 'options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'filters', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T01:24:23.683Z] [INFO   ] [STREAM] Configuring 5 fields for Trigger on New Email: node_type, trigger, filters, options, from
[2025-10-25T01:24:23.683Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T01:24:23.986Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T01:24:24.289Z] [INFO   ] [STREAM] Setting field filters = [object Object] for Trigger on New Email
[2025-10-25T01:24:24.591Z] [INFO   ] [STREAM] Setting field options = [object Object] for Trigger on New Email
[2025-10-25T01:24:24.892Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T01:24:25.697Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T01:24:27.499Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761355457353-1)
[2025-10-25T01:24:28.301Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761355457353-1)
[2025-10-25T01:24:33.783Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1016ms (5946 modules)
[2025-10-25T01:24:35.031Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:24:35.042Z] [INFO   ] 2025-10-25T01:24:35.042Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/5fcb1ef9-ce04-4a51-bfc6-6f6675c61454","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12788787643}
[2025-10-25T01:24:35.402Z] [INFO   ] 2025-10-25T01:24:35.402Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:24:35.402Z"}
[2025-10-25T01:24:35.415Z] [INFO   ] 2025-10-25T01:24:35.415Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:24:35.415Z"}
[2025-10-25T01:24:35.415Z] [INFO   ] 2025-10-25T01:24:35.415Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:24:35.415Z"}
[2025-10-25T01:24:35.488Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:24:35.489Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:24:35.489Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:24:35.666Z] [INFO   ] 2025-10-25T01:24:35.665Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:24:35.991Z] [INFO   ] 2025-10-25T01:24:35.991Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T01:24:36.535Z] [INFO   ] 2025-10-25T01:24:36.534Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:24:36.534Z","headers":{"referer":"check-console"}}
[2025-10-25T01:24:36.691Z] [INFO   ] 2025-10-25T01:24:36.691Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:24:36.836Z] [INFO   ] 2025-10-25T01:24:36.836Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:24:39.392Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:24:39.392Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:24:39.392Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:24:39.392Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:24:39.392Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:25:52.610Z] [ERROR  ] 2025-10-25T01:25:52.609Z [ERROR] AI call failed: {}
[2025-10-25T01:25:52.612Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T01:25:52.612Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T01:25:52.612Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T01:25:52.612Z] [ERROR  ] 2025-10-25T01:25:52.612Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T01:27:48.557Z] [ERROR  ] 2025-10-25T01:27:48.557Z [ERROR] AI call failed: {}
[2025-10-25T01:27:48.559Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T01:27:48.559Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T01:27:48.560Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T01:27:48.561Z] [ERROR  ] 2025-10-25T01:27:48.560Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T01:32:47.231Z] [INFO   ] 2025-10-25T01:32:47.230Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789279831}
[2025-10-25T01:32:47.602Z] [INFO   ] 2025-10-25T01:32:47.602Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:32:51.308Z] [INFO   ] 2025-10-25T01:32:51.308Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:32:51.308Z","headers":{"referer":"check-console"}}
[2025-10-25T01:32:51.421Z] [INFO   ] 2025-10-25T01:32:51.421Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:32:51.504Z] [INFO   ] 2025-10-25T01:32:51.504Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:32:56.376Z] [INFO   ] 2025-10-25T01:32:56.375Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789288976}
[2025-10-25T01:32:56.693Z] [INFO   ] 2025-10-25T01:32:56.693Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:32:59.279Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:32:59.279Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:32:59.280Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:32:59.280Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:32:59.280Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:33:07.047Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any new email they receive to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, allowing it to respond to incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This action delivers the email content to Slack, fulfilling the user\'s request.'
}
],
  connections: 'The workflow starts with the \'gmail_trigger_new_email\' node, which triggers the \'slack_action_send_message\' node to send the email content to Slack.'
}
[2025-10-25T01:33:07.047Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow whenever a new email is received in the user\'s Gmail account.',
  reasoning: 'This is the starting point of the workflow, allowing it to respond to incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel with the content of the new email.',
  reasoning: 'This action delivers the email content to Slack, fulfilling the user\'s request.'
}
]
[2025-10-25T01:33:07.048Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 920, height: 852, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 0,
  position: { x: 1055, y: 80 }
}
[2025-10-25T01:33:07.150Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 920, height: 852, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 2560,
  visibleHeight: 1136,
  availableWidth: 2480,
  nodesPerRow: 4,
  row: 0,
  col: 1,
  position: { x: 1330, y: 80 }
}
[2025-10-25T01:33:08.107Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761355987047-0)
[2025-10-25T01:33:08.909Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761355987047-0)
[2025-10-25T01:33:12.831Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T01:33:12.831Z] [INFO   ] [STREAM] Configuring 4 fields for Trigger on New Email: node_type, trigger, options, from
[2025-10-25T01:33:12.831Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T01:33:13.133Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T01:33:13.436Z] [INFO   ] [STREAM] Setting field options = [object Object] for Trigger on New Email
[2025-10-25T01:33:13.739Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T01:33:14.545Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T01:33:16.351Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761355987149-1)
[2025-10-25T01:33:17.154Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761355987149-1)
[2025-10-25T01:35:17.266Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 859ms (1900 modules)
[2025-10-25T01:35:17.826Z] [INFO   ] 2025-10-25T01:35:17.826Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789430426}
[2025-10-25T01:35:18.015Z] [INFO   ] 2025-10-25T01:35:18.014Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:35:19.525Z] [INFO   ] 2025-10-25T01:35:19.525Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:35:19.525Z","headers":{"referer":"check-console"}}
[2025-10-25T01:35:19.621Z] [INFO   ] 2025-10-25T01:35:19.621Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:35:19.773Z] [INFO   ] 2025-10-25T01:35:19.773Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:35:31.641Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.5s (5939 modules)
[2025-10-25T01:35:31.728Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:35:32.000Z] [INFO   ] 2025-10-25T01:35:31.999Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789444600}
[2025-10-25T01:35:32.425Z] [INFO   ] 2025-10-25T01:35:32.424Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:35:32.424Z"}
[2025-10-25T01:35:32.437Z] [INFO   ] 2025-10-25T01:35:32.437Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:35:32.437Z"}
[2025-10-25T01:35:32.437Z] [INFO   ] 2025-10-25T01:35:32.437Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:35:32.437Z"}
[2025-10-25T01:35:32.527Z] [ERROR  ] aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:35:32.528Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException: aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:35:32.528Z] [ERROR  ]  [31m[1m‚®Ø[22m[39m uncaughtException:  aborted
Error: aborted
    at abortIncoming (node:_http_server:809:17)
    at socketOnClose (node:_http_server:803:3)
    at Socket.emit (node:events:519:35)
    at TCP.<anonymous> (node:net:351:12)
    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)
[2025-10-25T01:35:32.693Z] [INFO   ] 2025-10-25T01:35:32.692Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:35:32.972Z] [INFO   ] 2025-10-25T01:35:32.972Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:35:33.759Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T01:35:33.794Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 567ms (4274 modules)
[2025-10-25T01:35:34.239Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4276 modules)
[2025-10-25T01:35:34.782Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/join in 1ms (4276 modules)
[2025-10-25T01:35:36.045Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T01:35:36.759Z] [INFO   ] 2025-10-25T01:35:36.759Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:35:36.759Z","headers":{"referer":"check-console"}}
[2025-10-25T01:35:36.917Z] [INFO   ] 2025-10-25T01:35:36.917Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:35:37.045Z] [INFO   ] 2025-10-25T01:35:37.045Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:35:38.032Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/stream-workflow in 172ms (812 modules)
[2025-10-25T01:35:38.476Z] [INFO   ] 2025-10-25T01:35:38.475Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789451076}
[2025-10-25T01:35:38.753Z] [INFO   ] 2025-10-25T01:35:38.753Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:35:39.699Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:35:39.700Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:35:39.700Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:35:39.700Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:35:39.700Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:35:46.958Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 970ms (5946 modules)
[2025-10-25T01:35:47.001Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:35:47.219Z] [INFO   ] 2025-10-25T01:35:47.219Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789459820}
[2025-10-25T01:35:47.587Z] [INFO   ] 2025-10-25T01:35:47.587Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:35:47.587Z"}
[2025-10-25T01:35:47.599Z] [INFO   ] 2025-10-25T01:35:47.599Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:35:47.599Z"}
[2025-10-25T01:35:47.600Z] [INFO   ] 2025-10-25T01:35:47.600Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:35:47.600Z"}
[2025-10-25T01:35:47.835Z] [INFO   ] 2025-10-25T01:35:47.834Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:35:48.127Z] [INFO   ] 2025-10-25T01:35:48.126Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:35:48.909Z] [INFO   ] 2025-10-25T01:35:48.909Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:35:48.909Z","headers":{"referer":"check-console"}}
[2025-10-25T01:35:49.048Z] [INFO   ] 2025-10-25T01:35:49.047Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:35:49.207Z] [INFO   ] 2025-10-25T01:35:49.207Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:35:51.478Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:35:51.480Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:35:51.480Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:35:51.480Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:35:51.480Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:36:00.906Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1797ms (5946 modules)
[2025-10-25T01:36:01.257Z] [INFO   ] 2025-10-25T01:36:01.257Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789473858}
[2025-10-25T01:36:02.122Z] [INFO   ] 2025-10-25T01:36:02.122Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:36:09.350Z] [ERROR  ] 2025-10-25T01:36:09.350Z [ERROR] AI call failed: {}
[2025-10-25T01:36:09.353Z] [INFO   ] [STREAM] Config result: {
  success: false,
  hasConfig: false,
  configKeys: [],
  finalConfigKeys: [ 'channel', 'message' ],
  fallbackFields: [ 'channel', 'message' ]
}
[2025-10-25T01:36:09.353Z] [INFO   ] [STREAM] Configuring 2 fields for Send Message to Slack: channel, message
[2025-10-25T01:36:09.353Z] [INFO   ] [STREAM] Setting field channel = Select a channel for Send Message to Slack
[2025-10-25T01:36:09.353Z] [ERROR  ] 2025-10-25T01:36:09.353Z [ERROR] Stream workflow error: {"message":"Invalid state: Controller is already closed","stack":"TypeError: Invalid state: Controller is already closed\n    at ReadableStreamDefaultController.enqueue (node:internal/webstreams/readablestream:1077:13)\n    at sendEvent (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:58:32)\n    at Object.start (webpack-internal:///(rsc)/./app/api/ai/stream-workflow/route.ts:438:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","name":"TypeError","fullError":"{\n  \"code\": \"ERR_INVALID_STATE\"\n}"}
[2025-10-25T01:36:12.144Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.2s (5944 modules)
[2025-10-25T01:36:12.479Z] [INFO   ] 2025-10-25T01:36:12.479Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789485080}
[2025-10-25T01:36:12.874Z] [INFO   ] 2025-10-25T01:36:12.874Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:36:12.874Z"}
[2025-10-25T01:36:12.887Z] [INFO   ] 2025-10-25T01:36:12.887Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:36:12.887Z"}
[2025-10-25T01:36:12.888Z] [INFO   ] 2025-10-25T01:36:12.888Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:36:12.888Z"}
[2025-10-25T01:36:13.137Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:36:13.177Z] [INFO   ] 2025-10-25T01:36:13.176Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:36:13.423Z] [INFO   ] 2025-10-25T01:36:13.423Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:36:14.127Z] [INFO   ] 2025-10-25T01:36:14.127Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:36:14.127Z","headers":{"referer":"check-console"}}
[2025-10-25T01:36:14.312Z] [INFO   ] 2025-10-25T01:36:14.311Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:36:14.399Z] [INFO   ] 2025-10-25T01:36:14.399Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:36:17.141Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:36:17.142Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:36:17.142Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:36:17.142Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:36:17.142Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:36:45.317Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 369ms (4279 modules)
[2025-10-25T01:37:14.928Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1099ms (2479 modules)
[2025-10-25T01:37:15.318Z] [INFO   ] 2025-10-25T01:37:15.318Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789547919}
[2025-10-25T01:37:15.659Z] [INFO   ] 2025-10-25T01:37:15.659Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:37:17.176Z] [INFO   ] 2025-10-25T01:37:17.176Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:37:17.176Z","headers":{"referer":"check-console"}}
[2025-10-25T01:37:17.254Z] [INFO   ] 2025-10-25T01:37:17.254Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:37:17.355Z] [INFO   ] 2025-10-25T01:37:17.354Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:37:41.321Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 632ms (1900 modules)
[2025-10-25T01:37:41.341Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:37:41.648Z] [INFO   ] 2025-10-25T01:37:41.648Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789574249}
[2025-10-25T01:37:41.915Z] [INFO   ] 2025-10-25T01:37:41.915Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:37:41.914Z"}
[2025-10-25T01:37:41.929Z] [INFO   ] 2025-10-25T01:37:41.929Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:37:41.929Z"}
[2025-10-25T01:37:41.929Z] [INFO   ] 2025-10-25T01:37:41.929Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:37:41.929Z"}
[2025-10-25T01:37:42.146Z] [INFO   ] 2025-10-25T01:37:42.145Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:37:42.397Z] [INFO   ] 2025-10-25T01:37:42.397Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:37:43.063Z] [INFO   ] 2025-10-25T01:37:43.063Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:37:43.063Z","headers":{"referer":"check-console"}}
[2025-10-25T01:37:43.274Z] [INFO   ] 2025-10-25T01:37:43.274Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:37:43.394Z] [INFO   ] 2025-10-25T01:37:43.394Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:37:45.208Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/stream-workflow in 380ms (812 modules)
[2025-10-25T01:37:46.324Z] [INFO   ] 2025-10-25T01:37:46.324Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789578925}
[2025-10-25T01:37:46.513Z] [INFO   ] 2025-10-25T01:37:46.513Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:37:47.472Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:37:47.473Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:37:47.473Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:37:47.473Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:37:47.473Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:38:40.482Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2s (5944 modules)
[2025-10-25T01:38:40.548Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:38:40.750Z] [INFO   ] 2025-10-25T01:38:40.750Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789633351}
[2025-10-25T01:38:41.122Z] [INFO   ] 2025-10-25T01:38:41.122Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:38:41.122Z"}
[2025-10-25T01:38:41.134Z] [INFO   ] 2025-10-25T01:38:41.134Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:38:41.134Z"}
[2025-10-25T01:38:41.134Z] [INFO   ] 2025-10-25T01:38:41.134Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:38:41.134Z"}
[2025-10-25T01:38:41.367Z] [INFO   ] 2025-10-25T01:38:41.367Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:38:41.681Z] [INFO   ] 2025-10-25T01:38:41.681Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:38:42.511Z] [INFO   ] 2025-10-25T01:38:42.510Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:38:42.510Z","headers":{"referer":"check-console"}}
[2025-10-25T01:38:42.599Z] [INFO   ] 2025-10-25T01:38:42.599Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:38:42.684Z] [INFO   ] 2025-10-25T01:38:42.684Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:38:45.126Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:38:45.128Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:38:45.128Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:38:45.128Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:38:45.128Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:38:54.827Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1289ms (5942 modules)
[2025-10-25T01:38:55.064Z] [INFO   ] 2025-10-25T01:38:55.064Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789647665}
[2025-10-25T01:38:55.398Z] [INFO   ] 2025-10-25T01:38:55.398Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:38:56.174Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T01:38:56.216Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 552ms (4277 modules)
[2025-10-25T01:39:25.281Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.9s (5944 modules)
[2025-10-25T01:39:25.919Z] [INFO   ] 2025-10-25T01:39:25.919Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789678519}
[2025-10-25T01:39:26.485Z] [INFO   ] 2025-10-25T01:39:26.485Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:39:26.485Z"}
[2025-10-25T01:39:26.498Z] [INFO   ] 2025-10-25T01:39:26.498Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:39:26.498Z"}
[2025-10-25T01:39:26.498Z] [INFO   ] 2025-10-25T01:39:26.498Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:39:26.498Z"}
[2025-10-25T01:39:26.658Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:39:26.855Z] [INFO   ] 2025-10-25T01:39:26.854Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:39:27.191Z] [INFO   ] 2025-10-25T01:39:27.190Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:39:28.055Z] [INFO   ] 2025-10-25T01:39:28.055Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:39:28.055Z","headers":{"referer":"check-console"}}
[2025-10-25T01:39:28.184Z] [INFO   ] 2025-10-25T01:39:28.184Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:39:28.281Z] [INFO   ] 2025-10-25T01:39:28.281Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:39:31.237Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:39:31.238Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:39:31.238Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'dropbox',
  'twitter',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:39:31.239Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:39:31.239Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:39:58.456Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1097ms (5944 modules)
[2025-10-25T01:39:58.715Z] [INFO   ] 2025-10-25T01:39:58.715Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789711316}
[2025-10-25T01:39:59.278Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/collaborators ...
[2025-10-25T01:40:00.102Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 1417ms (4279 modules)
[2025-10-25T01:40:01.115Z] [INFO   ] 2025-10-25T01:40:01.115Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:40:11.894Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.2s (5946 modules)
[2025-10-25T01:40:12.239Z] [INFO   ] 2025-10-25T01:40:12.239Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789724840}
[2025-10-25T01:40:12.720Z] [INFO   ] 2025-10-25T01:40:12.719Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:40:12.719Z"}
[2025-10-25T01:40:12.732Z] [INFO   ] 2025-10-25T01:40:12.732Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:40:12.732Z"}
[2025-10-25T01:40:12.732Z] [INFO   ] 2025-10-25T01:40:12.732Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:40:12.732Z"}
[2025-10-25T01:40:12.937Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:40:13.028Z] [INFO   ] 2025-10-25T01:40:13.027Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:40:13.342Z] [INFO   ] 2025-10-25T01:40:13.342Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:40:13.976Z] [INFO   ] 2025-10-25T01:40:13.975Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:40:13.975Z","headers":{"referer":"check-console"}}
[2025-10-25T01:40:14.087Z] [INFO   ] 2025-10-25T01:40:14.087Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:40:14.202Z] [INFO   ] 2025-10-25T01:40:14.202Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:40:16.707Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:40:16.708Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:40:16.709Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:40:16.709Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:40:16.709Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:40:49.185Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1285ms (5946 modules)
[2025-10-25T01:40:49.404Z] [INFO   ] 2025-10-25T01:40:49.404Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789762005}
[2025-10-25T01:40:49.710Z] [INFO   ] 2025-10-25T01:40:49.709Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:41:04.326Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1049ms (5946 modules)
[2025-10-25T01:41:04.599Z] [INFO   ] 2025-10-25T01:41:04.598Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789777199}
[2025-10-25T01:41:05.098Z] [INFO   ] 2025-10-25T01:41:05.098Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:41:05.098Z"}
[2025-10-25T01:41:05.111Z] [INFO   ] 2025-10-25T01:41:05.111Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:41:05.111Z"}
[2025-10-25T01:41:05.111Z] [INFO   ] 2025-10-25T01:41:05.111Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:41:05.111Z"}
[2025-10-25T01:41:05.325Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:41:05.391Z] [INFO   ] 2025-10-25T01:41:05.390Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:41:05.619Z] [INFO   ] 2025-10-25T01:41:05.619Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:41:06.279Z] [INFO   ] 2025-10-25T01:41:06.279Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:41:06.279Z","headers":{"referer":"check-console"}}
[2025-10-25T01:41:06.409Z] [INFO   ] 2025-10-25T01:41:06.409Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:41:06.533Z] [INFO   ] 2025-10-25T01:41:06.533Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:41:09.033Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:41:09.034Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:41:09.034Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:41:09.034Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:41:09.034Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:41:19.180Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1117ms (5946 modules)
[2025-10-25T01:41:19.451Z] [INFO   ] 2025-10-25T01:41:19.451Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789792052}
[2025-10-25T01:41:19.809Z] [INFO   ] 2025-10-25T01:41:19.809Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:41:40.398Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:41:42.698Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 5s (5946 modules)
[2025-10-25T01:41:42.975Z] [INFO   ] 2025-10-25T01:41:42.975Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/29ae588e-4f89-4c82-bf7f-05d9c0fb0baf","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12789815576}
[2025-10-25T01:41:43.263Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T01:41:43.650Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T01:41:44.023Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T01:41:44.662Z] [INFO   ] 2025-10-25T01:41:44.662Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:41:44.662Z"}
[2025-10-25T01:41:44.674Z] [INFO   ] 2025-10-25T01:41:44.674Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:41:44.674Z"}
[2025-10-25T01:41:44.674Z] [INFO   ] 2025-10-25T01:41:44.674Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:41:44.674Z"}
[2025-10-25T01:41:44.962Z] [INFO   ] 2025-10-25T01:41:44.961Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:41:45.216Z] [INFO   ] 2025-10-25T01:41:45.216Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"When I get an email send it to slack"}
[2025-10-25T01:41:48.112Z] [INFO   ] 2025-10-25T01:41:48.112Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:41:48.112Z","headers":{"referer":"check-console"}}
[2025-10-25T01:41:48.356Z] [INFO   ] 2025-10-25T01:41:48.354Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:41:48.541Z] [INFO   ] 2025-10-25T01:41:48.541Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:41:51.270Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:41:51.270Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:41:51.271Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:41:51.271Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:41:51.271Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:44:50.429Z] [INFO   ] 2025-10-25T01:44:50.428Z [DEBUG] [Middleware] Username check: {"path":"/workflows/ai-agent","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790003029}
[2025-10-25T01:44:50.919Z] [INFO   ] 2025-10-25T01:44:50.918Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:44:55.825Z] [INFO   ] 2025-10-25T01:44:55.825Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:44:55.825Z","headers":{"referer":"check-console"}}
[2025-10-25T01:44:55.961Z] [INFO   ] 2025-10-25T01:44:55.961Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:44:56.071Z] [INFO   ] 2025-10-25T01:44:56.071Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:45:01.582Z] [INFO   ] 2025-10-25T01:45:01.582Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790014183}
[2025-10-25T01:45:01.957Z] [INFO   ] 2025-10-25T01:45:01.956Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:45:04.730Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:45:04.731Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:45:04.731Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:45:04.731Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:45:04.732Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:45:08.604Z] [INFO   ] [STREAM] Phase 2: Starting node creation, plan: {
  understanding: 'The user wants to automatically send any incoming email to a Slack channel.',
  nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This is the starting point of the workflow, as it detects incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This action is required to relay the content of the received email to Slack.'
}
],
  connections: 'The workflow starts with the Gmail trigger for new emails, which then connects to the Slack action to send the email content to a designated Slack channel.'
}
[2025-10-25T01:45:08.605Z] [INFO   ] [STREAM] Plan nodes: [
  {
  type: 'gmail_trigger_new_email',
  title: 'Trigger on New Email',
  description: 'This node triggers the workflow when a new email is received in Gmail.',
  reasoning: 'This is the starting point of the workflow, as it detects incoming emails.'
},
  {
  type: 'slack_action_send_message',
  title: 'Send Message to Slack',
  description: 'This node sends a message to a specified Slack channel.',
  reasoning: 'This action is required to relay the content of the received email to Slack.'
}
]
[2025-10-25T01:45:08.605Z] [INFO   ] [POSITION] Node 0 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 1,
  row: 0,
  col: 0,
  position: { x: 813.6666666666667, y: 80 }
}
[2025-10-25T01:45:08.707Z] [INFO   ] [POSITION] Node 1 : {
  viewport: { width: 1558, height: 1211, zoom: 0.75, chatPanelWidth: 1000 },
  effectiveViewportWidth: 3410.6666666666665,
  builderViewportWidth: 2077.3333333333335,
  visibleHeight: 1614.6666666666667,
  availableWidth: 1997.3333333333335,
  nodesPerRow: 1,
  row: 1,
  col: 0,
  position: { x: 813.6666666666667, y: 460 }
}
[2025-10-25T01:45:09.666Z] [INFO   ] [STREAM] Preparing Trigger on New Email (node-1761356708605-0)
[2025-10-25T01:45:10.469Z] [INFO   ] [STREAM] Starting configuration for Trigger on New Email (node-1761356708605-0)
[2025-10-25T01:45:14.658Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [ 'node_type', 'trigger', 'options' ],
  finalConfigKeys: [ 'node_type', 'trigger', 'options', 'from' ],
  fallbackFields: [ 'from' ]
}
[2025-10-25T01:45:14.659Z] [INFO   ] [STREAM] Configuring 4 fields for Trigger on New Email: node_type, trigger, options, from
[2025-10-25T01:45:14.659Z] [INFO   ] [STREAM] Setting field node_type = gmail_trigger_new_email for Trigger on New Email
[2025-10-25T01:45:14.961Z] [INFO   ] [STREAM] Setting field trigger = [object Object] for Trigger on New Email
[2025-10-25T01:45:15.265Z] [INFO   ] [STREAM] Setting field options = [object Object] for Trigger on New Email
[2025-10-25T01:45:15.568Z] [INFO   ] [STREAM] Setting field from = inbox@placeholder.com for Trigger on New Email
[2025-10-25T01:45:16.371Z] [INFO   ] [STREAM] Skipping test for trigger Trigger on New Email
[2025-10-25T01:45:18.178Z] [INFO   ] [STREAM] Preparing Send Message to Slack (node-1761356708706-1)
[2025-10-25T01:45:18.981Z] [INFO   ] [STREAM] Starting configuration for Send Message to Slack (node-1761356708706-1)
[2025-10-25T01:49:08.586Z] [INFO   ] [STREAM] Config result: {
  success: true,
  hasConfig: true,
  configKeys: [
  'channel',
  ' // Default channel, can be changed as needed',
  ' // Message includes dynamic content from the trigger',
  ' // Default to not mentioning the user',
  ' // Default to not using attachments'
],
  finalConfigKeys: [
  'channel',
  ' // Default channel, can be changed as needed',
  ' // Message includes dynamic content from the trigger',
  ' // Default to not mentioning the user',
  ' // Default to not using attachments',
  'message'
],
  fallbackFields: [ 'message' ]
}
[2025-10-25T01:49:08.587Z] [INFO   ] [STREAM] Configuring 6 fields for Send Message to Slack: channel,  // Default channel, can be changed as needed,  // Message includes dynamic content from the trigger,  // Default to not mentioning the user,  // Default to not using attachments, message
[2025-10-25T01:49:08.587Z] [INFO   ] [STREAM] Setting field channel = #general for Send Message to Slack
[2025-10-25T01:49:08.889Z] [INFO   ] [STREAM] Setting field  // Default channel, can be changed as needed = New email received from {{trigger.data.from}} with subject: {{trigger.data.subject}} for Send Message to Slack
[2025-10-25T01:49:09.192Z] [INFO   ] [STREAM] Setting field  // Message includes dynamic content from the trigger = false for Send Message to Slack
[2025-10-25T01:49:09.496Z] [INFO   ] [STREAM] Setting field  // Default to not mentioning the user = false for Send Message to Slack
[2025-10-25T01:49:09.799Z] [INFO   ] [STREAM] Setting field  // Default to not using attachments = null for Send Message to Slack
[2025-10-25T01:49:10.104Z] [INFO   ] [STREAM] Setting field message =  for Send Message to Slack
[2025-10-25T01:53:16.046Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.4s (1900 modules)
[2025-10-25T01:53:16.598Z] [INFO   ] 2025-10-25T01:53:16.597Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790509198}
[2025-10-25T01:53:16.852Z] [INFO   ] 2025-10-25T01:53:16.852Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:53:18.560Z] [INFO   ] 2025-10-25T01:53:18.560Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:53:18.560Z","headers":{"referer":"check-console"}}
[2025-10-25T01:53:18.663Z] [INFO   ] 2025-10-25T01:53:18.663Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:53:18.810Z] [INFO   ] 2025-10-25T01:53:18.810Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:53:37.303Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 724ms (1667 modules)
[2025-10-25T01:53:37.364Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:53:37.570Z] [INFO   ] 2025-10-25T01:53:37.570Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790530171}
[2025-10-25T01:53:38.120Z] [INFO   ] 2025-10-25T01:53:38.119Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:53:38.144Z] [INFO   ] 2025-10-25T01:53:38.143Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T01:53:39.162Z] [INFO   ] 2025-10-25T01:53:39.162Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:53:39.162Z","headers":{"referer":"check-console"}}
[2025-10-25T01:53:39.974Z] [INFO   ] 2025-10-25T01:53:39.968Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:53:40.781Z] [INFO   ] 2025-10-25T01:53:40.781Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:53:41.887Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/ai/stream-workflow in 212ms (812 modules)
[2025-10-25T01:53:42.407Z] [INFO   ] 2025-10-25T01:53:42.407Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790535008}
[2025-10-25T01:53:42.620Z] [INFO   ] 2025-10-25T01:53:42.620Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:53:43.609Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:53:43.609Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:53:43.610Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:53:43.610Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:53:43.610Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:54:20.370Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 846ms (1667 modules)
[2025-10-25T01:54:20.531Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:54:20.781Z] [INFO   ] 2025-10-25T01:54:20.781Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790573382}
[2025-10-25T01:54:21.249Z] [INFO   ] 2025-10-25T01:54:21.246Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:54:21.266Z] [INFO   ] 2025-10-25T01:54:21.266Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T01:54:23.366Z] [INFO   ] 2025-10-25T01:54:23.366Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:54:23.366Z","headers":{"referer":"check-console"}}
[2025-10-25T01:54:23.610Z] [INFO   ] 2025-10-25T01:54:23.610Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:54:23.751Z] [INFO   ] 2025-10-25T01:54:23.750Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:54:26.544Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:54:26.545Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:54:26.545Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:54:26.545Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:54:26.545Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:55:28.214Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 5.4s (5944 modules)
[2025-10-25T01:55:28.697Z] [INFO   ] 2025-10-25T01:55:28.697Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790641297}
[2025-10-25T01:55:29.086Z] [INFO   ] 2025-10-25T01:55:29.086Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:55:30.024Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T01:55:30.074Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 584ms (4279 modules)
[2025-10-25T01:55:30.963Z] [INFO   ] 2025-10-25T01:55:30.963Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:55:30.963Z","headers":{"referer":"check-console"}}
[2025-10-25T01:55:31.040Z] [INFO   ] 2025-10-25T01:55:31.040Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:55:31.139Z] [INFO   ] 2025-10-25T01:55:31.139Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:55:39.794Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 1285ms (5939 modules)
[2025-10-25T01:55:40.019Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:55:40.284Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled (5944 modules)
[2025-10-25T01:55:40.468Z] [INFO   ] 2025-10-25T01:55:40.468Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790653069}
[2025-10-25T01:55:41.006Z] [INFO   ] 2025-10-25T01:55:41.006Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:55:41.006Z"}
[2025-10-25T01:55:41.018Z] [INFO   ] 2025-10-25T01:55:41.018Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:55:41.018Z"}
[2025-10-25T01:55:41.018Z] [INFO   ] 2025-10-25T01:55:41.018Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:55:41.018Z"}
[2025-10-25T01:55:41.265Z] [INFO   ] 2025-10-25T01:55:41.264Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:55:41.592Z] [INFO   ] 2025-10-25T01:55:41.591Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T01:55:42.552Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/auth/profile ...
[2025-10-25T01:55:42.614Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/auth/profile in 636ms (4279 modules)
[2025-10-25T01:55:44.868Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T01:55:45.390Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T01:55:45.832Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T01:55:46.366Z] [INFO   ] 2025-10-25T01:55:46.366Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:55:46.366Z","headers":{"referer":"check-console"}}
[2025-10-25T01:55:46.570Z] [INFO   ] 2025-10-25T01:55:46.570Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:55:46.729Z] [INFO   ] 2025-10-25T01:55:46.729Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:55:48.707Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1435ms (5946 modules)
[2025-10-25T01:55:48.904Z] [INFO   ] 2025-10-25T01:55:48.904Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790661505}
[2025-10-25T01:55:49.229Z] [INFO   ] 2025-10-25T01:55:49.228Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:55:50.366Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:55:50.367Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:55:50.367Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:55:50.367Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:55:50.367Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:55:56.617Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1094ms (5946 modules)
[2025-10-25T01:55:56.682Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:55:56.883Z] [INFO   ] 2025-10-25T01:55:56.883Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790669484}
[2025-10-25T01:55:57.314Z] [INFO   ] 2025-10-25T01:55:57.313Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:55:57.313Z"}
[2025-10-25T01:55:57.325Z] [INFO   ] 2025-10-25T01:55:57.325Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:55:57.325Z"}
[2025-10-25T01:55:57.325Z] [INFO   ] 2025-10-25T01:55:57.325Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:55:57.325Z"}
[2025-10-25T01:55:57.590Z] [INFO   ] 2025-10-25T01:55:57.589Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:55:57.890Z] [INFO   ] 2025-10-25T01:55:57.890Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T01:56:00.741Z] [INFO   ] 2025-10-25T01:56:00.741Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:56:00.741Z","headers":{"referer":"check-console"}}
[2025-10-25T01:56:00.921Z] [INFO   ] 2025-10-25T01:56:00.921Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:56:01.034Z] [INFO   ] 2025-10-25T01:56:01.034Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:56:03.513Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:56:03.514Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:56:03.514Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:56:03.515Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:56:03.515Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:56:16.813Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1465ms (5946 modules)
[2025-10-25T01:56:17.074Z] [INFO   ] 2025-10-25T01:56:17.074Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790689675}
[2025-10-25T01:56:17.500Z] [INFO   ] 2025-10-25T01:56:17.500Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:56:46.838Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 3.1s (5944 modules)
[2025-10-25T01:56:47.220Z] [INFO   ] 2025-10-25T01:56:47.220Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790719821}
[2025-10-25T01:56:47.944Z] [INFO   ] 2025-10-25T01:56:47.944Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:56:47.944Z"}
[2025-10-25T01:56:47.957Z] [INFO   ] 2025-10-25T01:56:47.957Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:56:47.957Z"}
[2025-10-25T01:56:47.957Z] [INFO   ] 2025-10-25T01:56:47.957Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:56:47.957Z"}
[2025-10-25T01:56:48.050Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:56:48.465Z] [INFO   ] 2025-10-25T01:56:48.465Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:56:48.770Z] [INFO   ] 2025-10-25T01:56:48.770Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T01:56:50.053Z] [INFO   ] 2025-10-25T01:56:50.053Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:56:50.053Z","headers":{"referer":"check-console"}}
[2025-10-25T01:56:50.162Z] [INFO   ] 2025-10-25T01:56:50.162Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:56:50.249Z] [INFO   ] 2025-10-25T01:56:50.248Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:56:52.579Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:56:52.579Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:56:52.579Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:56:52.579Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:56:52.579Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:57:14.721Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1934ms (5948 modules)
[2025-10-25T01:57:14.973Z] [INFO   ] 2025-10-25T01:57:14.973Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790747574}
[2025-10-25T01:57:15.502Z] [INFO   ] 2025-10-25T01:57:15.501Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:58:52.323Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 3.7s (5920 modules)
[2025-10-25T01:58:52.798Z] [INFO   ] 2025-10-25T01:58:52.798Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790845398}
[2025-10-25T01:58:53.250Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T01:58:53.299Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 590ms (4270 modules)
[2025-10-25T01:58:53.454Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:58:53.956Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 0ms (4272 modules)
[2025-10-25T01:58:54.391Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4274 modules)
[2025-10-25T01:58:54.844Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1ms (4274 modules)
[2025-10-25T01:58:55.262Z] [INFO   ] 2025-10-25T01:58:55.262Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:58:55.262Z"}
[2025-10-25T01:58:55.263Z] [INFO   ] 2025-10-25T01:58:55.262Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:58:55.262Z"}
[2025-10-25T01:58:55.263Z] [INFO   ] 2025-10-25T01:58:55.263Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:58:55.263Z"}
[2025-10-25T01:58:55.690Z] [ERROR  ] 2025-10-25T01:58:55.690Z [ERROR] Collaboration join error: {"code":"ECONNRESET"}
[2025-10-25T01:58:55.962Z] [INFO   ] 2025-10-25T01:58:55.961Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:58:56.288Z] [INFO   ] 2025-10-25T01:58:56.287Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T01:58:56.972Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/auth/profile in 0ms (4274 modules)
[2025-10-25T01:59:01.731Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1ms (4277 modules)
[2025-10-25T01:59:01.874Z] [INFO   ] 2025-10-25T01:59:01.874Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:59:01.874Z","headers":{"referer":"check-console"}}
[2025-10-25T01:59:02.143Z] [INFO   ] 2025-10-25T01:59:02.143Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:59:02.439Z] [INFO   ] 2025-10-25T01:59:02.439Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:59:03.323Z] [INFO   ] 2025-10-25T01:59:03.322Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:59:03.322Z","headers":{"referer":"check-console"}}
[2025-10-25T01:59:03.432Z] [INFO   ] 2025-10-25T01:59:03.432Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:59:04.992Z] [INFO   ] 2025-10-25T01:59:04.992Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:59:07.605Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:59:07.606Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:59:07.606Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:59:07.606Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:59:07.606Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T01:59:38.343Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/collaborators ...
[2025-10-25T01:59:39.858Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 5.7s (5948 modules)
[2025-10-25T01:59:41.028Z] [INFO   ] 2025-10-25T01:59:41.028Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790893629}
[2025-10-25T01:59:41.425Z] [INFO   ] 2025-10-25T01:59:41.425Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:59:42.347Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/leave ...
[2025-10-25T01:59:42.399Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/leave in 622ms (4281 modules)
[2025-10-25T01:59:45.186Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.1s (5950 modules)
[2025-10-25T01:59:45.849Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T01:59:45.868Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4281 modules)
[2025-10-25T01:59:46.135Z] [INFO   ] 2025-10-25T01:59:46.135Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790898736}
[2025-10-25T01:59:46.629Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1ms (4281 modules)
[2025-10-25T01:59:47.528Z] [INFO   ] 2025-10-25T01:59:47.528Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:59:47.528Z"}
[2025-10-25T01:59:47.542Z] [INFO   ] 2025-10-25T01:59:47.542Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T01:59:47.542Z"}
[2025-10-25T01:59:47.542Z] [INFO   ] 2025-10-25T01:59:47.542Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T01:59:47.542Z"}
[2025-10-25T01:59:47.776Z] [ERROR  ] 2025-10-25T01:59:47.776Z [ERROR] Collaboration join error: {"code":"ECONNRESET"}
[2025-10-25T01:59:47.861Z] [INFO   ] 2025-10-25T01:59:47.861Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:59:48.209Z] [INFO   ] 2025-10-25T01:59:48.209Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T01:59:49.203Z] [INFO   ] 2025-10-25T01:59:49.203Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T01:59:49.203Z","headers":{"referer":"check-console"}}
[2025-10-25T01:59:49.463Z] [INFO   ] 2025-10-25T01:59:49.463Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T01:59:49.723Z] [INFO   ] 2025-10-25T01:59:49.722Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T01:59:54.538Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1978ms (5950 modules)
[2025-10-25T01:59:54.748Z] [INFO   ] 2025-10-25T01:59:54.748Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790907349}
[2025-10-25T01:59:55.154Z] [INFO   ] 2025-10-25T01:59:55.154Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T01:59:55.228Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T01:59:55.228Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:59:55.228Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-docs',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T01:59:55.228Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T01:59:55.228Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T02:00:01.123Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1407ms (5950 modules)
[2025-10-25T02:00:01.598Z] [INFO   ] 2025-10-25T02:00:01.597Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790914197}
[2025-10-25T02:00:02.301Z] [INFO   ] 2025-10-25T02:00:02.301Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T02:00:02.301Z"}
[2025-10-25T02:00:02.313Z] [INFO   ] 2025-10-25T02:00:02.313Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T02:00:02.313Z"}
[2025-10-25T02:00:02.313Z] [INFO   ] 2025-10-25T02:00:02.313Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T02:00:02.313Z"}
[2025-10-25T02:00:02.390Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T02:00:02.674Z] [INFO   ] 2025-10-25T02:00:02.673Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T02:00:02.968Z] [INFO   ] 2025-10-25T02:00:02.968Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T02:00:04.022Z] [INFO   ] 2025-10-25T02:00:04.022Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T02:00:04.022Z","headers":{"referer":"check-console"}}
[2025-10-25T02:00:04.227Z] [INFO   ] 2025-10-25T02:00:04.227Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T02:00:04.411Z] [INFO   ] 2025-10-25T02:00:04.411Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T02:00:06.876Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T02:00:06.880Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'google-docs',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T02:00:06.881Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'google-docs',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T02:00:06.882Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T02:00:06.882Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T02:00:19.695Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 4s (5950 modules)
[2025-10-25T02:00:19.956Z] [INFO   ] 2025-10-25T02:00:19.956Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790932557}
[2025-10-25T02:00:20.382Z] [INFO   ] 2025-10-25T02:00:20.381Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T02:00:54.536Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1299ms (5948 modules)
[2025-10-25T02:00:54.982Z] [INFO   ] 2025-10-25T02:00:54.982Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790967583}
[2025-10-25T02:00:55.716Z] [INFO   ] 2025-10-25T02:00:55.716Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T02:00:55.716Z"}
[2025-10-25T02:00:55.728Z] [INFO   ] 2025-10-25T02:00:55.728Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T02:00:55.728Z"}
[2025-10-25T02:00:55.728Z] [INFO   ] 2025-10-25T02:00:55.728Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T02:00:55.728Z"}
[2025-10-25T02:00:55.778Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T02:00:56.135Z] [INFO   ] 2025-10-25T02:00:56.135Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T02:00:56.471Z] [INFO   ] 2025-10-25T02:00:56.471Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T02:00:58.627Z] [INFO   ] 2025-10-25T02:00:58.627Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T02:00:58.627Z","headers":{"referer":"check-console"}}
[2025-10-25T02:00:58.789Z] [INFO   ] 2025-10-25T02:00:58.789Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T02:00:58.898Z] [INFO   ] 2025-10-25T02:00:58.898Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T02:01:01.435Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T02:01:01.436Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'google-docs',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T02:01:01.436Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'google-docs',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T02:01:01.436Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T02:01:01.436Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T02:01:11.810Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1277ms (5948 modules)
[2025-10-25T02:01:12.459Z] [INFO   ] 2025-10-25T02:01:12.459Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12790985060}
[2025-10-25T02:01:12.928Z] [INFO   ] 2025-10-25T02:01:12.927Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T02:01:31.398Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 2.9s (5948 modules)
[2025-10-25T02:01:31.741Z] [INFO   ] 2025-10-25T02:01:31.741Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12791004342}
[2025-10-25T02:01:32.449Z] [INFO   ] 2025-10-25T02:01:32.449Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T02:01:32.449Z"}
[2025-10-25T02:01:32.463Z] [INFO   ] 2025-10-25T02:01:32.463Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T02:01:32.463Z"}
[2025-10-25T02:01:32.463Z] [INFO   ] 2025-10-25T02:01:32.463Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T02:01:32.463Z"}
[2025-10-25T02:01:32.525Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T02:01:32.829Z] [INFO   ] 2025-10-25T02:01:32.829Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T02:01:33.081Z] [INFO   ] 2025-10-25T02:01:33.081Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T02:01:33.921Z] [INFO   ] 2025-10-25T02:01:33.921Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T02:01:33.921Z","headers":{"referer":"check-console"}}
[2025-10-25T02:01:34.090Z] [INFO   ] 2025-10-25T02:01:34.090Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T02:01:34.242Z] [INFO   ] 2025-10-25T02:01:34.239Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T02:01:36.915Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T02:01:36.916Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'google-docs',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T02:01:36.916Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'google-docs',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T02:01:36.916Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T02:01:36.916Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T02:02:05.304Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/collaboration/collaborators ...
[2025-10-25T02:02:05.316Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/collaboration/collaborators in 523ms (4281 modules)
[2025-10-25T02:02:15.707Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1189ms (5950 modules)
[2025-10-25T02:02:15.973Z] [INFO   ] 2025-10-25T02:02:15.972Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12791048573}
[2025-10-25T02:02:16.345Z] [INFO   ] 2025-10-25T02:02:16.344Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T02:03:04.646Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1398ms (5941 modules)
[2025-10-25T02:03:05.092Z] [INFO   ] 2025-10-25T02:03:05.092Z [DEBUG] [Middleware] Username check: {"path":"/workflows/builder/467df09c-4ea2-4904-977e-f06668a6cd8c","userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","provider":"email","role":"free","username":"nstoddard17","hasUsername":true,"isBetaTester":false,"isNewBetaUser":false,"accountAge":12791097693}
[2025-10-25T02:03:05.517Z] [INFO   ]  [37m[1m‚óã[22m[39m Compiling /api/presence/count ...
[2025-10-25T02:03:05.566Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/presence/count in 584ms (4275 modules)
[2025-10-25T02:03:05.691Z] [WARN   ]  [33m[1m‚ö†[22m[39m Fast Refresh had to perform a full reload due to a runtime error.
[2025-10-25T02:03:06.119Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/integrations in 0ms (4277 modules)
[2025-10-25T02:03:06.649Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T02:03:08.417Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T02:03:08.665Z] [INFO   ] 2025-10-25T02:03:08.665Z [DEBUG] üíß [AUTH] Rehydrating auth state from storage {"hasState":true,"hasUser":false,"initialized":false,"timestamp":"2025-10-25T02:03:08.665Z"}
[2025-10-25T02:03:08.665Z] [INFO   ] 2025-10-25T02:03:08.665Z [DEBUG] üíß [AUTH] State hydrated and reset {"hasUser":false,"initialized":false,"timestamp":"2025-10-25T02:03:08.665Z"}
[2025-10-25T02:03:08.665Z] [INFO   ] 2025-10-25T02:03:08.665Z [DEBUG] ‚è≠Ô∏è [AUTH] Skipping initialization {"hasState":true,"alreadyInitialized":false,"isClient":false,"timestamp":"2025-10-25T02:03:08.665Z"}
[2025-10-25T02:03:08.858Z] [ERROR  ] 2025-10-25T02:03:08.857Z [ERROR] Collaboration join error: {"code":"ECONNRESET"}
[2025-10-25T02:03:09.289Z] [INFO   ] 2025-10-25T02:03:09.288Z [DEBUG] [Username Check] {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0","hasEmail":true,"provider":"email","hasUsername":true,"isGoogleUser":false}
[2025-10-25T02:03:09.645Z] [INFO   ] 2025-10-25T02:03:09.644Z [INFO] [NewWorkflowBuilderContent] URL params: {"aiChat":"true","hasInitialPrompt":true,"initialPrompt":"when I get an email send it to slack"}
[2025-10-25T02:03:10.200Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4279 modules)
[2025-10-25T02:03:11.059Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled /api/auth/profile in 0ms (4279 modules)
[2025-10-25T02:03:11.091Z] [INFO   ] 2025-10-25T02:03:11.091Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T02:03:11.091Z","headers":{"referer":"check-console"}}
[2025-10-25T02:03:11.318Z] [INFO   ] 2025-10-25T02:03:11.318Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T02:03:11.513Z] [INFO   ] 2025-10-25T02:03:11.513Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T02:03:11.802Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4281 modules)
[2025-10-25T02:03:12.359Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 0ms (4281 modules)
[2025-10-25T02:03:12.388Z] [INFO   ] 2025-10-25T02:03:12.388Z [DEBUG] üìç [API /api/integrations] GET request received {"timestamp":"2025-10-25T02:03:12.388Z","headers":{"referer":"check-console"}}
[2025-10-25T02:03:12.530Z] [INFO   ] 2025-10-25T02:03:12.530Z [DEBUG] ‚úÖ [API /api/integrations] User authenticated {"userId":"a3e3a51a-175c-4b59-ad03-227ba12a18b0"}
[2025-10-25T02:03:12.689Z] [INFO   ] 2025-10-25T02:03:12.689Z [DEBUG] üìä [API /api/integrations] Query result {"count":14,"error":null,"firstFew":[{"provider":"notion","status":"connected"},{"provider":"mailchimp","status":"connected"}]}
[2025-10-25T02:03:12.994Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1ms (4281 modules)
[2025-10-25T02:03:15.428Z] [INFO   ] [Prerequisite Check] Required apps: [ 'gmail', 'slack' ]
[2025-10-25T02:03:15.428Z] [INFO   ] [Prerequisite Check] Connected integrations: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'google-docs',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T02:03:15.429Z] [INFO   ] [Prerequisite Check] Normalized connected: [
  'notion',
  'mailchimp',
  'gmail',
  'google-sheets',
  'google-drive',
  'facebook',
  'google-docs',
  'trello',
  'slack',
  'twitter',
  'dropbox',
  'google-calendar',
  'airtable',
  'google_calendar'
]
[2025-10-25T02:03:15.429Z] [INFO   ] [Prerequisite Check] Checking gmail (normalized: gmail): CONNECTED
[2025-10-25T02:03:15.429Z] [INFO   ] [Prerequisite Check] Checking slack (normalized: slack): CONNECTED
[2025-10-25T02:03:48.534Z] [INFO   ]  [32m[1m‚úì[22m[39m Compiled in 1617ms (5948 modules)
[2025-10-25T02:03:48.565Z] [WARN   ]  [33m[1m‚ö†[22m[39m Server is approaching the used memory threshold, restarting...
