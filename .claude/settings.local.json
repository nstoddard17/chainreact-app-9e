{
  "permissions": {
    "allow": [
      "Bash(npm run dev:*)",
      "Bash(npm run lint)",
      "Bash(npm run build:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(rm:*)",
      "Bash(grep:*)",
      "Bash(git pull:*)",
      "Bash(taskkill:*)",
      "Bash(npx tsc:*)",
      "Bash(node:*)",
      "Bash(curl:*)",
      "Bash(npx ts-node:*)",
      "Bash(node:*)",
      "Bash(rm:*)",
      "Bash(cp:*)",
      "Bash(mkdir:*)",
      "Bash(tar:*)",
      "Bash(rg:*)",
      "Bash(cat:*)",
      "Bash(sed:*)",
      "Read(c:\\Users\\marcu\\OneDrive\\Pictures\\ChainReact\\New folder/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\stores/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\stores/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\services/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\app\\api\\integrations/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\app\\api\\integrations\\available/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\lib\\integrations/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\lib\\integrations/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\lib\\integrations/**)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_wait_for",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\stores/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\stores/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "Read(/C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows/**)",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_handle_dialog",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_close",
      "Bash(powershell:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "mcp__playwright__browser_file_upload",
      "Bash(timeout:*)",
      "Bash(dir /s /b C:Usersmarcusourcereposchainreact-app-9e-1libworkflowsnodesproviders*.ts)",
      "Bash(dir /b \"C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\components\\workflows\\configuration\\providers\\gmail\")",
      "Bash(dir /b \"C:\\Users\\marcu\\source\\repos\\chainreact-app-9e-1\\lib\\workflows\")",
      "Bash(dir:*)",
      "Bash(npx supabase db execute:*)",
      "Bash(supabase migration:*)",
      "Bash(where:*)",
      "Bash(supabase db:*)",
      "Bash(del nul)",
      "Read(//c/Users/marcu/source/repos/**)",
      "Read(//c/**)",
      "Bash(psql:*)",
      "Bash(npm run refresh-tokens:verbose:*)",
      "Bash(choco:*)",
      "Bash(move:*)",
      "Bash(npx supabase:*)",
      "Bash(set SUPABASE_ACCESS_TOKEN=sbp_6e76ca62d7e57dc33385eac73a5d3f97b7fa5e4d)",
      "Bash(if exist nul del nul)",
      "Bash(git clean:*)",
      "Bash(git rm:*)",
      "Bash(del \"c:\\Users\\marcu\\source\\repos\\nstoddard17\\chainreact-app-9e\\app\\api\\webhooks\\microsoft\\route_BACKUP.ts\")",
      "Bash(npm install:*)",
      "Bash(git log:*)",
      "Bash(awk:*)",
      "Bash(find:*)",
      "Bash(for file in app/api/integrations/discord/gateway-status/route.ts app/api/microsoft-graph/auto-subscribe/route.ts app/api/webhooks/notion/route.ts \"app/api/workflows/[id]/test-session/route.ts\")",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(perl:*)",
      "Bash(while read file)",
      "Bash(do grep -L \"from ''''@/lib/utils/api-response''''\" \"$file\")",
      "Bash(do if ! grep -q \"from ''''@/lib/utils/api-response''''\" \"$file\")",
      "Bash(then echo \"$file\")",
      "Bash(fi)",
      "Bash(for file in app/api/*/route.ts)",
      "Bash(do if grep -q \"jsonResponse\\|errorResponse\" \"$file\")",
      "Bash(then if ! grep -q \"api-response\" \"$file\")",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(if grep -q \"from [''\"\"]next/server[''\"\"]\" \"$file\")",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(git checkout:*)",
      "Bash(git stash:*)",
      "Bash(do grep -A 20 \"isTrigger: true\" \"$file\")",
      "Bash(do echo \"=== $trigger ===\")",
      "Bash(wait)",
      "Bash(if [ -z \"$SUPABASE_ACCESS_TOKEN\" ])",
      "Bash(then echo \"NOT_SET\")",
      "Bash(else echo \"SET\")"
    ],
    "defaultMode": "acceptEdits"
  }
}
